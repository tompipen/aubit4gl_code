head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	90.04.05.11.02.11;	author john;	state Exp;
branches;
next	1.4;

1.4
date	89.05.26.14.49.38;	author john;	state Exp;
branches;
next	1.3;

1.3
date	88.07.20.20.14.39;	author john;	state Exp;
branches;
next	1.2;

1.2
date	88.07.20.20.13.11;	author john;	state Exp;
branches;
next	1.1;

1.1
date	88.02.19.15.43.27;	author john;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Add sccs string
@
text
@{
	@@(#)$Id: translog.old,v 1.1 2002-06-14 05:03:47 afalout Exp $
	@@(#)Sphinx Informix Tools: General Library
	@@(#)Handle transactions whether database has log or not
	@@(#)Author: JL
}

{ Global to this file -- not accessible outside }
DEFINE
	logstatus	INTEGER
	{ 0 => State of log unknown, 1 => Log absent, 2 => Log present }

{ Determine whether there is a transaction log }
FUNCTION	translog()

	DEFINE
		sccs	CHAR(1),
		junk	INTEGER

	IF logstatus = 0 THEN
		WHENEVER ERROR CONTINUE
		SELECT Tabid
			INTO junk
			FROM Systables
			WHERE Systables.Tabtype = 'L'
		IF STATUS != 0 THEN
			LET logstatus = 1 { Log absent }
		ELSE
			LET logstatus = 2 { Log present }
			LET sccs = "@@(#)$Id: translog.old,v 1.1 2002-06-14 05:03:47 afalout Exp $"
		END IF
		WHENEVER ERROR STOP
	END IF

	RETURN (logstatus = 2)

END FUNCTION {translog}

{ Begin a transaction if there is a log }
FUNCTION begin_work()

	IF translog() THEN
		BEGIN WORK
	END IF

END FUNCTION {begin_work}

{ Commit a transaction if there is a log }
FUNCTION commit_work()

	IF translog() THEN
		COMMIT WORK
	END IF

END FUNCTION {commit_work}

{ Rollback transaction if there is a log }
FUNCTION rollback_work()

	IF translog() THEN
		ROLLBACK WORK
	END IF

END FUNCTION {rollback_work}

{ Terminate a transaction }
FUNCTION end_work(state)

	DEFINE
		state	INTEGER

	IF state != 0 THEN
		CALL rollback_work()
	ELSE
		CALL commit_work()
	END IF

END FUNCTION {end_work}
@


1.4
log
@Fix heading
@
text
@d17 1
d30 1
@


1.3
log
@Add some error protection
@
text
@d3 1
a3 1
	@@(#)KPI Database Project: General Library
@


1.2
log
@Remove database line -- unnecessary
@
text
@d20 1
d25 1
a25 1
		IF STATUS = NOTFOUND THEN
d30 1
@


1.1
log
@Initial revision
@
text
@a7 2
DATABASE KPI

@
