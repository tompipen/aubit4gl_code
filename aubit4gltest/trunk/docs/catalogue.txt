This output was created using command 'run_tests -info'
on Tue Sep 18 08:41:38 BST 2007
 
run_tests: WARNING: Database type not checked or set
run_tests: WARNING: A4GL_TARGETDIALECT not specified
 ------------------- Info for test 1 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Test setting some basic types to null

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE DDL_MONEY DDL_DATE DDL_DATETIME DROP_TABLE  DEFINE_LIKE DDL_DECIMAL ANSI_INSERT ANSI_DELETE DEFINE_CHAR DEFINE_SMALLINT DEFINE_INTEGER DEFINE_FLOAT DEFINE_DECIMAL DEFINE_DATE DEFINE_MONEY DEFINE_DATETIME STATUS IF UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 3 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Simple menu test

Test is P-CODE testing enabled
Test waits for user's input in CONSOLE mode, because automated testing
was not implemented there, so we must skip them untill this is implemented
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 4 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Simple PROMPT

test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 6 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


testing fgl_drawbox

Test that use graphic characters in forms that may be platform dependent
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 8 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Simple ERROR statement

test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 9 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Compilation and linking using GLOBALS

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 10 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Simple combination of UI commands

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 11 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Basic UI exercising

Test contains REPORT block
Test will fail if not running on screen (curses)
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 12 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Decimal handling

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 13 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


4GL comparison testing

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 14 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Simple foreach handling

Test contains REPORT block
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: CURSOR_SELECT IFX_SYSTABLES   DEFINE_CHAR DEFINE_INTEGER USE_REPORT FOREACH UI_DISPLAY_LINE_MODE DISPLAY IF EXIT_PROGRAM_EXPR REPORT_ORDER_BY REPORT_FIRST_PAGE_HEADER ON_EVERY_ROW  FIRST_PAGE_HEADER
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 15 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Prompt testing

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 21 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Pretty empty report

Test contains REPORT block
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 22 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Input array testing

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 23 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


input without defaults

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 24 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Fairly comprehensive Input test

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 25 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Another simple report - with page header and page trailer

Test contains REPORT block
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 26 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


More input array testing

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 27 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


before field/next field in an input

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 28 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Very basic datetime arithmetic

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 29 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Testing for memory corruption (obsolete ?)

Test uses .per form files
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 30 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Checking field values in before clauses in Input array

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 31 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


INPUT from a wordwrap field

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 32 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Another simple report test

Test contains REPORT block
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 33 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Next field in before row

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 34 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


exit input in input array

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 35 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Check for an early arithmetic bug

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 36 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Test a foreach when an open has already been done

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE CLOSE_CURSOR DROP_TABLE  CURSOR_SELECT FOREACH UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 37 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 38 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 39 -----------------------
Test contains REPORT block
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 40 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 41 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 42 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 47 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 48 -----------------------
Test contains REPORT block
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 49 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 50 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 51 -----------------------
Test contains REPORT block
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 52 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 53 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 54 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 56 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 57 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 58 -----------------------
*** Test not described ***
Test uses .per form files
test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 59 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 60 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 61 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 62 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 63 -----------------------
*** Test not described ***
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE ANSI_INSERT ANSI_SELECT CURSOR_SELECT  DEFINE_CHAR DEFINE_SMALLINT DEFINE_INTEGER USES_FORM UI_DISPLAY_FORM UI_CONSTRUCT MESSAGE EXIT_CONSTRUCT EXIT_PROGRAM_EXPR PREPARE FOREACH IF CLOSE_FORM  DISPLAY_FORM CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 64 -----------------------

Some report GROUP , header and footer checks

Test contains REPORT block
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 65 -----------------------
*** Test not described ***
test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 66 -----------------------
*** Test not described ***
Test takes more then 10 minutes to compile or run
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 67 -----------------------
*** Test not described ***
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 68 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Null string date/datetime checking

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE  DEFINE_DATE DEFINE_DATETIME ANSI_INSERT UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 69 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 70 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 71 -----------------------
Test contains REPORT block
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 72 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Simple report checking when using ORDER BY (not ORDER EXTERNAL..)

Test contains REPORT block
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: REPORT_ORDER_BY   USE_REPORT DEFINE_CHAR DEFINE_SMALLINT REPORT_FIRST_PAGE_HEADER ON_EVERY_ROW IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM ON_LAST_ROW  FIRST_PAGE_HEADER
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 73 -----------------------

declare.. into.. fetch (no var)

Test needs database
Uses SQL statemets features: CREATE_TEMP_TABLE ANSI_INSERT CURSOR_SELECT  DEFINE_CHAR DEFINE_INTEGER FOREACH UI_DISPLAY_LINE_MODE DISPLAY

 ------------------- Info for test 74 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Test that use graphic characters in forms that may be platform dependent
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 75 -----------------------
Test contains REPORT block
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 76 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Basic DB exercising of Datetimes

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE DDL_DATETIME  DEFINE_DATETIME UI_DISPLAY_LINE_MODE DISPLAY ANSI_INSERT INITIALIZE_NULL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 77 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 78 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 79 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 80 -----------------------

Some simple form handling

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_DECIMAL DDL_DECIMAL CREATE_TEMP_TABLE ANSI_INSERT USES_FORM UI_DISPLAY_FORM DISPLAY_BY_NAME UI_INPUT_BY_NAME ERROR UPDATE_COLUMN_EQ_VALUE_LIST UI_DISPLAY_AT DISPLAY   DISPLAY_FORM
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 82 -----------------------
Test contains REPORT block
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 84 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 86 -----------------------
*** Test not described ***
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 90 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 91 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Old makefile

Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: PUT_CURSOR  DEFINE_INTEGER DEFINE_CHAR CREATE_TEMP_TABLE PREPARE CURSOR_SELECT OPEN_CURSOR CLOSE_CURSOR INITIALIZE_NULL FOREACH UI_DISPLAY_LINE_MODE DISPLAY  BEGIN_WORK COMMIT_WORK
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 92 -----------------------
*** Test not described ***
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 93 -----------------------
Test contains REPORT block
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 94 -----------------------

insert,declare,foreach

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR CREATE_TEMP_TABLE ANSI_INSERT ORDER_BY_DESC ORDER_BY CURSOR_SELECT FOREACH UI_DISPLAY_LINE_MODE DISPLAY 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 95 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


UPDATE ... WHERE CURRENT OF..

Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE SELECT_FOR_UPDATE UPDATE_WHERE_CURRENT_OF  DEFINE_INTEGER DEFINE_CHAR ANSI_INSERT CURSOR_SELECT_FOR_UPDATE CURSOR_SELECT FOREACH UPDATE_COLUMN_EQ_VALUE_LIST ORDER_BY UI_DISPLAY_LINE_MODE DISPLAY  BEGIN_WORK COMMIT_WORK
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 96 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 97 -----------------------
*** Test not described ***
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 98 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Some basic testing of sqlerrd[2] and sqlerrd[6] (SERIAL)

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE DDL_SERIAL  DEFINE_INTEGER UI_DISPLAY_LINE_MODE DISPLAY ANSI_INSERT STATUS SQLCA_SQLERRD2 SQLCA_SQLERRD6 IF CURSOR_SELECT FOREACH EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 99 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Test of Aubit4GL extension - IN and EXISTS as 4GL expression

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE ANSI_SELECT  DEFINE_CHAR ET_EXPR_IN IF UI_DISPLAY_LINE_MODE DISPLAY ANSI_INSERT ET_EXPR_IN_SELECT ET_EXPR_EXISTS  EXPR_IN EXPR_IN_SELECT EXPR_EXISTS
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 100 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


insert cursor (in a similar way to an order by report)

Test contains REPORT block
Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: PUT_CURSOR  DEFINE_CHAR DEFINE_INTEGER UI_DISPLAY_LINE_MODE DISPLAY CREATE_TEMP_TABLE PREPARE CURSOR_SELECT OPEN_CURSOR FOR CLOSE_CURSOR FOREACH ANSI_DELETE IFX_SYSTABLES INSERT_INTO_SELECT_FROM ANSI_INSERT USE_REPORT REPORT_ORDER_BY ON_EVERY_ROW  BEGIN_WORK COMMIT_WORK
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 101 -----------------------

Tests for NOTFOUND status code after select statement executed on empty temporary table.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE ANSI_SELECT STATUS  DEFINE_SMALLINT IF EXIT_PROGRAM_EXPR UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 102 -----------------------

Test for starmasked display when displaying numerical value To field too short to show all numbers.

Test uses .per form files
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 103 -----------------------

Geraman characters (umlauts) test. Needs explicit LANG setting (provided by makefile).

Test uses .per form files
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 104 -----------------------

CONSTRUCT BY NAME without FROM clause.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 105 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 106 -----------------------

SELECT FIRST and SQL - END SQL block

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: SQL_END_SQL_BLOCK SELECT_RELATIVE  SELECT_FIRST DEFINE_CHAR CREATE_TEMP_TABLE ANSI_INSERT SQL_BLOCK UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 107 -----------------------

UNLOAD TO with SELECT statement and WHERE part

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE UNLOAD_TO_SELECT_FROM  DEFINE_INTEGER DEFINE_CHAR ANSI_INSERT UNLOAD_TO
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 108 -----------------------

Testing for invalid file name in UNLOAD

Test is expected to exit with code 1
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE UNLOAD_TO_SELECT_FROM  DEFINE_INTEGER DEFINE_CHAR ANSI_INSERT UI_DISPLAY_LINE_MODE DISPLAY UNLOAD_TO
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 109 -----------------------

Test for core dump when opening a cursor

Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE SCROLL_CURSOR FETCH_RELATIVE CLOSE_CURSOR  SELECT_FOR_UPDATE_CURSOR BEGIN_WORK ROLLBACK_WORK  DEFINE_CHAR DEFINE_DATE UI_DISPLAY_LINE_MODE DISPLAY DDL_DATE ANSI_INSERT PREPARE CURSOR_SELECT OPEN_CURSOR FETCH_FIRST CURSOR_SELECT_FOR_UPDATE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 110 -----------------------

Test for core dump in LOAD FROM

Test needs database
Uses SQL statemets features: DROP_TABLE CREATE_TEMP_TABLE LOAD_FROM_INSERT_INTO SELECT_COUNT  DEFINE_SMALLINT DEFINE_CHAR RUN IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR INITIALIZE_NULL CASE_EXPR ERROR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 111 -----------------------

channel functions - 4js Aubit and Querix only

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 112 -----------------------

Opening resource files from DBPATH

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 113 -----------------------

Test for invalid cursor type & name detection that was causing : Warning - cursor FLUSH was previously thought to be a SELECT cursor but now turns out to be an INSERT cursor.You will need to add PRAGMA EMULATE INSERT CURSOR FOR FLUSH Note that this test explicityly sets A4GL_INCOMPAT_AT_RUNTIME=YES (compiling KL1a.4gl in OneMaxx)

Test is compile only, no execution will be attempted
Test needs database
Uses SQL statemets features: CREATE_TEMP_TABLE ANSI_SELECT INSERT_CURSOR META_TRANSACTION   DEFINE_CHAR PREPARE CURSOR_SELECT ANSI_INSERT BEGIN_WORK OPEN_CURSOR PUT_CURSOR FLUSH ROLLBACK_WORK DEFINE_SMALLINT CURSOR_SELECT_FOR_UPDATE FOREACH COMMIT_WORK
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 114 -----------------------

Test for declaring insert cursor with static (not variable) value in insert cursor declaration This was causing Aubit to print EC code (INFORMIX dialect) with missing opening left curly bracket.

Test is compile only, no execution will be attempted
Test needs database
Uses SQL statemets features: INSERT_CURSOR  DEFINE_CHAR ANSI_INSERT CURSOR_SELECT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 115 -----------------------

Statement re-use without closing

Test needs database
Uses SQL statemets features: META_REUSE_CURSOR  DEFINE_SMALLINT CREATE_TEMP_TABLE DEFINE_CHAR PREPARE CURSOR_SELECT SCROLL_CURSOR OPEN_CURSOR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 202 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Multiple input statements

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 203 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


4Jstyle dynamic array handling

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 204 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Test of the 'ord' function

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 205 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Simple test of 'showhelp' function

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 206 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Simple test of what happens when a row is not returned from a select

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE  DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 207 -----------------------

This test checks the validity of date/datetime comparisons Its more for the SQL side than 4GL..

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE DDL_DATETIME DDL_DATE FUNC_EXTEND  DEFINE_CHAR DEFINE_DATETIME DEFINE_DATE UI_DISPLAY_LINE_MODE DISPLAY ANSI_INSERT EXTEND SELECT_COUNT UPDATE_COLUMN_EQ_VALUE_LIST EXIT_PROGRAM_EXPR IF
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 208 -----------------------

This program checks for the validity of the null test for integers This was known to be wrong for one platform and has been changed - This is to pick it up if it happens again..

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 209 -----------------------

This test checks that the return key moves down in a display array

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 210 -----------------------

this test detects whether the prompt statement properly handles non-ascii keypresses when 'for char' is used

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 211 -----------------------

this tests the field validation processing for a few datatypes

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 212 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


VALIDATE check

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT VALIDATE_LIKE  ANSI_DELETE DEFINE_LIKE STATUS IF EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 213 -----------------------

This test checks that a format of ####,### works correctly MID:407

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 214 -----------------------

Check last record when a row is inserted into an input array (MID408)

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 215 -----------------------

This checks the field validation processing for Input Array

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 216 -----------------------

Tests an empty report can be compiled - don't need to check the output...

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 217 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


_variable(...) handling test - also tests shared library creation

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 218 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


ONC RPC client/server test

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 219 -----------------------

Test for screen flickering when RUN'ing many sequential shell statements

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 220 -----------------------

This is a test of menu flattening

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 221 -----------------------

This tests the scroll command

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 222 -----------------------

This is a check for datatypes within a form (MID 410)

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 223 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


This test exercises the 'scroll' command

test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 224 -----------------------

This tests that a date + integer = datetime works properly (MID 425)

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 225 -----------------------

This tests the return type for some date/integer arithmetic

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 226 -----------------------

This tests embedded ^L (FF) in the 4gl code

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 227 -----------------------

This is a test to check some bug fixes reported by Art Kagel

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE DDL_DATETIME  DEFINE_CHAR DEFINE_INTEGER DEFINE_SMALLINT ANSI_INSERT LET_MANY FOR UI_DISPLAY_LINE_MODE DISPLAY IF EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 228 -----------------------

This is a short test for the associative arrays

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 229 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


This test checks that the comments are removed after an input/input array

test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 230 -----------------------

This is a test to ensure that the message line and prompt lines are calculated correctly

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 231 -----------------------

This tests the functionality of PgDn within a display array This can be modified by setting A4GL_SCROLLTOEND=Y (in which case the test will fail)

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 232 -----------------------

This is a test of resetting the current window within an input statement

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 233 -----------------------

This is a test to ensure the current window is set within an Input Array/Display Array

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 234 -----------------------

This is a test of basic Insert Cursor/PUT functionality

Test is expected to exit with code 
Test needs database
Database MUST NOT have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: PUT_CURSOR  DEFINE_CHAR DEFINE_INTEGER CREATE_TEMP_TABLE PREPARE CURSOR_SELECT OPEN_CURSOR CLOSE_CURSOR UI_DISPLAY_LINE_MODE DISPLAY ANSI_INSERT ORDER_BY FOREACH
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 235 -----------------------

Tests input by name ... without defaults

Test is expected to exit with code 
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 236 -----------------------

This is a test of the CLEAR SCREEN statement - to ensure it does a current window is screen first

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 237 -----------------------

Tests variable manupulation within report

Test contains REPORT block
Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 238 -----------------------

Tests before field, after field, on key and errorlog

Test is expected to exit with code 
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 239 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


Test of compiling a form into an executable (using fcompile -c)

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 240 -----------------------

This is a test of the USING keyword

Test is expected to exit with code 
**** TEST EXPECTED TO FAIL BECAUSE OF THE AUBIT4GL BUG ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 241 -----------------------

This is a of some after field datatype validation

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 242 -----------------------

This is a simple test for some UI elements

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 244 -----------------------

This is a test to check for before/after fields in a construct MID 459

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_INTEGER USES_FORM UI_DISPLAY_FORM UI_CONSTRUCT IF UI_DISPLAY_LINE_MODE DISPLAY SLEEP EXIT_PROGRAM_EXPR   DISPLAY_FORM CONSTRUCT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 245 -----------------------

Tests skipping over a display only field in an input array MID 471

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 246 -----------------------

This tests the RETURN and TAB keys when pressed on the last editable field - with a noentry field after it in an input array

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 247 -----------------------

Check that a prompt line is removed correctly during input

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 248 -----------------------

DECIMAL assignments test

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 249 -----------------------

No idea what this is testing Maybe GUI related. No run-time checking

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 250 -----------------------

display a value which is too large to fit

Test will fail if not running on screen (curses)
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode

 ------------------- Info for test 251 -----------------------

Aubits non-comments {! .. !} treated as comments by other 4GL compilers but not by Aubit4GL

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 252 -----------------------

Tabs vs. spaces in form file.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 253 -----------------------

Tests the menu compilers and decompiler

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 254 -----------------------

This tests the form compilers ability to compile a form with tabs in it

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 255 -----------------------

This tests the ability to create a table with a MONEY field

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TEMP_TABLE DDL_MONEY CREATE_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 256 -----------------------

checks a select with an order by with into temp - tests whether STRIP_ORDER_BY_INTO_TEMP is required eg for use with postgres

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_INTO_TEMP  CREATE_TEMP_TABLE ANSI_INSERT ORDER_BY SELECT_INTO_TEMP_ORDER_BY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 257 -----------------------

This is a test for MID 512

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE  DEFINE_SMALLINT UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 258 -----------------------

Tests mantis bug 516 (private bug) ecpg crashed on declare cursor for select statement - the select statement has an 'into clause' of 3 members of a structure. It works fine when the number is less than 3.

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE ANSI_SELECT  CURSOR_SELECT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 259 -----------------------

This tests the compilers ability to recognise numbers specified with an 'E' (like 1E3 = 1000)

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 260 -----------------------

Test for mantis bug 509 - input array handling with noentry fields

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 261 -----------------------

This is a test for mantis ID 531 - conditional colours in a form not working

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 262 -----------------------

Test relating to mantis bug 529 - after field not triggered at the last row

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 263 -----------------------

Open and display form, checking screen display and spacing.

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 264 -----------------------

This is a test for MID 534 - In comparing a numeric field with a char field, the comparison would fail if the char length is 6 or 8.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 265 -----------------------

This is a basic test of comparing datetimes (MID 537)

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 266 -----------------------

Test for MID 511

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 267 -----------------------

test for mantis id 538 - problem with decimal conversions

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 268 -----------------------

Complex INPUT ARRAY test with ON KEY.

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 269 -----------------------

Tests if 'display at' correctly resets the status variable

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE  DEFINE_CHAR STATUS UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 270 -----------------------

A quick test of the define variable like dbname:tablename.column and record like dbname:tablename.\*

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE_QUALIFIED_PATH  DEFINE_LIKE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 271 -----------------------

This is a test for MID 549 - assignment of an invalid value to a datetime

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 272 -----------------------

This checks 'continue construct' functionality

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_SMALLINT DEFINE_INTEGER USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT ET_EXPR_GET_FLDBUF ERROR SLEEP IF CONTINUE_CONSTRUCT EXIT_PROGRAM_EXPR   OPEN_WINDOW CONSTRUCT EXPR_GET_FLDBUF
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 273 -----------------------

This checks that a fields default value (as defined in the form) is not used during a construct

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_SMALLINT DEFINE_INTEGER USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT IF UI_DISPLAY_LINE_MODE DISPLAY SLEEP EXIT_PROGRAM_EXPR   OPEN_WINDOW CONSTRUCT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 274 -----------------------

This tests that an interrupted construct statement does NOT set the variable to 1=1

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_SMALLINT DEFINE_INTEGER USES_FORM UI_OPEN_WINDOW DEFER_INTERRUPT UI_CONSTRUCT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR   OPEN_WINDOW CONSTRUCT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 275 -----------------------

ARRAY value assign from function call. No run-time checking

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 276 -----------------------

Basic test of some error handling (for obtaining window sizes) - also end of line clearing

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 277 -----------------------

Basic test of some error handling (for obtaining window sizes) - also end of line clearing

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 278 -----------------------
Please migrate folowing test info from 'run_tests' script to makefile:


This is a test of handling of multi occurences of the same name for a fieldname in a form

test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode

 ------------------- Info for test 279 -----------------------

Some date/datetime/ interval checking

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 280 -----------------------

Datetime arithmetic problems mantis bug 566 (private) There are 2 problems with datetime arithmetic: 1. In doing substraction on a datetime variable which is the 1st day of a month, the result is always a null. 2. In doing addition or subtraction on a datetime variable, the result may be an invalid date, such as 2004-08-31.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 281 -----------------------

Test NULL in function call as a parameter

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 282 -----------------------

This is a test to see if a page header is run at the correct point in time. At the time of submitting this test - the declare isn't performed until something is printed in another block and hence isn't available in the on every row. Workaround is to print ""; as the first thing in the 'on every row' to force the page header...

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE  USE_REPORT DEFINE_CHAR DEFINE_INTEGER UI_DISPLAY_LINE_MODE DISPLAY PREPARE CURSOR_SELECT REPORT_FIRST_PAGE_HEADER ON_EVERY_ROW OPEN_CURSOR  FIRST_PAGE_HEADER
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 283 -----------------------

Form file input with 'options input no wrap'

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 284 -----------------------

This tests an issue with using the insert key when data is already in the field

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 285 -----------------------

NULL in the function call

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 286 -----------------------

This is a test for the UNLOAD bug reported

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE DDL_SERIAL DDL_MONEY DDL_DATE  INSERT_COLUMNLIST_EQ_VALUELIST UNLOAD_TO_SELECT_FROM_WHERE  DEFINE_INTEGER DEFINE_DATE DDL_DECIMAL ANSI_INSERT UNLOAD_TO UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 287 -----------------------

Another UNLOAD test

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE DDL_SERIAL DDL_MONEY DDL_DATE  INSERT_COLUMNLIST_EQ_VALUELIST UNLOAD_TO_SELECT_FROM_WHERE  DEFINE_INTEGER DEFINE_DATE DDL_DECIMAL ANSI_INSERT UI_DISPLAY_LINE_MODE DISPLAY UNLOAD_TO EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 288 -----------------------

tests show option all - mid 612

test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 289 -----------------------

Quick test on using foreach on a declare which used variables

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE  DEFINE_INTEGER ANSI_INSERT CURSOR_SELECT UI_DISPLAY_LINE_MODE DISPLAY DEFINE_CHAR FOREACH
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 290 -----------------------

This tests a problem with the use of datetime variables (reported by Fernando Ortiz)

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE DDL_DATETIME  DEFINE_DATETIME ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 291 -----------------------

Quick test of display at with nulls

test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 292 -----------------------
*** Test not described ***

 ------------------- Info for test 296 -----------------------

This tests private bug 587 - upshift on a single character field with include not working consistantly

test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 297 -----------------------

Tests the implementation of the time function

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 298 -----------------------

This is a sample 4gl program which connects to a db specified via a variable and selects into an array

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE  DEFINE_CHAR ANSI_INSERT UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 299 -----------------------

differences with display array - mid 613

Test will fail if not running on screen (curses)
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode

 ------------------- Info for test 300 -----------------------

A simple Hello World program

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 301 -----------------------

A program with database, a globals file and globals define

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_SMALLINT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 302 -----------------------

A database definition, a globals include file, modulars variables and a function.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_INTEGER UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 303 -----------------------

A database definition and modular defines

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 304 -----------------------

An empty 4gl file

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 305 -----------------------

Empty main and empty function

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 306 -----------------------

Global includes and global defines mixed

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 307 -----------------------

A global include, global define, modular and function

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 308 -----------------------

Modular defines and a simple function

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 309 -----------------------

Just a database statement

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 310 -----------------------

With just a simple function

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 311 -----------------------

Just a globals include

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 312 -----------------------

Just a global define

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 313 -----------------------

Just a simple main function

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 314 -----------------------

Just modular variables

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 315 -----------------------

Just three global includes

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 316 -----------------------

Two simple modular variables with reserved name identifier

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 317 -----------------------

A simple call of a function without parameters or return values

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 318 -----------------------

Call with one parameter

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 319 -----------------------

Call with several parameters

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 320 -----------------------

Call with let and one return value

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 321 -----------------------

Call with several return values

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 322 -----------------------

A call with several parameters and return values

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 323 -----------------------

A simple case with values on WHEN

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 324 -----------------------

An empty case

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 325 -----------------------

A case with expressions on WHEN

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 326 -----------------------

A case with otherwise

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 327 -----------------------

Database inside function

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 328 -----------------------

Simple for loop

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 329 -----------------------

For loop with step

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 330 -----------------------

For loop with exit for

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 331 -----------------------

For loop with exit for

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_CHAR PREPARE CURSOR_SELECT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 332 -----------------------

Foreach loop with into one var

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_CHAR PREPARE CURSOR_SELECT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 333 -----------------------

Foreach loop with into two var(s)

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_CHAR PREPARE CURSOR_SELECT FOREACH UI_DISPLAY_LINE_MODE DISPLAY  DEFINE_INTEGER
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 334 -----------------------

Foreach loop with CONTINUE FOREACH

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_CHAR PREPARE CURSOR_SELECT FOREACH IF CONTINUE_FOREACH UI_DISPLAY_LINE_MODE DISPLAY  DEFINE_INTEGER
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 335 -----------------------

Foreach loop with CONTINUE FOREACH

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_CHAR PREPARE CURSOR_SELECT FOREACH IF EXIT_FOREACH UI_DISPLAY_LINE_MODE DISPLAY 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 336 -----------------------

Empty foreach loop

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 337 -----------------------

Label and Goto

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 338 -----------------------

Simple while

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 339 -----------------------

Empty WHILE loop. No run-time error checking implemented

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 340 -----------------------

WHILE loop with EXIT WHILE. No run-time error checking implemented

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 341 -----------------------

WHILE loop with CONTINUE. No run-time error checking implemented

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 342 -----------------------

Simple IF. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 343 -----------------------

Empty IF statement. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 344 -----------------------

IF...ELSE statement. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 345 -----------------------

IF statement with empty ELSE. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 346 -----------------------

Nested IF. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 347 -----------------------

Empty MAIN block - NOT SURE WHAT IS REPORT DOING THEN.... No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 348 -----------------------

Report with FORMAT EVERY ROW. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 349 -----------------------

All combinations of START REPORT. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 350 -----------------------

REPORT with one parameter. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 351 -----------------------

REPORT with 2 parameters. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 352 -----------------------

DATABASE statement inside of the FUNCTION block No run-time checking

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE  DEFINE_CHAR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 353 -----------------------

DATABASE as global declaration and in function block No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE  DEFINE_CHAR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 354 -----------------------

DATABASE in MAIN block. No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE  DEFINE_CHAR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 355 -----------------------

DEFER INTERRUPT in MAIN block. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 356 -----------------------

DEFER QUIT in MAIN block. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 357 -----------------------

WHENEVER ERROR STOP in function, but not called from MAIN - FIXME? No run-time checking.

Test is expected to exit with non-zero code
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT  DEFINE_SMALLINT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 358 -----------------------

WHENEVER ERROR CALL test - not called from main - FIXME No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT IFX_SYSTABLES  DEFINE_SMALLINT UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 359 -----------------------

WHENEVER ERROR GOTO- not called from MAIN - FIXME No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT IFX_SYSTABLES  DEFINE_SMALLINT LABEL UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 360 -----------------------

WHENEVER WARNING STOP - not called from MAIN - FIXME No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT IFX_SYSTABLES  DEFINE_SMALLINT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 361 -----------------------

WHENEVER WARNING CALL - not called from MAIN - FIXME No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT IFX_SYSTABLES  DEFINE_SMALLINT UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 362 -----------------------

WHENEVER WARNING GOTO - not called from MAIN No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT IFX_SYSTABLES  DEFINE_SMALLINT LABEL UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 363 -----------------------

WHENEVER ANY ERROR - not called from MAIN - FIXME No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT IFX_SYSTABLES  UI_DISPLAY_LINE_MODE DISPLAY DEFINE_SMALLINT LABEL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 364 -----------------------

WHENEVER SQLWARNING - not called from MAIN - fixme No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT IFX_SYSTABLES  UI_DISPLAY_LINE_MODE DISPLAY DEFINE_SMALLINT LABEL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 365 -----------------------

WHENEVER SQLERROR - not called from main. No run-time error checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT IFX_SYSTABLES  UI_DISPLAY_LINE_MODE DISPLAY DEFINE_SMALLINT LABEL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 366 -----------------------

WHENEVER NOT FOUND - not called from MAIN - FIXME No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT IFX_SYSTABLES  UI_DISPLAY_LINE_MODE DISPLAY DEFINE_SMALLINT LABEL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 367 -----------------------

WHENEVER ERROR CONTINUE - not called from MAIN - FIXME No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_COUNT IFX_SYSTABLES  DEFINE_SMALLINT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 368 -----------------------

simple INITIALIZE. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 369 -----------------------

INITIALIZE list. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 370 -----------------------

INITIALIZE record. No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE IFX_SYSTABLES  INITIALIZE_NULL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 371 -----------------------

Simple INITIALIZE ... LIKE ... No run-time checking.

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: INITIALIZE_LIKE IFX_SYSTABLES  DEFINE_SMALLINT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 372 -----------------------

List Initialize like with table

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: INITIALIZE_LIKE IFX_SYSTABLES  DEFINE_INTEGER DEFINE_CHAR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 373 -----------------------

List Initialize like with dot-star notation

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE INITIALIZE_LIKE IFX_SYSTABLES
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 374 -----------------------

Simple validate

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: VALIDATE_LIKE IFX_SYSTABLES  DEFINE_SMALLINT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 375 -----------------------

Validate list - TEST IS INVALID (see source code)

Test is expected to exit with code 
**** TEST MARKED INVALID IN run_tests ******
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: VALIDATE_LIKE

 ------------------- Info for test 376 -----------------------

Validate with 'star' notation

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE VALIDATE_LIKE IFX_SYSTABLES
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 377 -----------------------

Validate with table qualifier - TEST IS INVALID (see source code)

Test is expected to exit with code 
**** TEST MARKED INVALID IN run_tests ******
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: VALIDATE_LIKE
test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 378 -----------------------

Simple locate in memory

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 379 -----------------------

Simple locate in file

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 380 -----------------------

List locate in memory

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 381 -----------------------

List locate in file

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 382 -----------------------

Simple open window dimensioned

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 383 -----------------------

Open window dimensioned with attributes

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 384 -----------------------

Simple open window with form

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 385 -----------------------

Open window with form and attributes

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 386 -----------------------

Open form

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 387 -----------------------

Close window

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 388 -----------------------

Close form

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 389 -----------------------

Simple sleep from constant

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 390 -----------------------

Sleep from variable

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 391 -----------------------

Sleep from integer expression

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 392 -----------------------

Current window is window

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 393 -----------------------

Current window is screen

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 394 -----------------------

Clear window with name

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 395 -----------------------

clear screen

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 396 -----------------------

Clear form!

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 397 -----------------------

Clear single field

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 398 -----------------------

Clear several fields

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 399 -----------------------

Error single string

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 400 -----------------------

Error with variable

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 401 -----------------------

Error with list

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 402 -----------------------

Error with all attributes

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 403 -----------------------

Simple display form

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 404 -----------------------

Display form with attributes

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 405 -----------------------

Message with string

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 406 -----------------------

Message with variable

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 407 -----------------------

Message with comma separated list

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 408 -----------------------

Message with attributes

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 409 -----------------------

Single comment line OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 410 -----------------------

Single Error line OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 411 -----------------------

Form line OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 412 -----------------------

MENU LINE OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 413 -----------------------

MESSAGE LINE OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 414 -----------------------

PROMPT LINE OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 415 -----------------------

ACCEPT KEY OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 416 -----------------------

DELETE KEY OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 417 -----------------------

INSERT KEY OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 418 -----------------------

NEXT KEY OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 419 -----------------------

PREVIOUS KEY OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 420 -----------------------

HELP KEY OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 421 -----------------------

DISPLAY ATTRIBUTE OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 422 -----------------------

INPUT ATTRIBUTE OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 423 -----------------------

INPUT WRAP OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 424 -----------------------

INPUT NOWRAP OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 425 -----------------------

FIELD ORDER UNCONSTRAINED OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 426 -----------------------

FIELD ORDER CONSTRAINED OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 427 -----------------------

SQL INTERRUPT ON OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 428 -----------------------

SQL INTERRUPT OFF OPTION

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 429 -----------------------

Simple propmpt

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 430 -----------------------

Prompt with string

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 431 -----------------------

Prompt with variable

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 440 -----------------------

MENU with title in a varible. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 441 -----------------------

MENU with NEXT OPTION. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 442 -----------------------

MENU with SHOW/HIDE OPTION. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 443 -----------------------

No test files - FIXME

test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 444 -----------------------

FIXME - no test files

test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 445 -----------------------

MENU with CONTINUE. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 446 -----------------------

FIXME - no test files

test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 447 -----------------------

MENU with COMMAND KEY. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 448 -----------------------

MENU with HELP. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 449 -----------------------

MENU without COMMAND descriptions. No runtime checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 450 -----------------------

MENU with empty COMMAND. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 451 -----------------------

MENU with BEFORE MENU. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 452 -----------------------

Complex MENU statement. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 453 -----------------------

MENU with HIDE/SHOW ALL. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 454 -----------------------

Simple DISPLAY without AT. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 455 -----------------------

DISPLAY with char variable. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 456 -----------------------

DISPLAY without AT - all variable types. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 457 -----------------------

DISPLAY with COLUMN. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 458 -----------------------

Simple DISPLAY AT with PROMPT. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 459 -----------------------

DIAPLAY AT with variable and PROMPT. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 460 -----------------------

DISPLAY AT coordinate based on expresion. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 461 -----------------------

DISPLAY AT with all ATTRIBUTEs. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 462 -----------------------

DISPLAY with CLIPPED. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 463 -----------------------

DISPLAY with USING. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 464 -----------------------

DISPLAY with ASCII. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 465 -----------------------

Simple DISPLAY to a form field. No run-time checking.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 466 -----------------------

DISPLAY with BY NAME and one variable. No run-time checking.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 467 -----------------------

DISPLAY BY NAME with list of variables. No run-time checking.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 468 -----------------------

INPUT BY NAME with WITHOUT DEFAULTS. No run-time checking.

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 469 -----------------------

DISPLAY TO on form with list. No run-time checking.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 470 -----------------------

DISPLAY TO form fields with all ATTRIBUTES. No run-tiem checking.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 471 -----------------------

DISPLAY BY NAME with all ATTRIBUTES. No run-time checking.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 472 -----------------------

Simple DISPLAY ARRAY with OPTIONS and set_count(). No run-time checking.

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 473 -----------------------

DISPLAY ARRAY with all ATTRIBUTES. No run-time checking.

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 474 -----------------------

DISPLAY ARRAY with ON KEY. No run-time checking.

Test is compile only, no execution will be attempted
Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 475 -----------------------

Complex DISPLAY ARRAY. No run-time checking.

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 476 -----------------------

DEFINE LIKE - all combinations. No run-tme checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 477 -----------------------

DEFINE LIKE with dot-star notation. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 478 -----------------------

DEFINE RECORD LIKE with qualifier - all combinations. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 479 -----------------------

DEFINE - all combinations of simple data types. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 480 -----------------------

DEFINE ARRAY - simple types. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 481 -----------------------

DEFINE ARRAY ... OF RECORD. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 482 -----------------------

DEFINE ARRAY with TEXT/BYTE LOB's. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 483 -----------------------

DEFINE RECORD with one variable. No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 484 -----------------------

FIXME - missing test files

test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 485 -----------------------

DEFINE RECORD of records (nested). No run-time checking.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 486 -----------------------

SCROLL down one field in DISPLAY ARRAY. No run-time checking.

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 487 -----------------------

SCROLL DOWN in DISPLAY ARRAY with fiels list. No run-time checking.

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 488 -----------------------

SCROLL UP in DISPLAY ARRAY with field list

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 489 -----------------------

SCROLL in DISPLAY ARRAY several lines UP/DOWN No run-time checking.

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 490 -----------------------

SCROLL in DISPLAY ARRAY by variable number of lines UP/DOWN. No run-time checking.

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 491 -----------------------

FIXME-missing test files.

test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 492 -----------------------

Simple RUN. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 493 -----------------------

RUN with variable. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 494 -----------------------

RUN with return variable. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 495 -----------------------

RUN WITHOUT WAITING - not called from MAIN. No run-time checking.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 496 -----------------------

INPUT ARRAY with AFTER INPUT and BEFORE ROW. No run-time checking.

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 497 -----------------------

Simple data types assignment and display. No error checking

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 498 -----------------------

Simple INPUT BY MANE in form. No error checking - no keys.in

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 499 -----------------------

Input from with list.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 500 -----------------------

INPUT BY NAME - one field. No run-time checking.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 501 -----------------------

INPUT BY NAME with list. No run-time checking.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 502 -----------------------

INPUT WITHOUT DEFAULTS ... FROM. No run-time checking.

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 503 -----------------------

INPUT BY NAME WITHOUT DEFAULTS. No run-time checking.

Test is expected to exit with code 
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 504 -----------------------

INPUT BY NAME WTIHOUT DEFAULTS and all ATTRIBUTES. No run-time checking.

Test is expected to exit with code 
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 505 -----------------------

INPUT BY NAME with HELP number. No run-time checking.

Test is expected to exit with code 
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 506 -----------------------

INPUT BY NAME with AFTER INPUT. No run-time checking.

Test is expected to exit with code 
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 507 -----------------------

INPUT BY NAME ... WITHOUT DEFAULTS No run-time checking.

Test is expected to exit with code 
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 508 -----------------------

INPUT BY NAME with BEFORE FIELD. No run-time checking.

Test is expected to exit with code 
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 509 -----------------------

INPUT BY NAME with BEFORE FIELD. No run-time checking.

Test is expected to exit with code 
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 510 -----------------------

INPUT BY NAME with BEFORE INPUT. No run-time checking.

Test is expected to exit with code 
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 511 -----------------------

FIXME - nothing in MAIN block

Test is expected to exit with code 
test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 512 -----------------------

Complex INPUT block. No run-time checking.

Test is compile only, no execution will be attempted
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 513 -----------------------

Simple CONSTRUCT. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_LIKE DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 514 -----------------------

CONDSTRUCT on one field. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_LIKE DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 515 -----------------------

CONSTRUCT on field list. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_LIKE DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 516 -----------------------

CONSTRUCT BY NAME with all attributes. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_LIKE DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 517 -----------------------

CONSTRUCT BY NAME with HELP No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_LIKE DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 518 -----------------------

CONSTRUCT with dot-star notation No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 519 -----------------------

CONSTRUCT with BEFORE CONSTRUCT. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT ERROR CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 520 -----------------------

CONSTRUCT with AFTER CONSTRUCT. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT UI_DISPLAY_LINE_MODE DISPLAY CLOSE_WINDOW   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 521 -----------------------

CONSTRUCT with BEFORE FIELD. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT ERROR CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 522 -----------------------

CONSTRUCT with BEFORE FIELD list No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT ERROR CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 523 -----------------------

CONSTRUCT with AFTER FIELD. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT ERROR CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 524 -----------------------

CONSTRUCT with AFTER FIELD list. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT ERROR CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 525 -----------------------

CONSTRUCT with ON KEY. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT ERROR CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 526 -----------------------

CONSTRUCT with flow control (NEXT FIELD,CONTINUE...). No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR USES_FORM UI_OPEN_WINDOW UI_CONSTRUCT EXIT_CONSTRUCT CONTINUE_CONSTRUCT CLOSE_WINDOW UI_DISPLAY_LINE_MODE DISPLAY   OPEN_WINDOW CONSTRUCT
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 527 -----------------------

FIXME-missing test files.

test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 528 -----------------------

Simple CREATE and DROP table. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 529 -----------------------

FIXME - duplicate of test 528

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE
test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 530 -----------------------

CREATE TABLE with database.owner specified. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE TABLENAME_DB_USER_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 531 -----------------------

CREATE TABLE with all (Informix) data types. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Needs at least version 7.31 of Informix 4gl.
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_SERIAL DDL_MONEY DDL_DOUBLE_PRECISION  DDL_DATE DDL_DATETIME DDL_INTERVAL DDL_NCHAR DDL_NVARCHAR DDL_TEXT DDL_BYTE  DDL_DECIMAL DDL_VARCHAR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 532 -----------------------

CREATE TABLE with NOT NULL. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE TABLENAME_DB_USER_TABLE  DDL_NOT_NULL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 533 -----------------------

CREATE TEMP TABLE. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 534 -----------------------

CREATE TABLE ... WITH NO LOG No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE_NO_LOG  SELECT_INTO_TEMP_WITH_NO_LOG CREATE_TEMP_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 535 -----------------------

CREATE TABLE with storage information. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE_IN CREATE_TABLE_EXTENT  CREATE_TABLE_NEXT_SIZE CREATE_TABLE_LOCK_MODE  CREATE_TABLE CREATE_TABLE_EXTENT_SIZE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 536 -----------------------

CREATE TABLE with PRIMARY KEY clause. No run-time checking. NOTE: fails with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Needs at least version 7.31 of Informix 4gl.
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_PRIMARY_KEY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 537 -----------------------

CREATE TABLE with 2 columns and PRIMARY KEY. No run-time checking. NOTE: fails with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Needs at least version 7.31 of Informix 4gl.
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_PRIMARY_KEY  DDL_NOT_NULL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 538 -----------------------

CREATE TABLE with UNIQUE clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_UNIQUE  DDL_NOT_NULL DDL_DISTINCT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 539 -----------------------

CREATE TABLE with 2 columns and UNIQUE/DISTINCT clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_UNIQUE  DDL_NOT_NULL DDL_DISTINCT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 540 -----------------------

CREATE TABLE with FOREIGN key. No run-time checking. NOTE: fails with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_PRIMARY_KEY DDL_REFERENCES  DEFINE_CHAR PREPARE EXECUTE DDL_NOT_NULL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 541 -----------------------

CREATE TABLE with two columns and FOREIGN KEY with REFERENCES clause. No run-time checking. NOTE: fails with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_PRIMARY_KEY DDL_FOREIGN_KEY DDL_REFERENCES  DEFINE_CHAR DDL_NOT_NULL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 542 -----------------------

CREATE TABLE with CHECK clause. No run-time checking. NOTE: fails with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_CHECK  DEFINE_CHAR DDL_NOT_NULL WHERE_IN
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 543 -----------------------

CREATE TABLE with DEFAULT clause. No run-time checking. NOTE: fails with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DEFAULT_VALUE  DEFINE_CHAR DDL_DATE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 544 -----------------------

CREATE TABLE with DISTINCT/UNIQUE clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_UNIQUE   DDL_DISTINCT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 545 -----------------------

CREATE/DROP DATABASE. Test is invalid - Aubit refuses to compile DROP DATABASE statement.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_DATABASE CREATE_DATABASE
test is superceeded or obsoleted and should be silently skipped
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 546 -----------------------

DROP DATABASE - test is invalid - see test #545

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_DATABASE CREATE_DATABASE CLOSE_DATABASE
test is superceeded or obsoleted and should be silently skipped
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 547 -----------------------

CREATE/DROP DATABASE with Informix On-Line specific sintax. Test is invalid - see test #545.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_DATABASE CREATE_DATABASE CREATE_DATABASE_WITH_LOG CREATE_DATABASE_IN CLOSE_DATABASE
test is superceeded or obsoleted and should be silently skipped
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 548 -----------------------

CREATE/DROP DATABASE with Informix SE specific syntax. Test is invalid - see test #545.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_DATABASE CREATE_DATABASE_WITH_LOG CREATE_DATABASE_MODE_ANSI CLOSE_DATABASE
test is superceeded or obsoleted and should be silently skipped
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 549 -----------------------

DATABSE statement with complex names. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_QUALIFIED_PATH  DEFINE_CHAR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 550 -----------------------

Open DATABASE with EXCLUSIVE clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_EXCLUSIVE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 551 -----------------------

Simple ALTER TABLE. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE_ADD  ALTER_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 552 -----------------------

ALTER TABLE with ADD clause. No run-time ckecking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE_ADD  DDL_DECIMAL DDL_NOT_NULL ALTER_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 553 -----------------------

ALTER TABLE with DROP clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE_DROP  DDL_DECIMAL DDL_NOT_NULL ALTER_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 554 -----------------------

ALTER TABLE with ADD CONSTRAINT clause. No run-time checking. NOTE: fails to compile with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE ADD_CONSTRAINT  DDL_DECIMAL DDL_NOT_NULL DDL_PRIMARY_KEY DDL_CONSTRAINT ALTER_TABLE_ADD_CONSTRAINT DDL_UNIQUE DDL_DISTINCT DDL_CHECK
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 555 -----------------------

ALTER TABLE with DROP CONSTRAINT clause. No run-time ckecking. NOTE: fails to compile with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE ADD_CONSTRAINT DROP_CONSTRAINT  DDL_DECIMAL DDL_NOT_NULL DDL_UNIQUE DDL_CONSTRAINT ALTER_TABLE_ADD_CONSTRAINT DDL_DISTINCT ALTER_TABLE_DROP_CONSTRAINT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 556 -----------------------

ALTER TABLE with NEXT SIZE clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE DDL_NEXT_SIZE  DDL_DECIMAL DDL_NOT_NULL ALTER_TABLE_MODIFY_NEXT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 557 -----------------------

ALTER TABLE with LOCK MODE clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE_LOCK_MODE  DDL_DECIMAL DDL_NOT_NULL ALTER_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 558 -----------------------

ALTER TABLE ... ADD with all (Informix) types. No run-time checking. NOTE: fails to compile with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE DDL_SERIAL DDL_MONEY DDL_DOUBLE_PRECISION  DDL_DATE DDL_DATETIME DDL_INTERVAL DDL_NCHAR DDL_NVARCHAR DDL_TEXT DDL_BYTE  DDL_DECIMAL DDL_VARCHAR ALTER_TABLE_ADD
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 559 -----------------------

ALTER TABLE ADD with BEFORE clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE_ADD_BEFORE  DDL_DECIMAL DDL_NOT_NULL ALTER_TABLE_ADD ALTER_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 560 -----------------------

ALTER TABLE with MODIFY (all Informix types). No run-time checking. NOTE: fails to compile with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE DDL_SERIAL DDL_MONEY DDL_DOUBLE_PRECISION  DDL_DATE DDL_DATETIME DDL_INTERVAL DDL_NCHAR DDL_NVARCHAR DDL_TEXT DDL_BYTE  DDL_DECIMAL DDL_VARCHAR ALTER_TABLE_MODIFY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 561 -----------------------

ALTER TABLE ... MODIFY with column CONSTRAINT clause. No run-time checking. NOTE: fails to compile with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_PRIMARY_KEY DDL_CONSTRAINT ALTER_TABLE  DDL_DEFAULT_VALUE  DDL_NOT_NULL DDL_UNIQUE ALTER_TABLE_MODIFY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 562 -----------------------

ALTER TABLE ... ADD with column CONSTRAINT clause. No run-time checking. NOTE: fails to compile with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_PRIMARY_KEY DDL_CONSTRAINT  ALTER_TABLE DDL_DEFAULT_VALUE  DDL_NOT_NULL DDL_UNIQUE ALTER_TABLE_MODIFY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 563 -----------------------

Simple CREATE INDEX. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_INDEX
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 564 -----------------------

CREATE INDEX on several columns. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_INDEX_COMPOSITE  CREATE_INDEX
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 565 -----------------------

CREATE UNIQUE INDEX. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_INDEX_UNIQUE CREATE_INDEX_UNIQUE_COMPOSITE  CREATE_INDEX CREATE_INDEX_COMPOSITE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 566 -----------------------

CREATE CLUSTER INDEX. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_INDEX_CLUSTER  CREATE_INDEX CREATE_INDEX_UNIQUE CLUSTER_INDEX CREATE_INDEX_COMPOSITE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 567 -----------------------

CREATE INDEX with ASC clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_INDEX_ASC  CREATE_INDEX CREATE_INDEX_COMPOSITE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 568 -----------------------

CREATE INDEX with DESC clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_INDEX_DESC CREATE_INDEX_ASC_DESC  CREATE_INDEX CREATE_INDEX_COMPOSITE CREATE_INDEX_ASC
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 569 -----------------------

Complex CREATE INDEX. No run-time checking. NOTE: fails to compile with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CLUSTER_INDEX CREATE_INDEX_ASC DESC_INDEX  INDEX_FILLFACTOR  DDL_VARCHAR CREATE_INDEX_DESC CREATE_INDEX CREATE_INDEX_UNIQUE CREATE_INDEX_COMPOSITE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 570 -----------------------

CREATE SYNONYM statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_SYNONYM
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 571 -----------------------

CREATE PUBLIC SYNONYM database statement. No run-time checking. NOTE: fails to compile with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_SYNONYM  CREATE_SYNONYM
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 572 -----------------------

CREATE PRIVATE SYNONYM database statement. No run-time checking. NOTE: fails to compile with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_SYNONYM
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 573 -----------------------

CREATE SYNONYM with full name.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_SYNONYM_QUALIFIED_PATH  CREATE_SYNONYM
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 574 -----------------------

DROP INDEX database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_INDEX DROP_INDEX
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 575 -----------------------

DROP INDEX with full name.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_INDEX_QUALIFIED_PATH DROP_INDEX_QUALIFIED_PATH  CREATE_INDEX DROP_INDEX
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 576 -----------------------

DROP SYNONYM database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_SYNONYM DROP_SYNONYM
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 577 -----------------------

DROP SYNONYM with full name.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_SYNONYM_QUALIFIED_PATH  DROP_SYNONYM_QUALIFIED_PATH  DROP_SYNONYM CREATE_SYNONYM
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 578 -----------------------

DROP TABLE database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 579 -----------------------

DROP TABLE with full names.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE_QUALIFIED_PATH CREATE_TABLE_QUALIFIED_PATH  DROP_TABLE CREATE_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 580 -----------------------

DROP INDEX database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_INDEX DROP_INDEX
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 581 -----------------------

DROP INDEX with full name.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_INDEX_QUALIFIED_PATH DROP_INDEX_QUALIFIED_PATH  CREATE_INDEX DROP_INDEX
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 582 -----------------------

PREPARE database statement from variable. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 583 -----------------------

PREPARE database statement from string. No run-time checking.

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 584 -----------------------

EXECUTE prepared database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DATABASE_PREPARED  PREPARE EXECUTE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 585 -----------------------

EXECUTE with USING clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST EXECUTE_USING  DEFINE_INTEGER DEFINE_CHAR PREPARE EXECUTE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 586 -----------------------

EXECUTE INTO with USING clause. No run-time checking. NOTE: compiles, but Aubit library code missing.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST EXECUTE_USING EXECUTE_INTO_USING  DEFINE_INTEGER DEFINE_CHAR PREPARE EXECUTE INITIALIZE_NULL UI_DISPLAY_LINE_MODE DISPLAY IF EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 587 -----------------------

FREE prepared and executed statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: FREE_CURSOR DATABASE_PREPARED  PREPARE EXECUTE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 588 -----------------------

FREE a cursor. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST FREE_CURSOR  DEFINE_INTEGER DEFINE_CHAR PREPARE EXECUTE_USING EXECUTE CURSOR_SELECT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 589 -----------------------

FREE defined LOB (TEXT/BYTE). No run-time checking..

Test is expected to exit with code 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 590 -----------------------

SET EXPLAIN ON database statement. No run-time checking. Note that this test may fail because of Informix configuration issues. For example, if your oninit permissions look like this: -rwSr-sr-- 1 informix informix 8497828 Mar 3 2002 /opt/informix/bin/oninit then this test will fail. If you execute: chown root /opt/informix/bin/oninit chmod 6754 /opt/informix/bin/oninit so that oninit permissions are: -rwsr-sr-- 1 root informix 8497828 Mar 3 2002 /opt/informix/bin/oninit then this tests may work, is the oninit has permissions to write to the tests directory and create sqexplain.out file. When using -ecp, this statement is ignored, and test will allways 'work'.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: SET_EXPLAIN
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 591 -----------------------

SET EXPLAIN OFF database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: SET_EXPLAIN
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 592 -----------------------

CREATE VIEW database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_VIEW_AS_SELECT  DROP_VIEW
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 593 -----------------------

CREATE VIEW with full names.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_VIEW_QUALIFIED_PATH  CREATE_VIEW_AS_SELECT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 594 -----------------------

Simple UPDATE STATISTICS. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: UPDATE_STATISTICS
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 595 -----------------------

LOCK TABLE with SHARED MODE. No run-time checking.

Test is expected to exit with code 
Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE BEGIN_WORK LOCK_TABLE_SHARED ROLLBACK_WORK  LOCK_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 596 -----------------------

LOCK TABLE with EXCLUSIVE MODE. No run-time checking.

Test is expected to exit with code 
Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE BEGIN_WORK LOCK_TABLE_EXCLUSIVE ROLLBACK_WORK  LOCK_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 597 -----------------------

LOCK TABLE with full names.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE LOCK_TABLE TABLENAME_DB_SERVER_USER_TABLE TABLENAME_DB_TABLE TABLENAME_DB_USER_TABLE  LOCK_TABLE_SHARED
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 598 -----------------------

UNLOCK TABLE database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE BEGIN_WORK LOCK_TABLE_SHARED COMMIT_WORK UNLOCK_TABLE  LOCK_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 599 -----------------------

UNLOCK TABLE with full names.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE TABLENAME_DB_SERVER_USER_TABLE LOCK_TABLE UNLOCK_TABLE  LOCK_TABLE_SHARED
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 600 -----------------------

DROP TRIGGER database statement. Does not compile even with -ifx-p so probably invalid.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TRIGGER
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 602 -----------------------

DROP VIEW database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_VIEW_AS_SELECT DROP_VIEW
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 603 -----------------------

DROP VIEW with full names.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE_QUALIFIED_PATH CREATE_VIEW  DROP_VIEW_QUALIFIED_PATH CREATE_VIEW_QUALIFIED_PATH  CREATE_TABLE CREATE_VIEW_AS_SELECT DROP_VIEW
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 605 -----------------------

RENAME TABLE database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE RENAME_TABLE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 606 -----------------------

RENAME COLUMN database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE RENAME_COLUMN
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 607 -----------------------

RENAME COLUMN with full names.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE TABLENAME_DB_SERVER_USER_TABLE RENAME_COLUMN
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 609 -----------------------

CREATE VIEW ... AS SELECT database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_VIEW_AS_SELECT  DROP_VIEW
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 610 -----------------------

CREATE VIEW ... AS SELECT with named columns. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_VIEW_AS_SELECT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 611 -----------------------

CREATE VIEW with CHECK OPTION. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_VIEW_SELECT_WITH_CHECK  CREATE_VIEW_AS_SELECT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 612 -----------------------

Complex CREATE VIEW database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CREATE_VIEW_SELECT_WITH_CHECK  CREATE_VIEW_AS_SELECT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 613 -----------------------

Simple INSERT. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  DEFINE_SMALLINT DEFINE_CHAR ANSI_INSERT UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 614 -----------------------

INSERT without naming columns. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE  DEFINE_SMALLINT DEFINE_CHAR ANSI_INSERT UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 615 -----------------------

INSERT INTO ... SELECT FROM database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_INTO_SELECT_FROM  DEFINE_SMALLINT DEFINE_CHAR ANSI_INSERT UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 616 -----------------------

INSERT from procedure (Informix specific) No run-time checking. SEE NOTE IN THE CODE.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_PROCEDURE CREATE_TABLE  DEFINE_SMALLINT DEFINE_CHAR PREPARE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 618 -----------------------

Simple DELETE database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT ANSI_DELETE ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR SQLCA_SQLCODE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 619 -----------------------

DELETE with WHERE clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT ANSI_DELETE ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR SQLCA_SQLCODE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 620 -----------------------

DELETE with WHERE CURRENT OF clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE BEGIN_WORK SELECT_FOR_UPDATE  DELETE_WHERE_CURRENT_OF CLOSE_CURSOR ANSI_SELECT ROLLBACK_WORK SQLCA_SQLCODE  DEFINE_SMALLINT DEFINE_CHAR ANSI_INSERT CURSOR_SELECT_FOR_UPDATE CURSOR_SELECT OPEN_CURSOR UI_DISPLAY_LINE_MODE DISPLAY  ANSI_DELETE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 621 -----------------------

DELETE with sub-query No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT SQLCA_SQLCODE ANSI_SELECT  DELETE_FROM_WHERE_WITH_SUBSELECT  DEFINE_SMALLINT DEFINE_CHAR WHERE_IN_SELECT ANSI_DELETE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 622 -----------------------

DELETE with EXISTS sub-query. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT SQLCA_SQLCODE ANSI_SELECT  DELETE_FROM_WHERE_EXISTS_SUBSELECT  DEFINE_SMALLINT DEFINE_CHAR WHERE_EXISTS ANSI_DELETE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 623 -----------------------

DELETE ... WHERE ALL/SOME/ANY. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT SQLCA_SQLCODE ANSI_SELECT  DELETE_FROM_WHERE_ALL_SUBSELECT DELETE_FROM_WHERE_ANY_SUBSELECT  DELETE_FROM_WHERE_SOME_SUBSELECT  DEFINE_SMALLINT DEFINE_CHAR ANSI_DELETE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 624 -----------------------

DELETE with IS NOT NULL. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT SQLCA_SQLCODE ANSI_SELECT  DELETE_FROM_WHERE_NULL  DEFINE_SMALLINT DEFINE_CHAR WHERE_NULL ANSI_DELETE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 625 -----------------------

Complex DELETE database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT SQLCA_SQLCODE ANSI_SELECT  ANSI_DELETE  DEFINE_SMALLINT DEFINE_CHAR WHERE_NULL WHERE_IN_SELECT WHERE_EXISTS DELETE_FROM_WHERE_EXISTS_SUBSELECT UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 626 -----------------------

LOAD FROM ... INSERT INTO statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 627 -----------------------

LOAD FROM ... INSERT INTO with file name in variable. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 628 -----------------------

LOAD FROM with DELIMITER clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY ANSI_DELETE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 629 -----------------------

LOAD FROM with INSERT statement in variable. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR LOAD_FROM_VARIABLE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 630 -----------------------

LOAD FROM ... INSERT INTO with one column. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 631 -----------------------

LOAD FROM ... INSERT INTO with several columns. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 632 -----------------------

Simple UNLOAD TO statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TEMP_TABLE ANSI_INSERT UNLOAD_TO ANSI_DELETE  LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 633 -----------------------

UNLOAD TO with file name in variable. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TEMP_TABLE ANSI_INSERT UNLOAD_TO ANSI_DELETE  LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR CREATE_TABLE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 634 -----------------------

UNLOAD with specified DELIMITER. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TEMP_TABLE ANSI_INSERT UNLOAD_TO ANSI_DELETE  LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR CREATE_TABLE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 635 -----------------------

UNLOAD TO with query string in variable. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TEMP_TABLE ANSI_INSERT UNLOAD_TO ANSI_DELETE  LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR CREATE_TABLE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 636 -----------------------

Complex UNLOAD statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TEMP_TABLE ANSI_INSERT UNLOAD_TO ANSI_DELETE  LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR CREATE_TABLE UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 637 -----------------------

Simple UPDATE database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TEMP_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_UPDATE ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR CREATE_TABLE ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 638 -----------------------

SET LOCK MODE TO WAIT directive. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE SET_LOCK_MODE ANSI_INSERT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 639 -----------------------

SET LOCK MODE TO WAIT with seconds specified. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE SET_LOCK_MODE ANSI_INSERT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 640 -----------------------

SET LOCK MODE TO NOT WAIT directive. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE SET_LOCK_MODE ANSI_INSERT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 642 -----------------------

SET ISOLATION TO DIRTY READ directive. No run-time checking. NOTE: requires transaction support.

Test is expected to exit with code 
Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE BEGIN_WORK SET_ISOLATION ANSI_INSERT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 643 -----------------------

SET ISOLATION TO CURSOR STABILITY directive. No run-time checking.

Test is expected to exit with code 
Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE BEGIN_WORK SET_ISOLATION ANSI_INSERT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 644 -----------------------

SET ISOLATION TO REPEATABLE READ directive. No run-time checking.

Test is expected to exit with code 
Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE BEGIN_WORK SET_ISOLATION ANSI_INSERT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 645 -----------------------

GRANT TO ... PUBLIC database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: GRANT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 646 -----------------------

GRANT ... TO user database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: GRANT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 647 -----------------------

GRANT table privileges with TO PUBLIC clause. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 648 -----------------------

GRANT on table to user list. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT  DEFINE_CHAR IF PREPARE STATUS UI_DISPLAY_LINE_MODE DISPLAY EXECUTE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 649 -----------------------

GRANT INSERT on table to user. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT  DEFINE_CHAR IF PREPARE STATUS UI_DISPLAY_LINE_MODE DISPLAY EXECUTE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 650 -----------------------

GRANT DELETE on table to user list. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT  DEFINE_CHAR IF PREPARE STATUS UI_DISPLAY_LINE_MODE DISPLAY EXECUTE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 651 -----------------------

GRANT UPDATE on table to user list. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT  DEFINE_CHAR IF PREPARE STATUS UI_DISPLAY_LINE_MODE DISPLAY EXECUTE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 652 -----------------------

GRANT INDEX on table to user list. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 653 -----------------------

GRANT ALTER on table to user list. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 654 -----------------------

GRANT on table will full name.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 655 -----------------------

Complex GRANT on table. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 656 -----------------------

REVOKE ... FROM PUBLIC database statement. No run-time checking.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: GRANT REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 657 -----------------------

REVOKE ... from user list. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: GRANT REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 658 -----------------------

REVOKE on table from PUBLIC database statement. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 659 -----------------------

REVOKE on table from user list. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 660 -----------------------

REVOKE INSERT on table. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 661 -----------------------

REVOKE DELETE on table. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 662 -----------------------

REVOKE SELECT on table. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 663 -----------------------

REVOKE UPDATE on table. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 664 -----------------------

REVOKE INDEX on table. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 665 -----------------------

REVOKE ALTER on table. No run-time checking.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 666 -----------------------

GRANT SELECT in all variants. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 667 -----------------------

GRANT on table with GRANT OPTION. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 668 -----------------------

GRANT on table AS GRANTOR No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE GRANT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 669 -----------------------

REVOKE on table with full names.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE REVOKE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 670 -----------------------

INSERT with all (Informix) data types. No run-time checking. Need minimum version 7.31 of Ifx to work with -ifx-p

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Needs at least version 7.31 of Informix 4gl.
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_SERIAL DDL_MONEY DDL_DATE DDL_DATETIME  ANSI_INSERT ANSI_SELECT DROP_TABLE  DDL_DATETIME_Y2Y DDL_DATETIME_Y2M DDL_DATETIME_Y2D DDL_DATETIME_Y2H  DDL_DATETIME_Y2M DDL_DATETIME_Y2S DDL_DATETIME_Y2F DDL_DATETIME_Y2F2  DEFINE_INTEGER DEFINE_SMALLINT DEFINE_DECIMAL DEFINE_MONEY DEFINE_FLOAT DEFINE_DOUBLE DEFINE_SMALLFLOAT DEFINE_REAL DEFINE_DATE DEFINE_DATETIME DEFINE_CHAR DEFINE_NCHAR DEFINE_VARCHAR DEFINE_NVARCHAR DDL_DECIMAL DDL_DOUBLE_PRECISION DDL_NCHAR DDL_VARCHAR DDL_NVARCHAR UI_DISPLAY_LINE_MODE DISPLAY INITIALIZE_NULL
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 671 -----------------------

UPDATE with all (Informix) database data types. No run-time checking. TEST IS INVALID (?)

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_SERIAL DDL_MONEY DDL_DATE DDL_DATETIME  DDL_INTERVAL ANSI_INSERT UPDATE_SET_STAR ANSI_SELECT DROP_TABLE
test is superceeded or obsoleted and should be silently skipped
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 672 -----------------------

DELETE with all (Informix) data types. No run-time checking. TEST IS INVALID (?)

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_SERIAL DDL_MONEY DDL_DATE DDL_DATETIME  DDL_INTERVAL ANSI_INSERT ANSI_DELETE ANSI_SELECT SQLCA_SQLCODE DROP_TABLE
test is superceeded or obsoleted and should be silently skipped
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 673 -----------------------

SELECT with (Informix) data types. No run-time checking. TEST IS INVALID (?)

Test is expected to exit with code 
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_SERIAL DDL_MONEY DDL_DATE DDL_DATETIME  DDL_INTERVAL ANSI_INSERT UPDATE_COLUMNLIST_EQ_VALUELIST  ANSI_SELECT ANSI_SELECT DROP_TABLE
test is superceeded or obsoleted and should be silently skipped
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 674 -----------------------

MIssing test files

test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 675 -----------------------

UPDATE SYNONYM No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_SYNONYM CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  CREATE_SYNONYM ANSI_UPDATE CURSOR_SELECT  DEFINE_CHAR ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 676 -----------------------

UPDATE on VIEW No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_VIEW SQLCA_SQLCODE DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  CREATE_VIEW_AS_SELECT CURSOR_SELECT META_UPDATE_VIEW  DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST FOREACH
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 677 -----------------------

UPDATE on multi-table VIEW. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_VIEW SQLCA_SQLCODE DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  CREATE_VIEW_AS_SELECT CURSOR_SELECT META_UPDATE_MULTI_TABLE_VIEW  DEFINE_CHAR ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST IF UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 678 -----------------------

UPDATE with Informic-style SET syntax (column=value) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_UPDATE CURSOR_SELECT  DEFINE_CHAR ANSI_INSERT UPDATE_COLUMNLIST_EQ_VALUELIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 679 -----------------------

UPDATE with Informix-style SET syntax (multiple columns/values) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  UPDATE_COLUMNLIST_EQ_VALUELIST CURSOR_SELECT  DEFINE_CHAR DEFINE_SMALLINT ANSI_INSERT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 680 -----------------------

UPDATE with dot-star notation (Informix syntax) No run-time checking.

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE ANSI_DELETE INSERT_COLUMNLIST_EQ_VALUELIST  UPDATE_SET_STAR CURSOR_SELECT  DEFINE_CHAR DEFINE_INTEGER DEFINE_SMALLINT ANSI_INSERT INITIALIZE_NULL FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 681 -----------------------

UPDATE with constants in SET clause (Informix syntax) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  UPDATE_COLUMNLIST_EQ_VALUELIST CURSOR_SELECT  DEFINE_CHAR DEFINE_SMALLINT DEFINE_DATE DDL_DATE DDL_VARCHAR ANSI_INSERT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 682 -----------------------

UPDATE with expresion in SET and column list (Informix syntax) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  UPDATE_COLUMNLIST_EQ_VALUELIST CURSOR_SELECT  DEFINE_CHAR DEFINE_SMALLINT DEFINE_DATE DEFINE_DATETIME DEFINE_INTERVAL DDL_DATE DDL_DATETIME DDL_INTERVAL DDL_VARCHAR ANSI_INSERT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 683 -----------------------

UPDATE with function calls in expresion (Informix syntax) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE DDL_DATETIME UPDATE_COLUMNLIST_EQ_VALUELIST FUNC_INTERVAL FUNC_EXTEND  DEFINE_SMALLINT DEFINE_DATE DEFINE_DATETIME DEFINE_CHAR DEFINE_INTEGER INSERT_COLUMNLIST_EQ_VALUELIST ANSI_INSERT EXTEND FUNC_DATETIME CURSOR_SELECT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 684 -----------------------

Missing test files - test invalid Please provide brief description of functionality tested here.

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 685 -----------------------

UPDATE with variables in SET clause (Informix syntax). No run-tiem checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  UPDATE_COLUMNLIST_EQ_VALUELIST CURSOR_SELECT  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE DEFINE_FLOAT DEFINE_DECIMAL DDL_DATE DDL_DECIMAL ANSI_INSERT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 686 -----------------------

UPDATE with SET sub-expression (Informix syntax) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  UPDATE_COLUMNLIST_EQ_VALUELIST CURSOR_SELECT DDL_DATETIME  DDL_INTERVAL FUNC_DATETIME FUNC_INTERVAL  DEFINE_CHAR DEFINE_SMALLINT DEFINE_DATE DEFINE_DATETIME DEFINE_INTERVAL DDL_DATE DDL_VARCHAR UI_DISPLAY_LINE_MODE DISPLAY ANSI_INSERT FOREACH
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 687 -----------------------

UPDATE ... SET with UNITS. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  UPDATE_COLUMNLIST_EQ_VALUELIST CURSOR_SELECT DDL_DATETIME DDL_INTERVAL  FUNC_INTERVAL  DEFINE_DATETIME DEFINE_INTERVAL FUNC_DATETIME ANSI_INSERT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 689 -----------------------

UPDATE VIEW with Informix-style SET. No run-time checking.

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_LIKE ANSI_DELETE INSERT_COLUMNLIST_EQ_VALUELIST  UPDATE_SET_STAR ANSI_SELECT META_UPDATE_VIEW  DEFINE_CHAR DEFINE_INTEGER DEFINE_SMALLINT ANSI_INSERT INITIALIZE_NULL IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 690 -----------------------

UPDATE ... SET one column (ANSI SQL 92 standard syntax). No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_UPDATE CURSOR_SELECT  DEFINE_CHAR ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 691 -----------------------

UPDATE SET columns (ANSI SQL 92 syntax). No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_UPDATE CURSOR_SELECT  DEFINE_CHAR DEFINE_SMALLINT ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 692 -----------------------

UPDATE standard SET with SQL expression. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_UPDATE CURSOR_SELECT  DEFINE_CHAR DEFINE_SMALLINT DEFINE_INTEGER ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 693 -----------------------

UPDATE SET with SELECT (std ANSI SQL 92 syntax) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_UPDATE CURSOR_SELECT  DEFINE_CHAR DEFINE_SMALLINT ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 694 -----------------------

UPDATE SET with variable (std ANSI SQL 92 syntax) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_UPDATE CURSOR_SELECT DDL_DATE ANSI_INSERT  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE DEFINE_FLOAT DEFINE_DECIMAL DDL_DECIMAL UPDATE_COLUMN_EQ_VALUE_LIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 695 -----------------------

UPDATE SET WHERE CURRENT OF (std. syntax) No run-time checking.

Test needs database
Database MUST NOT have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_UPDATE CURSOR_SELECT_FOR_UPDATE UPDATE_WHERE_CURRENT_OF  CURSOR_SELECT  DEFINE_CHAR DEFINE_SMALLINT ANSI_INSERT OPEN_CURSOR UPDATE_COLUMN_EQ_VALUE_LIST CLOSE_CURSOR FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 696 -----------------------

UPDATE with THRU syntax. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  UPDATE_COLUMNLIST_EQ_VALUELIST_WITH_THRU CURSOR_SELECT  DEFINE_INTEGER DEFINE_CHAR DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT UPDATE_COLUMNLIST_EQ_VALUELIST INITIALIZE_NULL FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 697 -----------------------

Complex UPDATE. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  UPDATE_SET_VALUE_WITH_SUBSELECT CURSOR_SELECT  DEFINE_CHAR DEFINE_SMALLINT ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST IFX_SYSTABLES FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 698 -----------------------

INSERT into VIEW. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_VIEW CREATE_TABLE CREATE_VIEW_AS_SELECT  INSERT_COLUMNLIST_EQ_VALUELIST CURSOR_SELECT META_INSERT_VIEW  DEFINE_CHAR ANSI_INSERT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 699 -----------------------

INSERT on multi-table view. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_VIEW CREATE_TABLE CREATE_VIEW_AS_SELECT  META_INSERT_MULTITABLE_VIEW SQLCA_SQLCODE  DEFINE_CHAR INSERT_COLUMNLIST_EQ_VALUELIST ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 700 -----------------------

INSERT on synonym. NO run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_SYNONYM CREATE_TABLE CREATE_SYNONYM  META_INSERT_SYNONYM CURSOR_SELECT  DEFINE_CHAR INSERT_COLUMNLIST_EQ_VALUELIST ANSI_INSERT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 701 -----------------------

UPDATE SET with sub-expression (std syntax). No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATETIME DDL_INTERVAL DDL_DATE  INSERT_COLUMNLIST_EQ_VALUELIST ANSI_UPDATE CURSOR_SELECT  FUNC_DATETIME FUNC_INTERVAL  DEFINE_CHAR DEFINE_SMALLINT DEFINE_DATE DEFINE_DATETIME DEFINE_INTERVAL DDL_VARCHAR ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 702 -----------------------

UPDATE SET with function call in expression (std syntax). No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE DDL_DATETIME DDL_INTERVAL  FUNC_INTERVAL FUNC_EXTEND  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE DEFINE_DATETIME DEFINE_INTERVAL DEFINE_VARCHAR DEFINE_INTEGER DEFINE_FLOAT DDL_VARCHAR INSERT_COLUMNLIST_EQ_VALUELIST ANSI_INSERT EXTEND FUNC_DATETIME UPDATE_COLUMN_EQ_VALUE_LIST CURSOR_SELECT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 703 -----------------------

UPDATE SET with variable (std syntax) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE  ANSI_INSERT ANSI_UPDATE CURSOR_SELECT  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE DEFINE_FLOAT DEFINE_DECIMAL DDL_DECIMAL INSERT_COLUMNLIST_EQ_VALUELIST UPDATE_COLUMN_EQ_VALUE_LIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 704 -----------------------

UPDATE SET with sub-expression (std syntax). No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE DDL_DATETIME DDL_INTERVAL  INSERT_COLUMNLIST_EQ_VALUELIST ANSI_UPDATE CURSOR_SELECT  FUNC_DATETIME FUNC_INTERVAL  DEFINE_CHAR DEFINE_SMALLINT DEFINE_DATE DEFINE_DATETIME DEFINE_INTERVAL DDL_VARCHAR ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 705 -----------------------

UPDATE SET units (std syntax). No run-time checking.

**** TEST MARKED INVALID IN run_tests ******
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATETIME  INSERT_COLUMNLIST_EQ_VALUELIST ANSI_UPDATE CURSOR_SELECT
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 706 -----------------------

Select with constants and expresions, all combinations. Informix specific syntax.

Test needs database
Is ANSI SQL 92 compatible
Needs at least version 7.31 of Informix 4gl.
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT ANSI_SELECT DROP_TABLE  DDL_INTERVAL DDL_DATETIME FUNC_DATETIME FUNC_INTERVAL  DEFINE_SMALLINT DEFINE_INTERVAL DEFINE_CHAR DEFINE_VARCHAR DEFINE_INTEGER DEFINE_FLOAT DEFINE_SMALLFLOAT DEFINE_DECIMAL DEFINE_REAL DEFINE_DATE DEFINE_DATETIME INSERT_COLUMNLIST_EQ_VALUELIST IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 707 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 710 -----------------------

INSERT witl fully qualified table names.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_TABLE_QUALIFIED_PATH CREATE_TABLE  INSERT_COLUMNLIST_EQ_VALUELIST_QUALIFIED_PATH  INSERT_COLUMNLIST_EQ_VALUELIST ANSI_INSERT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 711 -----------------------

DELETE from view. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_VIEW CREATE_TABLE CREATE_VIEW_AS_SELECT  INSERT_COLUMNLIST_EQ_VALUELIST ANSI_DELETE CURSOR_SELECT META_DELETE_FROM_VIEW  DEFINE_CHAR ANSI_INSERT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 712 -----------------------

DELETE on multi-table view. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_VIEW CREATE_TABLE CREATE_VIEW_AS_SELECT_MULTI_TABLE  INSERT_COLUMNLIST_EQ_VALUELIST ANSI_DELETE SQLCA_SQLCODE CURSOR_SELECT  META_DELETE_FROM_VIEW_MULTI_TABLE  DEFINE_CHAR ANSI_INSERT CREATE_VIEW_AS_SELECT IF UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 713 -----------------------

DELETE on synonym. No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_SYNONYM CREATE_TABLE CREATE_SYNONYM  INSERT_COLUMNLIST_EQ_VALUELIST ANSI_DELETE CURSOR_SELECT  META_DELETE_FROM_SYNONYM  DEFINE_CHAR ANSI_INSERT FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 714 -----------------------

DELETE with fully qualified table names.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_TABLE_QUALIFIED_PATH CREATE_TABLE  CREATE_TABLE_QUALIFIED_PATH  INSERT_COLUMNLIST_EQ_VALUELIST_QUALIFIED_PATH DELETE_QUALIFIED_PATH   INSERT_COLUMNLIST_EQ_VALUELIST ANSI_INSERT ANSI_DELETE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 715 -----------------------

Simple SELECT test.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST ANSI_SELECT  DEFINE_SMALLINT ANSI_INSERT IF EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 716 -----------------------

SELECT several columns.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 717 -----------------------

SELECT ALL.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  SELECT_ALL  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 718 -----------------------

SELECT DISTINCT

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  SELECT_DISTINCT  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 719 -----------------------

SELECT AS

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  SELECT_AS  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 720 -----------------------

SELECT with quoted strings.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  SELECT_AS  DEFINE_SMALLINT DEFINE_CHAR ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 721 -----------------------

Check if column expressions is correctly fetched.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_VIEW DROP_SYNONYM CREATE_TABLE CREATE_VIEW_AS_SELECT  CREATE_SYNONYM INSERT_COLUMNLIST_EQ_VALUELIST ROWID  DEFINE_SMALLINT DEFINE_CHAR DEFINE_FLOAT DEFINE_INTEGER ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 722 -----------------------

SELECT with expresion. Informix SQL dialect (?).

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  DEFINE_SMALLINT DEFINE_FLOAT ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 723 -----------------------

Check if select with substring fecth the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST SELECT_SUBSTRING  DEFINE_CHAR DEFINE_SMALLINT ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 724 -----------------------

Check if a select with \* fetch all correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_VIEW DROP_SYNONYM CREATE_TABLE CREATE_VIEW_AS_SELECT  CREATE_SYNONYM INSERT_COLUMNLIST_EQ_VALUELIST ANSI_SELECT  META_SELECT_FROM_VIEW META_SELECT_FROM_SYNONYM  DEFINE_SMALLINT DEFINE_CHAR DEFINE_FLOAT DEFINE_INTEGER ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 725 -----------------------

Check if a select with \* fetch all correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE DROP_VIEW DROP_SYNONYM CREATE_TABLE CREATE_VIEW_AS_SELECT  CREATE_SYNONYM INSERT_COLUMNLIST_EQ_VALUELIST ANSI_SELECT  META_SELECT_FROM_VIEW META_SELECT_FROM_SYNONYM  DEFINE_SMALLINT DEFINE_CHAR DEFINE_FLOAT DEFINE_INTEGER ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 726 -----------------------

Check if a select with over two tables fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_SELECT  DEFINE_SMALLINT DEFINE_CHAR DEFINE_FLOAT DEFINE_INTEGER ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 727 -----------------------

Check if a select with over two tables fetch the correct values AS ALIAS.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_SELECT META_SELECT_AS_ALIAS  DEFINE_SMALLINT DEFINE_CHAR DEFINE_FLOAT DEFINE_INTEGER ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 728 -----------------------

Check if a select with over two tables with outer fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  SELECT_OUTER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_FLOAT DEFINE_INTEGER ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 729 -----------------------

Check if a select with over two tables with two outer fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  SELECT_OUTER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_FLOAT DEFINE_INTEGER ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 730 -----------------------

Check if a select with over two tables with two outer fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  SELECT_OUTER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_FLOAT DEFINE_INTEGER ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 731 -----------------------

SELECT with named ORDER BY.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR SELECT_ALL  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 732 -----------------------

SELECT with numbered ORDER BY

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR SELECT_ALL ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 733 -----------------------

SELECT with DEC and ASC ORDER BY clause

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR SELECT_ALL ORDER_BY_ASC ORDER_BY_DESC  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 734 -----------------------

SELECT with complex ORDER BY.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR ORDER_BY_ASC ORDER_BY_DESC ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE DEFINE_DECIMAL DDL_DECIMAL ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 735 -----------------------

Check if a named group by fetches the correct values. .

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR SELECT_COUNT ORDER_BY_NUMBER GROUP_BY  DEFINE_SMALLINT DEFINE_CHAR DEFINE_INTEGER ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 736 -----------------------

Check if a numbered group by fetches the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR SELECT_COUNT ORDER_BY_NUMBER GROUP_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_INTEGER ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  GROUP_BY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 737 -----------------------

Check if a numbered group by fetches the correct values. Mixed GROUP BY.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR SELECT_COUNT ORDER_BY_NUMBER GROUP_BY GROUP_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_INTEGER ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 738 -----------------------

Check if a select into temp insert the correct values and then they are correctly fetched.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_INTO_TEMP  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE DROP_TABLE DDL_DATE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST ANSI_INSERT ORDER_BY_ASC ORDER_BY_DESC ORDER_BY CURSOR_SELECT OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY CLOSE_CURSOR EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 739 -----------------------

select into temp with no log..

Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: SELECT_INTO_TEMP DROP_TABLE CREATE_TABLE BEGIN_WORK ROLLBACK_WORK  ORDER_BY_ASC ORDER_BY_DESC SQLCA_SQLCODE CLOSE_CURSOR  SELECT_INTO_TEMP_WITH_NO_LOG  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST ANSI_INSERT ANSI_DELETE ORDER_BY CURSOR_SELECT OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 740 -----------------------

Check if a select with a join between two tables fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR  DEFINE_SMALLINT DEFINE_CHAR DEFINE_FLOAT DEFINE_INTEGER ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 741 -----------------------

Check if a simple select with a NOT condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 742 -----------------------

Check if a simple select with a simple comparison condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 743 -----------------------

Check if a simple select with a IN subquery in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_WHERE_IN_SUBSELECT ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT WHERE_IN_SELECT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 744 -----------------------

Check if a simple select with a EXISTS subquery in where condition fetch the correct values

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_WHERE_EXISTS_SUBSELECT ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT WHERE_EXISTS ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 745 -----------------------

Check if a simple select with ALL subquery in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_WHERE_ALL_SUBSELECT ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 746 -----------------------

Check if a simple select with between in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_WHERE_BETWEEN ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 747 -----------------------

Check if a simple select with IN expression (not subquery) in where condition fetch the correct values

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_WHERE_IN ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT WHERE_IN ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 748 -----------------------

Check if a simple select wth IN expression (not subquery) in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_WHERE_NULL ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT WHERE_NULL ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 749 -----------------------

Check if a simple select with LIKE in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_WHERE_LIKE ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 750 -----------------------

Check if a simple select with MATCHES in where condition fetch the correct values

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_WHERE_MATCHES ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 751 -----------------------

Check if a simple select with MATCHES in where condition using a variable fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_WHERE_MATCHES ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 752 -----------------------

Check if units on select list return the correct values.

**** TEST MARKED INVALID IN run_tests ******
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATETIME  ANSI_UPDATE SELECT_UNITS

 ------------------- Info for test 753 -----------------------

Check if a simple select that uses the rowid fetch the correct values values

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ROWID SQLCA_SQLCODE CLOSE_CURSOR  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE DEFINE_INTEGER ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 754 -----------------------

Check if a simple select with LIKE and characters escaped in where condition fetch the correct values

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT WHERE_LIKE_ESCAPE ORDER_BY_NUMBER CLOSE_CURSOR  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 755 -----------------------

Check if a simple select with < operatoor on where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ORDER_BY_NUMBER CLOSE_CURSOR  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 756 -----------------------

Check if a simple select with > operator on where condition fetch the correct values

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ORDER_BY_NUMBER CLOSE_CURSOR  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 757 -----------------------

Check if a simple select with <= operatoor on where condition fetch the correct values

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ORDER_BY_NUMBER CLOSE_CURSOR  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 758 -----------------------

Check if a simple select with LIKE in where condition using a variable fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ORDER_BY_NUMBER WHERE_LIKE CLOSE_CURSOR SQLCA_SQLCODE  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 759 -----------------------

Check if a simple select with GREATER or equal the in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ORDER_BY_NUMBER CLOSE_CURSOR SQLCA_SQLCODE  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 760 -----------------------

Check if a simple select with diferent the in where condition fetch the correct values

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ORDER_BY_NUMBER CLOSE_CURSOR SQLCA_SQLCODE FUNC_MDY  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 761 -----------------------

Check if a simple select with MATCHES and characters escaped in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ORDER_BY_NUMBER CLOSE_CURSOR SQLCA_SQLCODE WHERE_MATCHES_ESCAPE  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 762 -----------------------

Check if a simple select with AND in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ORDER_BY_NUMBER CLOSE_CURSOR WHERE_LIKE FUNC_MDY  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 763 -----------------------

Check if a simple select with OR in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ORDER_BY_NUMBER CLOSE_CURSOR WHERE_LIKE  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 764 -----------------------

Check if a simple select with LIKE in where condition using a variable fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT ORDER_BY_NUMBER CLOSE_CURSOR WHERE_LIKE  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 765 -----------------------

Test a select from a column to a smaller variable

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TEMP_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR  DEFINE_CHAR ANSI_INSERT OPEN_CURSOR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 766 -----------------------

Tests to exemplify the behaviour of cursor location with aubit and standard 4gl.

**** TEST EXPECTED TO FAIL BECAUSE OF THE AUBIT4GL BUG ******
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 767 -----------------------

Testing if the values returned by fgl_keyval is equal to the values of informix.

**** TEST EXPECTED TO FAIL BECAUSE OF THE AUBIT4GL BUG ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 768 -----------------------

Check if a simple select with ANY subquery in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR WHERE_ANY_SUBSELECT ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 769 -----------------------

Check if a simple select with SOME subquery in where condition fetch the correct values

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR WHERE_SOME_SUBSELECT ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 770 -----------------------

Check if a simple select with NOT IN expression (not subquery) in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR WHERE_NOT_IN ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT WHERE_IN ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 771 -----------------------

Check if a select without a join between two tables fetch the correct cartesian product.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR ORDER_BY_NUMBER SQLCA_SQLCODE  DEFINE_SMALLINT DEFINE_CHAR DEFINE_FLOAT DEFINE_INTEGER ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 772 -----------------------

Check if a simple select with NOT BETWEEN in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR ORDER_BY_NUMBER WHERE_BETWEEN  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 773 -----------------------

Check if a simple select with IS NULL in where condition using a variable fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR ORDER_BY_NUMBER WHERE_NULL  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE INITIALIZE_NULL ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 774 -----------------------

Check if a simple select with NOT LIKE in where condition using a variable fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR ORDER_BY_NUMBER WHERE_LIKE  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 775 -----------------------

Check if a simple select with NOT MATCHES in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR ORDER_BY_NUMBER WHERE_MATCHES  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 776 -----------------------

Check if a simple select with LIKE in where condition using a variable fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR ORDER_BY_NUMBER WHERE_LIKE  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 778 -----------------------

Check if a simple select with COUNT(*) in select list fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR ORDER_BY_NUMBER GROUP_BY SELECT_COUNT  DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 779 -----------------------

Check if a simple select with AVG in select list fetch the correct values..

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  CURSOR_SELECT CLOSE_CURSOR SELECT_AVG  DEFINE_SMALLINT ANSI_INSERT OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 780 -----------------------

Check if a simple select with MAX in select list fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_MAX GROUP_BY ORDER_BY  DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 781 -----------------------

Check if a simple select with MIN in select list fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_MIN GROUP_BY ORDER_BY  DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 782 -----------------------

Check if a simple select with SUM in select list fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_SUM GROUP_BY ORDER_BY  DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 783 -----------------------

Check if a simple select with COUNT distinct in select list fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  SELECT_COUNT_DISTINCT ORDER_BY_NUMBER  DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT AGG_DISTINCT SELECT_COUNT ORDER_BY IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 784 -----------------------

Check if a simple select with MAX(ALL) in select list fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_MAX_ALL ORDER_BY GROUP_BY  DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT AGG_ALL SELECT_MAX OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING  UNLOAD_TO
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 785 -----------------------

Check if a simple select with AVG(ALL) in select list fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_AVG_ALL ORDER_BY GROUP_BY  DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT AGG_ALL SELECT_AVG OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 786 -----------------------

Check if a simple select with MIN(ALL) in select list fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_MIN_ALL ORDER_BY GROUP_BY  DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT AGG_ALL SELECT_MIN OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 787 -----------------------

Check if a simple select with SUM ALL in select list fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_SUM_ALL ORDER_BY GROUP_BY  DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT AGG_ALL SELECT_SUM OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 788 -----------------------

Check if a simple select with HAVING condition using a variable fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_HAVING_COUNT ORDER_BY GROUP_BY  DEFINE_SMALLINT DEFINE_DATE ANSI_INSERT SELECT_COUNT HAVING OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 789 -----------------------

Check with UNION in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_UNION ORDER_BY_NUMBER WHERE_BETWEEN  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  UNLOAD_TO_SELECT_FROM EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 790 -----------------------

Check with UNION ALL in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE INSERT_COLUMNLIST_EQ_VALUELIST DDL_DATE  CURSOR_SELECT CLOSE_CURSOR SELECT_UNION_ALL ORDER_BY_NUMBER WHERE_BETWEEN  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE ANSI_INSERT UNION_ALL SELECT_UNION ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  UNLOAD_TO_SELECT_FROM EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 791 -----------------------

Check if a ROLLBACK WORK works ok.

Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE BEGIN_WORK ANSI_INSERT ROLLBACK_WORK  SELECT_COUNT  DEFINE_SMALLINT INSERT_COLUMNLIST_EQ_VALUELIST IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 792 -----------------------

Check if the commit work statement after a transaction work

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE BEGIN_WORK ANSI_INSERT COMMIT_WORK  CURSOR_SELECT ORDER_BY_NUMBER CLOSE_CURSOR  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE INSERT_COLUMNLIST_EQ_VALUELIST ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 793 -----------------------

Check if the create audit statement works. Note that this statement only works on Informix SE

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_AUDIT  DROP_TABLE CREATE_TABLE SQLCA_SQLCODE IF EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 794 -----------------------

Check if the drop audit statement works. Note that this statement only works on Informix SE

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_AUDIT  DROP_TABLE CREATE_TABLE CREATE_AUDIT SQLCA_SQLCODE IF EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 795 -----------------------

Check if the RECOVER TABLE statement works Note that this statement only works on Informix SE.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE RECOVER_TABLE SQLCA_SQLCODE  IF EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 796 -----------------------

Check if the ROLLFORWARD DATABASE statement works. Note that this statement only works on Informix SE.

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE CLOSE_DATABASE ROLLFORWARD_DATABASE  EXECUTE_IMMEDIATE EXECUTE SQLCA_SQLCODE IF EXIT_PROGRAM_EXPR UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 797 -----------------------

Check if the SET CONSTRAINTS ALL IMEDIATE statement works

**** TEST MARKED INVALID IN run_tests ******
Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ALTER_TABLE ADD_CONSTRAINT DDL_CHECK  SET_CONSTRAINTS BEGIN_WORK COMMIT_WORK CLOSE_CURSOR
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 798 -----------------------

Check if a simple select with rowid in select list fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE ANSI_INSERT CURSOR_SELECT  ROWID ORDER_BY_NUMBER CLOSE_CURSOR  DEFINE_INTEGER DEFINE_SMALLINT DEFINE_DATE INSERT_COLUMNLIST_EQ_VALUELIST ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 800 -----------------------

This test tests if the compiler accepts the EXECUTE IMMEDIATE keyword.

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 801 -----------------------

This test checks if VARCHAR is handled OK

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 802 -----------------------

This tests check if construct works with a varchar

Test is compile only, no execution will be attempted
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 803 -----------------------

Testing DISPLAY ... ATTRIBUTE(variable) Syntax

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 900 -----------------------

Test if the sqlca.sqlcode is assigned with an obvious sql error.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 901 -----------------------

Test if the sqlca.sqlcode is assigned with NOTFOUND sql error.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_SELECT SQLCA_SQLCODE  DEFINE_SMALLINT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 902 -----------------------

Test if the sqlca.sqlerrm is assigned with an obvious sql error.

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: ANSI_SELECT SQLCA_SQLERRM  DEFINE_CHAR DEFINE_SMALLINT PREPARE IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 903 -----------------------

Test if the sqlca.sqlerrm is assigned with an obvious sql error.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 904 -----------------------

Test if the sqlca.sqlerrd[1] is assigned with NOTFOUND sql error.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_SELECT SQLCA_SQLERRD1  DEFINE_SMALLINT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 905 -----------------------

Test if the sqlca.sqlerrd[2] is assigned with last serial inserted.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_SELECT SQLCA_SQLERRD2 DDL_SERIAL  DEFINE_SMALLINT ANSI_INSERT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 906 -----------------------

Test if the sqlca.sqlerrd[2] is assigned with the ISAM error with a lock

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT SQLCA_SQLERRD2   DEFINE_SMALLINT DDL_NOT_NULL INSERT_COLUMNLIST_EQ_VALUELIST IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 907 -----------------------

Test if the sqlca.sqlerrd[3] is assigned with the number of rows inserted updated and deleted.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT SQLCA_SQLERRD3 ANSI_UPDATE ANSI_DELETE  DEFINE_SMALLINT IF UI_DISPLAY_LINE_MODE DISPLAY UPDATE_COLUMN_EQ_VALUE_LIST EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 908 -----------------------

Test if the sqlca.sqlerrd[4] is assigned with the estimated cost of query.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT CURSOR_SELECT  SQLCA_SQLERRD4   DEFINE_SMALLINT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 909 -----------------------

Test if the sqlca.sqlerrd[5] is assigned with the offset of an error in an wrong sql statement.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_SELECT SQLCA_SQLERRD5   DEFINE_CHAR DEFINE_SMALLINT PREPARE IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 910 -----------------------

Test if the sqlca.sqlerrd[6] is assigned with last rowid inserted.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_SERIAL ANSI_INSERT SQLCA_SQLERRD6   DEFINE_SMALLINT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 911 -----------------------

Test if the sqlca.sqlarn[1] is assigned with a W

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT ANSI_SELECT SQLCA_SQLAWARN1  DEFINE_SMALLINT DEFINE_CHAR SQLCA_SQLAWARN IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 912 -----------------------

Test if the sqlca.sqlarn[2] is assigned with a W after a truncation in a select.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT ANSI_SELECT SQLCA_SQLAWARN2  DEFINE_SMALLINT DEFINE_CHAR SQLCA_SQLAWARN IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 913 -----------------------

Test if the sqlca.sqlarn[2] is assigned with a W after using a database without transactions.

Test needs database
Database MUST have transactions enabled for this test.
Is ANSI SQL 92 compatible
Uses SQL statemets features: SQLCA_SQLAWARN2  DEFINE_SMALLINT DEFINE_CHAR SQLCA_SQLAWARN IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 914 -----------------------

Test if the sqlca.sqlawarn[3] is assigned with a W after a null in an agregate function of a select.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT SELECT_SUM SQLCA_SQLAWARN3  DEFINE_SMALLINT DEFINE_INTEGER SQLCA_SQLAWARN IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 915 -----------------------

Test if the sqlca.sqlawarn[4] is assigned with a W after a select with more on a select list then on into

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT ANSI_SELECT SQLCA_SQLAWARN4  DEFINE_SMALLINT DEFINE_INTEGER SQLCA_SQLAWARN IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 916 -----------------------

Test if the sqlca.sqlawarn[5] is assigned with a W after a select from a float to a decimal.

**** TEST MARKED INVALID IN run_tests ******
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT ANSI_SELECT SQLCA_SQLAWARN5
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 917 -----------------------

Test if the sqlca.sqlawarn[6] is assigned with a W after an update with non ansi syntax.

**** TEST MARKED INVALID IN run_tests ******
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE ANSI_INSERT UPDATE_COLUMNLIST_EQ_VALUELIST  SQLCA_SQLAWARN6
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 918 -----------------------

Test 918 for deccvasc

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 919 -----------------------

Test if a char conversion to decimal with c function works ok

**** TEST MARKED INVALID IN run_tests ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 920 -----------------------
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 921 -----------------------

Test if a decimal conversion to int with c function works ok

**** TEST MARKED INVALID IN run_tests ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 922 -----------------------

Test if a long conversion to decimal with c function works ok

**** TEST MARKED INVALID IN run_tests ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 923 -----------------------

Test if a decimal conversion to long with c function works ok

**** TEST MARKED INVALID IN run_tests ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 924 -----------------------

Test if a float conversion to decimal with c function works ok

**** TEST MARKED INVALID IN run_tests ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 925 -----------------------

Test if a decimal conversion to float with c function works ok

**** TEST MARKED INVALID IN run_tests ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 926 -----------------------

Test if a double conversion to decimal with c function works ok

**** TEST MARKED INVALID IN run_tests ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 927 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 928 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 929 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 930 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 931 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 932 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 933 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 934 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 935 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 936 -----------------------

Test if the SET LOG 4gl statement works OK

Test needs database
Database MUST have transactions enabled for this test.
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: SET_LOG SET_BUFFERED_LOG  DEFINE_SMALLINT SQLCA_SQLCODE IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 937 -----------------------

Test if the START DATABASE 4gl statement works OK. Note - This test only works with SE engine

Test is compile only, no execution will be attempted
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CLOSE_DATABASE START_DATABASE_WITH_LOG START_DATABASE_WITH_LOG_MODE_ANSI  DEFINE_SMALLINT SQLCA_SQLCODE IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  START_DATABAE_WITH_LOG START_DATABAE_WITH_LOG_MODE_ANSI
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 938 -----------------------

pop_short

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 939 -----------------------

pop_int

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 940 -----------------------

pop_long

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 941 -----------------------

pop_flo

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 942 -----------------------

pop_dub

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 943 -----------------------

pop_dec

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 944 -----------------------

pop_quote

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 945 -----------------------

pop_vchar

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 946 -----------------------

pop_date

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 947 -----------------------

pop_dtime

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 948 -----------------------

Test if the stack function(s) for interval(s) works.

**** TEST MARKED INVALID IN run_tests ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 949 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 950 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 951 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 952 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 953 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 954 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 955 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 956 -----------------------

Test if the fglstart function works ok

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 957 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 958 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 959 -----------------------
WARNING: test still contains template comment in makefile
*** Test not described ***
**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 960 -----------------------

Test the character variable limits

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 961 -----------------------

Test the date variable limits

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 962 -----------------------

Test the decimal variable limits.

**** TEST EXPECTED TO FAIL BECAUSE OF THE AUBIT4GL BUG ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 963 -----------------------

Test the smallfloat variable limits

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 964 -----------------------

Test the float variable limits

**** TEST MARKED INVALID IN run_tests ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 965 -----------------------

Test the integer variable limits.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 966 -----------------------

Test the MONEY variable limits

**** TEST MARKED INVALID IN run_tests ******
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 967 -----------------------

Test the SMALLINT variable limits

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 968 -----------------------

Test the variable length character variable limits

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 970 -----------------------

Test the datetime variable limits

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 971 -----------------------

Test the interval variable limits

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 973 -----------------------

Test if the conversion from char to another char works

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 974 -----------------------

Test if the conversion from char to a varchar work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 975 -----------------------

Test if the conversion from char to a INTEGER work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 976 -----------------------

Test if the conversion from char to a smallint work

**** TEST EXPECTED TO FAIL BECAUSE OF THE AUBIT4GL BUG ******
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 977 -----------------------

Test if the conversion from char to a float work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 978 -----------------------

Test if the conversion from char to a SMALLFLOAT work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 979 -----------------------

Test if the conversion from char to a decimal work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 980 -----------------------

Test if the conversion from char to a money work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 981 -----------------------

Test the conversion from CHAR to DATE

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 982 -----------------------

Test the conversion from char(s) to datetime(s)

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 983 -----------------------

Test the conversion from char to interval works.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 984 -----------------------

Test if the conversion from a varchar to a char work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 985 -----------------------

Test if the conversion from a varchar to a varchar work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 986 -----------------------

Test if the conversion from varchar to an integer work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 987 -----------------------

Test if the conversion from varchar to a smallint work

**** TEST EXPECTED TO FAIL BECAUSE OF THE AUBIT4GL BUG ******
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 988 -----------------------

Test if the conversion from varchar to a float work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 989 -----------------------

Test if the conversion from varchar to a SMALLFLOAT work.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 990 -----------------------

Test if the conversion from varchar to a decimal work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 991 -----------------------

Test if the conversion from varchar to a money work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 992 -----------------------

Test the conversion from VARCHAR to DATE

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 993 -----------------------

Test the conversion from varchar(s) to datetime(s).

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 994 -----------------------

Test the conversion from varchar to interval works

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 995 -----------------------

Test if the conversion from INTEGER to a char work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 996 -----------------------

Test if the conversion from INTEGER to a varchar work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 997 -----------------------

Test if the conversion from INTEGER to a FLOAT work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 998 -----------------------

Test if the conversion from INTEGER to a FLOAT work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 999 -----------------------

Test if the conversion from INTEGER to a DECIAL work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1000 -----------------------

Test if the conversion from INTEGER to a MONEY work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1001 -----------------------

Test if the conversion from an integer to a date works

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1002 -----------------------

Test if the conversion from SMALLINT to a char work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1003 -----------------------

Test if the conversion from SMALLINT to a varchar work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1004 -----------------------

Test if the conversion from SMALLINT to INTEGER work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1005 -----------------------

Test if the conversion from SMALLINT to FLOAT work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1006 -----------------------

Test if the conversion from SMALLINT to SMALLFLOAT work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1007 -----------------------

Test if the conversion from SMALLINT to DECIMAL work

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1008 -----------------------

Test if Portguese Characters are correctly displayed.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1009 -----------------------

cursor for update declared twice that second thime thinks it does not exist

Test needs database
Uses SQL statemets features: CREATE_TABLE ANSI_INSERT CURSOR_SELECT_FOR_UPDATE META_TRANSACTION  DROP_TABLE UI_DISPLAY_LINE_MODE DISPLAY DEFINE_INTEGER DEFINE_CHAR PREPARE CURSOR_SELECT BEGIN_WORK OPEN_CURSOR UPDATE_COLUMN_EQ_VALUE_LIST UPDATE_WHERE_CURRENT_OF CLOSE_CURSOR COMMIT_WORK
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1060 -----------------------

Testing a way to pass values between shell and 4gl using a temporary file.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_CHAR DEFINE_SMALLINT DEFINE_INTEGER RUN UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1200 -----------------------

This is a fairly comprehensive declare/open test for input/output binding

Test needs database
Uses SQL statemets features: CREATE_TEMP_TABLE ANSI_INSERT DROP_TABLE ANSI_SELECT CURSOR_SELECT  FREE_CURSOR CLOSE_CURSOR SQLCA_SQLCODE STATUS  DEFINE_SMALLINT DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY IF FOREACH OPEN_CURSOR EXIT_WHILE PREPARE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1201 -----------------------

Test behavious of status variable. No run-time checking

Test needs database
Uses SQL statemets features: CREATE_TEMP_TABLE ANSI_SELECT STATUS  DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1202 -----------------------

infield() in ON KEY/INPUT BY NAME. Test is invalid - missing form file and keys.in

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1203 -----------------------

Tests if finished an already finished report causes a core dump

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1204 -----------------------

Check the clear line in a display

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1205 -----------------------

passing null strings to a function

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1206 -----------------------

ord() server-side function in SELECT and UPDATE SQL statements

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE ANSI_INSERT ANSI_SELECT ANSI_UPDATE FUNC_ORD DROP_TABLE  DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY UPDATE_COLUMN_EQ_VALUE_LIST
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1207 -----------------------

Tests conversion from/to money/smallint (MID 639)

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1208 -----------------------

Simple unload test for MID 591 Note that for this test to work, in most cases, the database engine needs to have sufficient privileges to write to the test directory

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: UNLOAD_TO_SELECT_FROM  DEFINE_INTEGER IFX_SYSTABLES UNLOAD_TO
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1209 -----------------------

lineno in context of REPORT block

Test contains REPORT block
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1210 -----------------------

handling of -ve decimal numbers

Test contains REPORT block
Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: NONE  DEFINE_MONEY DEFINE_DECIMAL DEFINE_INTEGER DEFINE_SMALLINT DEFINE_CHAR USE_REPORT REPORT_ORDER_BY ON_EVERY_ROW  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1211 -----------------------

This checks a reports output can be set within the report

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_DECIMAL DEFINE_SMALLINT DDL_DECIMAL CREATE_TEMP_TABLE FOR ANSI_INSERT USE_REPORT CURSOR_SELECT FOREACH ON_EVERY_ROW ON_LAST_ROW 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1212 -----------------------

This is a quick test of next key next

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1213 -----------------------

Report test

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1214 -----------------------

Report test

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1215 -----------------------

Report test

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1216 -----------------------
*** Test not described ***

 ------------------- Info for test 1217 -----------------------

Tests some comparsons on dates using string literals

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1218 -----------------------

'units day' calculations and mdy() assignments

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1219 -----------------------

This is a test of several issues - mid 655 656 657

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1220 -----------------------

Tests the SQL drivers ability to select fewer or more columns than variables

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE ANSI_INSERT ANSI_SELECT  SELECT_STAR_INTO_VARLISTLIST_LESS SELECT_STAR_INTO_VARLISTLIST_MORE  DEFINE_CHAR INITIALIZE_NULL IF UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1221 -----------------------

Tests empty foreach loops (bug reported by James Scott)

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_LIKE UI_DISPLAY_LINE_MODE DISPLAY IFX_SYSTABLES CURSOR_SELECT FOREACH EXIT_FOREACH   ORDER_BY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1222 -----------------------

Test of using a 0 in a numeric field on a construct

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1223 -----------------------

after group clauses where there is no every row

Test contains REPORT block
Test needs database
Uses SQL statemets features: CREATE_TEMP_TABLE_NO_LOG LOAD_FROM_INSERT_INTO ANSI_SELECT  DEFINE_INTEGER DEFINE_CHAR DEFINE_DATE DEFINE_DECIMAL DDL_DATE DDL_DECIMAL SELECT_INTO_TEMP_WITH_NO_LOG CREATE_TEMP_TABLE ORDER_BY CURSOR_SELECT USE_REPORT FOREACH DEFINE_SMALLINT REPORT_PAGE_HEADER REPORT_AFTER_GROUP ON_LAST_ROW  EXPR_USING ET_EXPR_USING PAGE_HEADER AFTER_GROUP
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1224 -----------------------

MID 663 - ensure that the number of function parameters is checked

Test is expected to exit with code 1
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1225 -----------------------

Brief test of the implementation of PRINT FILE

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1226 -----------------------

This tests passing NULL values to DAY, MONTH, YEAR and MDY functions

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1227 -----------------------

MID 666

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_SMALLINT DEFINE_DATE USE_REPORT REPORT_ORDER_BY ON_EVERY_ROW   EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1228 -----------------------

MID 661 Note that for this test to work, in most cases, the database engine needs to have sufficient privileges to write to the test directory

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_DATE DDL_DATE CREATE_TEMP_TABLE ANSI_INSERT UPDATE_COLUMN_EQ_VALUE_LIST UI_DISPLAY_LINE_MODE DISPLAY UNLOAD_TO 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1229 -----------------------

MID 672 - spaces at the start if a PICTURE

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1230 -----------------------

MID 670 construct on date field (part 1)

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1231 -----------------------

MID 670 construct on date field (part 1)

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1232 -----------------------

MID 669 - construct on DECIMAL field

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1233 -----------------------

MID 676 : Extra spaces in print date and print sum where

Test contains REPORT block
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1234 -----------------------

This tests the setting of a portion of a string with a null value

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1235 -----------------------

Tests using numbers for form colours...

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1236 -----------------------

Test for MID 677 - construct it is not allowing criteria mark as noentry in a form

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DROP_TABLE CREATE_TEMP_TABLE UI_OPEN_WINDOW USES_FORM UI_DISPLAY_FORM UI_CONSTRUCT IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR   OPEN_WINDOW DISPLAY_FORM CONSTRUCT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1237 -----------------------

match, is null and length test on a variable

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1238 -----------------------

MID 676 : Extra spaces in print date and print sum where .. for MDY2/

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1239 -----------------------

Test of interval/character string math that was causing problems

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1240 -----------------------

Basic exercising of string types

**** TEST MARKED INVALID IN run_tests ******

 ------------------- Info for test 1241 -----------------------

Keyword 'user' test

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: CREATE_TEMP_TABLE ANSI_INSERT ANSI_SELECT KEYWORD_USER  DEFINE_CHAR ET_EXPR_MATCHES IF EXIT_PROGRAM_EXPR UI_DISPLAY_LINE_MODE DISPLAY  EXPR_MATCHES
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1242 -----------------------

Basic testing of libfile directory functions

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1243 -----------------------

some basic testing on libfile filehandling functionality

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1244 -----------------------

MESSAGE LINE, PROPMPT LINE and DISPLAY AT positioning

test uses aclfgl_aclfgl_dump_screen, A4GL_clr_window or aclfgl_fgl_drawbox, so
it won't work in CONSOLE mode
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1245 -----------------------

NULL in DATE

Test needs database
Uses SQL statemets features:  DDL_DATE CREATE_TEMP_TABLE INSERT_COLUMNLIST_EQ_VALUELIST  ANSI_INSERT SQLCA_SQLCODE UNLOAD_TO WHERE_NULL ANSI_SELECT ANSI_UPDATE  UPDATE_COLUMNLIST_EQ_VALUELIST  DEFINE_DATE INITIALIZE_NULL UI_DISPLAY_LINE_MODE DISPLAY IF EXIT_PROGRAM_EXPR UPDATE_COLUMN_EQ_VALUE_LIST
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1246 -----------------------

Tests a rollback work

Test needs database
Database MUST have transactions enabled for this test.
Uses SQL statemets features: DROP_TABLE CREATE_TABLE BEGIN_WORK ANSI_INSERT SELECT_COUNT ROLLBACK_WORK  DEFINE_SMALLINT DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY IF EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1247 -----------------------

Assigning decimal variable by division

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1248 -----------------------

Tests rolling back - mid 717

Test needs database
Database MUST have transactions enabled for this test.
Uses SQL statemets features: CREATE_TEMP_TABLE META_TRANSACTION ANSI_INSERT ANSI_SELECT DROP_TABLE  DEFINE_SMALLINT DEFINE_CHAR BEGIN_WORK SELECT_COUNT UI_DISPLAY_LINE_MODE DISPLAY ROLLBACK_WORK IF EXIT_WHILE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1249 -----------------------

Date tests of some sort

Test needs database
Is ANSI SQL 92 compatible
Uses SQL statemets features: DEFINE_SMALLINT DEFINE_DATE DEFINE_CHAR DROP_TABLE DDL_DATE CREATE_TEMP_TABLE ANSI_DELETE UI_DISPLAY_AT DISPLAY ANSI_INSERT IF EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1250 -----------------------

This is a test provided by Miguel Caldera which demonstates some corruption

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_INTEGER DEFINE_CHAR DEFINE_DECIMAL USE_REPORT REPORT_ORDER_BY ON_EVERY_ROW REPORT_AFTER_GROUP ON_LAST_ROW   EXPR_USING ET_EXPR_USING AFTER_GROUP
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1251 -----------------------

date handling , mid 720

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_DATE DEFINE_DECIMAL DDL_DATE CREATE_TEMP_TABLE ANSI_INSERT DDL_DECIMAL CURSOR_SELECT FOREACH UI_DISPLAY_LINE_MODE DISPLAY SELECT_INTO_TEMP UNLOAD_TO   EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1252 -----------------------

Yes another report test , mid 721 (varchars)

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR USE_REPORT DEFINE_VARCHAR REPORT_PAGE_HEADER ON_EVERY_ROW ON_LAST_ROW   PAGE_HEADER
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1253 -----------------------

Tests a bug using consecutive constructs not blanking the field properly

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_SMALLINT DEFINE_INTEGER USES_FORM UI_DISPLAY_FORM CREATE_TEMP_TABLE ANSI_INSERT INITIALIZE_NULL UI_CONSTRUCT MESSAGE EXIT_CONSTRUCT EXIT_PROGRAM_EXPR CASE_EXPR IF UI_DISPLAY_LINE_MODE DISPLAY CLOSE_FORM   DISPLAY_FORM CONSTRUCT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1254 -----------------------

Tests use of a dynamic field

**** TEST EXPECTED TO FAIL BECAUSE OF THE AUBIT4GL BUG ******

 ------------------- Info for test 1255 -----------------------

tests start report to expression

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1256 -----------------------

LOAD FROM from test. Uses FILESCHEMA as database type when compiling

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_LIKE UI_DISPLAY_LINE_MODE DISPLAY DDL_DECIMAL DDL_DATE CREATE_TEMP_TABLE LOAD_FROM_INSERT_INTO
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1257 -----------------------

This tests for a core dump when using a specific unload routine, known to fail on some platforms (they should remove the #define KAGEL_UNLOAD from lib/libsql/esqlc/esql.ec if set)

Test needs database
Uses SQL statemets features: DATABASE_USED IFX_SYSTABLES UNLOAD_TO PREPARE CURSOR_SELECT OPEN_CURSOR SQLCA_SQLCODE UI_DISPLAY_LINE_MODE DISPLAY 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1258 -----------------------

This tests the summation of nulls within a report

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_INTEGER USE_REPORT DEFINE_CHAR REPORT_PAGE_HEADER ON_EVERY_ROW REPORT_AFTER_GROUP ON_LAST_ROW   EXPR_USING ET_EXPR_USING PAGE_HEADER AFTER_GROUP
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1259 -----------------------

This is a test for fgl_getenv returning null when an environment variable is not set

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1260 -----------------------

VISUAL TEST checks to see if a terminal can change colours..

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1261 -----------------------

Escape characters in form file

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1262 -----------------------

Checks sqlerrd[3] is set after a LOAD

Test needs database
Uses SQL statemets features: DATABASE_USED CREATE_TEMP_TABLE LOAD_FROM_INSERT_INTO SQLCA_SQLERRD3 UI_DISPLAY_LINE_MODE DISPLAY IF EXIT_PROGRAM_EXPR 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1263 -----------------------

Test sqlerrd[3] is set after a fetch

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_INTEGER CREATE_TEMP_TABLE CURSOR_SELECT OPEN_CURSOR SQLCA_SQLERRD3 UI_DISPLAY_LINE_MODE DISPLAY ANSI_INSERT 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1264 -----------------------

Another test for sqlerrd[3] not being set for a fetch

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_CHAR DROP_TABLE CREATE_TABLE ANSI_INSERT CURSOR_SELECT OPEN_CURSOR SQLCA_SQLERRD3 UI_DISPLAY_LINE_MODE DISPLAY IF EXIT_PROGRAM_EXPR 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1265 -----------------------

Checks the value of variables after a fetch with too few columns in the select

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR IFX_SYSTABLES UI_DISPLAY_LINE_MODE DISPLAY IF EXIT_PROGRAM_EXPR CURSOR_SELECT OPEN_CURSOR 
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1266 -----------------------

Tests the ability to generate a pdf report


 ------------------- Info for test 1267 -----------------------

Report TOP OF PAGE test maybe?

Test contains REPORT block
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1268 -----------------------

Tests implementation of TOP OF PAGE

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1269 -----------------------

Tests implementation of TOP OF PAGE

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1270 -----------------------

Tests implementation of top of page

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1271 -----------------------

This ensures caseinsensitivity on HIDE OPTION/SHOW OPTION

Test contains REPORT block

 ------------------- Info for test 1272 -----------------------

Newline and MATCHES in string

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1273 -----------------------

Tests selecting into from a union'd statement with no cursor

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR CREATE_TEMP_TABLE ANSI_INSERT UNION_ALL SELECT_UNION UI_DISPLAY_LINE_MODE DISPLAY 

 ------------------- Info for test 1274 -----------------------

Various DATETIME variants inserted

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_DATETIME DDL_DATETIME CREATE_TEMP_TABLE ANSI_INSERT UI_DISPLAY_LINE_MODE DISPLAY
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1275 -----------------------

DISPLAY in loops

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1276 -----------------------

This tests iterations within a for loop


 ------------------- Info for test 1277 -----------------------

Expression testing at the top of a 'while'


 ------------------- Info for test 1278 -----------------------

Test for setting default in a form


 ------------------- Info for test 1279 -----------------------

Check on passing a record to a function


 ------------------- Info for test 1280 -----------------------

Test for include=(' ')


 ------------------- Info for test 1281 -----------------------

channel::read/channel::write test


 ------------------- Info for test 1282 -----------------------

Tests order by using varchar , MID 764


 ------------------- Info for test 1283 -----------------------

INITIALIZE elements of the record

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1284 -----------------------

Test of BEFORE INSERT with an input array


 ------------------- Info for test 1285 -----------------------

Postgres issue with BEGIN WORK and the implicit CLOSE used with a foreach


 ------------------- Info for test 1286 -----------------------

ON KEY inside of the INPU BY NAME

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1287 -----------------------

Test of BEFORE INSERT with an input array


 ------------------- Info for test 1288 -----------------------

INPUT BY NAME

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1289 -----------------------

DISPLAY and NULL - no checking performed

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1290 -----------------------

Tests the clearing of a field before entry for a simple numeric field


 ------------------- Info for test 1291 -----------------------

tests a having with no group by


 ------------------- Info for test 1292 -----------------------

DATETIME YEAR TO SECOND assigned CURRENT

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1293 -----------------------

Tests of some dates with interactions with the database


 ------------------- Info for test 1294 -----------------------

Test decimal with no scale


 ------------------- Info for test 1295 -----------------------

PROMPT - no checking and missing form file

**** TEST MARKED INVALID IN run_tests ******
Test waits for user's input in CONSOLE mode, because automated testing
was not implemented there, so we must skip them untill this is implemented
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1296 -----------------------

Tests rounding of decimal places on a form

Test uses .per form files

 ------------------- Info for test 1297 -----------------------

Quick check that compiler compiles variables for attributes


 ------------------- Info for test 1298 -----------------------

Mantis bug 790 , comment line misplaced


 ------------------- Info for test 1299 -----------------------

More testing of comment line, default is different for a window and SCREEN


 ------------------- Info for test 1300 -----------------------

CREATE TABLE with PRIMARY KEY clause. No run-time checking. NOTE: fails with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Needs at least version 7.31 of Informix 4gl.
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_NOT_NULL DDL_PRIMARY_KEY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1301 -----------------------

CREATE TABLE with DEFAULT clause. No run-time checking. NOTE: fails with -ifx-p.

Test is expected to exit with code 
Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DEFAULT_VALUE DDL_DATETIME  DDL_DEFAULT_DATETIME  DEFINE_CHAR DDL_DATE
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1302 -----------------------

UPDATE with constants in SET clause (Informix syntax) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE DDL_DATETIME DDL_INTERVAL ANSI_INSERT  UPDATE_COLUMNLIST_EQ_VALUELIST CURSOR_SELECT  FUNC_MDY FUNC_INTERVAL FUNC_DATETIME  DEFINE_CHAR DEFINE_SMALLINT DEFINE_DATE DEFINE_DATETIME DEFINE_INTERVAL DDL_VARCHAR INSERT_COLUMNLIST_EQ_VALUELIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1303 -----------------------

UPDATE with expresion in SET and column list (Informix syntax) No run-time checking.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE DDL_DATETIME DDL_INTERVAL ANSI_INSERT  UPDATE_COLUMNLIST_EQ_VALUELIST CURSOR_SELECT  FUNC_DATETIME FUNC_INTERVAL  DEFINE_CHAR DEFINE_SMALLINT DEFINE_DATE DEFINE_DATETIME DEFINE_INTERVAL DDL_VARCHAR INSERT_COLUMNLIST_EQ_VALUELIST FOREACH UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1304 -----------------------

Check if a simple select with GREATER or equal the in where condition fetch the correct values.

Test needs database
Is __NOT__ ANSI SQL 92 compatible
Uses SQL statemets features: DROP_TABLE CREATE_TABLE DDL_DATE ANSI_INSERT  CURSOR_SELECT ORDER_BY_NUMBER SQLCA_SQLCODE CLOSE_CURSOR FUNC_MDY  DEFINE_SMALLINT DEFINE_CHAR DEFINE_DATE INSERT_COLUMNLIST_EQ_VALUELIST ORDER_BY OPEN_CURSOR IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR  EXPR_USING ET_EXPR_USING
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1305 -----------------------

Null string date/datetime checking

Test needs database
Uses SQL statemets features: DDL_DATE DDL_DATETIME_Y2D CREATE_TEMP_TABLE ANSI_INSERT ANSI_SELECT  DEFINE_DATE DEFINE_DATETIME UI_DISPLAY_LINE_MODE DISPLAY
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1400 -----------------------

Substring checking


 ------------------- Info for test 1401 -----------------------

pretty much obelete test - ignore


 ------------------- Info for test 1402 -----------------------

CONSTRUCT BY NAME and MESSAGE

Test uses curses and/or screeen dump and may fail when TERM!=xterm
Anything that uses a screen dump may have specific attributes set which may
fail if TERM!=xterm
This core dumps on MinGW and messes up the terminal completely.
On Cygwin they don't core dump, but this tests fail
Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1403 -----------------------

This tests the resetting of arr_count between input array and display array calls


 ------------------- Info for test 1404 -----------------------

This checks the resetting of arr_count between input array and display array calls


 ------------------- Info for test 1405 -----------------------

This is a check for error recovery with SQL errors


 ------------------- Info for test 1406 -----------------------

Checks the usage of a blank string in an SQL statement , basically making sure it not treated as null

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_CHAR SELECT_INTO_TEMP_WITH_NO_LOG CREATE_TEMP_TABLE ANSI_INSERT PREPARE EXECUTE_USING EXECUTE SELECT_COUNT WHERE_NULL IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR 

 ------------------- Info for test 1407 -----------------------

INITIALIZE CLIPPED and NULL

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1408 -----------------------

DECLARE CURSOR and FOREACH ... INTO

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR UI_DISPLAY_LINE_MODE DISPLAY DROP_TABLE CREATE_TABLE ANSI_INSERT CURSOR_SELECT FOREACH SQLCA_SQLCODE IF EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
Test can be run using any 4GL compatible compiler, not just Aubit

 ------------------- Info for test 1409 -----------------------

Ensure menu options can only be selected when not hidden , MID 820


 ------------------- Info for test 1410 -----------------------

test wordwrap - MID 755

Test uses .per form files

 ------------------- Info for test 1411 -----------------------

When using substring in a column with alias, the table alias is removed and an ambigous column error may be thrown

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_INTEGER DEFINE_CHAR CREATE_TEMP_TABLE ANSI_INSERT CURSOR_SELECT FOREACH UI_DISPLAY_LINE_MODE DISPLAY 

 ------------------- Info for test 1412 -----------------------

Tests broken case statement


 ------------------- Info for test 1413 -----------------------

Example logical report layout testing

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_INTEGER IFX_SYSTABLES IFX_SYSCOLUMNS ORDER_BY_NUMBER ORDER_BY CURSOR_SELECT USE_REPORT FOREACH UI_DISPLAY_LINE_MODE DISPLAY REPORT_FIRST_PAGE_HEADER REPORT_PAGE_HEADER ON_EVERY_ROW REPORT_BEFORE_GROUP REPORT_AFTER_GROUP 

 ------------------- Info for test 1414 -----------------------

Select smallint into char

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_SMALLINT CREATE_TEMP_TABLE ANSI_INSERT UI_DISPLAY_LINE_MODE DISPLAY ANSI_DELETE 

 ------------------- Info for test 1415 -----------------------

BUGFIX:cant substr if @ in fieldname

Test needs database
Uses SQL statemets features: DATABASE_USED IFX_SYSTABLES 

 ------------------- Info for test 1416 -----------------------

Tests order by desc within a report

Test needs database
Uses SQL statemets features: DATABASE_USED USE_REPORT DEFINE_MONEY REPORT_ORDER_BY ON_EVERY_ROW 

 ------------------- Info for test 1417 -----------------------

Tests report order by

Test contains REPORT block
Test needs database
Uses SQL statemets features: DATABASE_USED USE_REPORT DEFINE_INTEGER REPORT_ORDER_BY ON_EVERY_ROW UI_DISPLAY_LINE_MODE DISPLAY 

 ------------------- Info for test 1418 -----------------------

Tests using datetimes in a report

Test contains REPORT block
Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_CHAR DEFINE_DATETIME DDL_DATETIME CREATE_TEMP_TABLE ANSI_INSERT USE_REPORT CURSOR_SELECT FOREACH REPORT_ORDER_BY ON_EVERY_ROW 

 ------------------- Info for test 1419 -----------------------

Tests running a report several times. temp tables not dropped

Test contains REPORT block
Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_INTEGER FOR USE_REPORT REPORT_ORDER_BY ON_EVERY_ROW 

 ------------------- Info for test 1420 -----------------------

report linenumber test

Test contains REPORT block
Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_INTEGER DEFINE_SMALLINT USE_REPORT FOR DEFINE_FLOAT REPORT_ORDER_BY REPORT_PAGE_HEADER REPORT_BEFORE_GROUP REPORT_AFTER_GROUP UI_DISPLAY_LINE_MODE DISPLAY IF 

 ------------------- Info for test 1421 -----------------------

Another report test

Test contains REPORT block
Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_INTEGER USE_REPORT FOR REPORT_ORDER_BY ON_EVERY_ROW 

 ------------------- Info for test 1422 -----------------------

Tests returning into a substring of a variable


 ------------------- Info for test 1423 -----------------------

wordwrap right margin not working. MID 828

Test contains REPORT block
Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_TEXT DDL_TEXT CREATE_TEMP_TABLE LOCATE_FILE ANSI_INSERT LOCATE_MEM USE_REPORT ON_EVERY_ROW
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1424 -----------------------

Tests setting an environment variable using the aclfgl_setenv function

Test is clasified as UNKNOWN - please corect this.


 ------------------- Info for test 1425 -----------------------

Channel library test


 ------------------- Info for test 1426 -----------------------

Channel test


 ------------------- Info for test 1427 -----------------------

Construct of date fields, use '..' as range operator

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1428 -----------------------

Declare insert cursor, large SQL staement. SQL buffer truncation

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_INTEGER USE_REPORT FOR REPORT_ORDER_BY ON_EVERY_ROW   DEFINE_CHAR CREATE_TEMP_TABLE INSERT_COLUMNLIST_EQ_VALUELIST ANSI_INSERT CURSOR_SELECT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1429 -----------------------

tests not using a field doesn't trim its length


 ------------------- Info for test 1430 -----------------------

Datetime convertion, hour/minute/second without leading zero

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1431 -----------------------

Integer null convertion, comparing against a null value.

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1432 -----------------------

Date arithmethic, datetime extend, financial terms

Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1433 -----------------------

Unload of s table UNIONed to itself

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_INTEGER USE_REPORT FOR REPORT_ORDER_BY ON_EVERY_ROW   CREATE_TEMP_TABLE ANSI_INSERT UNION_ALL SELECT_UNION UNLOAD_TO
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1434 -----------------------

Input array 4 data records in a 3 row screen record. nothing verified

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 1435 -----------------------

display a slice of an array, nothing is tested

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.
test is superceeded or obsoleted and should be silently skipped

 ------------------- Info for test 1436 -----------------------

Check sqlca.sqlerrd[3] equal number of affected rows, unload

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_INTEGER USE_REPORT FOR REPORT_ORDER_BY ON_EVERY_ROW   DEFINE_CHAR SELECT_COUNT IFX_SYSTABLES UNLOAD_TO SQLCA_SQLERRD3 IF UI_DISPLAY_LINE_MODE DISPLAY EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1437 -----------------------

printing null values in report

Test contains REPORT block

 ------------------- Info for test 1438 -----------------------

printing null substrings in report

Test contains REPORT block

 ------------------- Info for test 1439 -----------------------

0000898: no-printable ascii corrupt column position

Test contains REPORT block

 ------------------- Info for test 1440 -----------------------

MID 899: selecting two text fields, -> unread blob

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_SMALLINT DEFINE_INTEGER USE_REPORT FOR REPORT_ORDER_BY ON_EVERY_ROW   DEFINE_TEXT DDL_TEXT CREATE_TEMP_TABLE LOCATE_FILE ANSI_INSERT LOCATE_MEM UI_DISPLAY_LINE_MODE DISPLAY IF  UI_PROMPT
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1441 -----------------------

0000900: division by zero -> Floating point exception


 ------------------- Info for test 1442 -----------------------

880: display decimal field to smaller field in form, omit decimal part


 ------------------- Info for test 1443 -----------------------

918: include statement in form ignored


 ------------------- Info for test 1444 -----------------------

862: input 'without defaults' is clipping the program array fields


 ------------------- Info for test 1445 -----------------------

924: construct blanking


 ------------------- Info for test 1446 -----------------------

923: report length not breaking correctly


 ------------------- Info for test 1447 -----------------------

931: bad bad looping problem


 ------------------- Info for test 1448 -----------------------

929: comparison between (current hour to min) and string


 ------------------- Info for test 1449 -----------------------

930: using hour to minute in if statement


 ------------------- Info for test 1450 -----------------------

936: a report affected by the output section of the previous report


 ------------------- Info for test 1451 -----------------------

949: window name limitation


 ------------------- Info for test 1452 -----------------------

962: construct statement weirdness

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1453 -----------------------

MID 986: extend doesn't correctly


 ------------------- Info for test 1454 -----------------------

MID 986: extend doesn't correctly


 ------------------- Info for test 1455 -----------------------

Tests fields with PICTUREs with an explicit INSERT


 ------------------- Info for test 1456 -----------------------

0001034: insert/delete row in input array not returning to correct place


 ------------------- Info for test 1457 -----------------------

default values taken from form on insert new row

Test uses .per form files
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1458 -----------------------

check for sqlca.sqlcode set at end of cursor

Test needs database
Uses SQL statemets features: DATABASE_USED DEFINE_TEXT DEFINE_INTEGER DDL_TEXT CREATE_TEMP_TABLE LOCATE_FILE ANSI_INSERT LOCATE_MEM UI_DISPLAY_LINE_MODE DISPLAY UI_PROMPT IF   DEFINE_SMALLINT DEFINE_CHAR SELECT_INTO_TEMP_WITH_NO_LOG CURSOR_SELECT FOREACH SQLCA_SQLCODE EXIT_PROGRAM_EXPR
Tests is certified to run (with -eci) If it fails, something was probably broken
in current code.

 ------------------- Info for test 1459 -----------------------

Construct should preserve any upshift/downshift when moving to the extended field


 ------------------- Info for test 1460 -----------------------

tests an issue of saving field data in an input array with an onkey


><
><
Expecting 43, got 1
run_tests: ERROR: Loading descriptions from makefile in one go returned 1
run_tests: ERROR: fields instead of expected 43 for test 1461
run_tests: ERROR: Probably some characters not filtered by sed? STOP.
