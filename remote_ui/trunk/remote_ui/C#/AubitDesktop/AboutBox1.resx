<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhbABfAIcAAAENIgoZLw8iOw4lQhMmQBUpRCouARYsSBgsRRguSRsxTSM1TB82UiM7WD5GAyhB
        XSxGYjFLZ0xXBjZQbFFWH0ZSYTxZdVhkDEZcc0RgfF9hNllgakpmgVNme0tphWd2D1FshmZtT2lyNmRt
        dlZxi1t3kW5zd2V3iWF8lXV6e3mKJ2mDmnqAhmuHoIGDhXOHmoWORG+JoW6LpIOGiXSLoHGMo3CNpneM
        oYWJjXSOpXyOn3eQp4uMjXaSqouOkn6SpYeSjZCZU4+UcXqUq4KrIoeSm5KSkn6XroOWqIisKn6asY+W
        nIOcsZeXlpCZoY2vNoeftZGdpZycnIeiuI6gsZG1PKOpW4ukuZGjs5i9FZmiq5uknJCluY6nvKKiopam
        tpGou5Gpvpiot5u7TJSqvZ2ps5OswJervKenp5WtwZetv5iuwKOrs52uvJmwwqysrJqxxZuxw5+xwJyy
        xJuzx6ezp560xaeyuqC0xa67ep61x6WzwKC2yKG2xp+3y6O2xqO3yLOzs6K4yqe3xKK6zaa5yq23w6zV
        J6W6y7TAjai7y67JcK26xae8zbW9qKm9zae+0rq6urG9yKy/z7jOZq7B0bHE07jCzLnaT7LG1sPDw7vF
        0L7YYrbH1bzSi7bK2bnJ17rmO8PQn7vM2cPL0srKysTXl8fedL/P28bP18DR38PR3MDeotDQ0MfrW8TU
        38fU383dp8bX5MnX4dTU1NDY1s7Y4M3Z49LZ39jY2NHjs9Dvds/c5dra29Ld5t3d3dXg6Njg5tnwj9rn
        wNrh59ji6tfj7OHh4d3i59vk69rl7N/k6eHk6N3m7OTk5OHry9/zqt/o7uD4nuLp7+Dq8+bu0+np6eTr
        8efzxujs7+jy2Ofu8+3t7ejw9uzx9fHx8ezz+O7z9vH15uz54/D0+PT09PT19/P2+fb29vH4/Pb4+vj4
        +Pf5+/f6/Pr6+vn7/Pr8/fz8+/z9/vv+//7+/v//////////////////////////////////////////
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAAbABfAAAI/wD/CRxIsKDBgwgTKlzIsKHDhxAj
        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
</value>
  </data>
</root>