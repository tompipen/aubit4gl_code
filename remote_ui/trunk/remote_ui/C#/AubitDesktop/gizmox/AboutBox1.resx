<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhbABfAPcAAAENIgoZLw8iOw4lQhMmQBUpRCouARYsSBgsRRguSRsxTSM1TB82UiM7WD5GAyhB
        XSxGYjFLZ0xXBjZQbFFWH0ZSYTxZdVhkDEZcc0RgfF9hNllgakpmgVNme0tphWd2D1FshmZtT2lyNmRt
        dlZxi1t3kW5zd2V3iWF8lXV6e3mKJ2mDmnqAhmuHoIGDhXOHmoWORG+JoW6LpIOGiXSLoHGMo3CNpneM
        oYWJjXSOpXyOn3eQp4uMjXaSqouOkn6SpYeSjZCZU4+UcXqUq4KrIoeSm5KSkn6XroOWqIisKn6asY+W
        nIOcsZeXlpCZoY2vNoeftZGdpZycnIeiuI6gsZG1PKOpW4ukuZGjs5i9FZmiq5uknJCluY6nvKKiopam
        tpGou5Gpvpiot5u7TJSqvZ2ps5OswJervKenp5WtwZetv5iuwKOrs52uvJmwwqysrJqxxZuxw5+xwJyy
        xJuzx6ezp560xaeyuqC0xa67ep61x6WzwKC2yKG2xp+3y6O2xqO3yLOzs6K4yqe3xKK6zaa5yq23w6zV
        J6W6y7TAjai7y67JcK26xae8zbW9qKm9zae+0rq6urG9yKy/z7jOZq7B0bHE07jCzLnaT7LG1sPDw7vF
        0L7YYrbH1bzSi7bK2bnJ17rmO8PQn7vM2cPL0srKysTXl8fedL/P28bP18DR38PR3MDeotDQ0MfrW8TU
        38fU383dp8bX5MnX4dTU1NDY1s7Y4M3Z49LZ39jY2NHjs9Dvds/c5dra29Ld5t3d3dXg6Njg5tnwj9rn
        wNrh59ji6tfj7OHh4d3i59vk69rl7N/k6eHk6N3m7OTk5OHry9/zqt/o7uD4nuLp7+Dq8+bu0+np6eTr
        8efzxujs7+jy2Ofu8+3t7ejw9uzx9fHx8ezz+O7z9vH15uz54/D0+PT09PT19/P2+fb29vH4/Pb4+vj4
        +Pf5+/f6/Pr6+vn7/Pr8/fz8+/z9/vv+//7+/v//////////////////////////////////////////
        /yH5BAEAAP8ALAAAAABsAF8AAAj/AP8JHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDNq3Mixo8ePIEOK
        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
        9blwE0r/9fnjDDzREz2BE2vP9nTPEQEBADs=
</value>
  </data>
</root>