/*
=====================================================================
                        Source: construct.rule
=====================================================================
*/

construct_cmd	:	CONSTRUCT {
		add_feature("UI_CONSTRUCT");
		push_blockcommand("CONSTRUCT");
		 /*$<integer_val>$=get_sio_id("CONSTRUCT"); */
		map_ui_block("CONSTRUCT");
		A4GL_new_events();
		} 
		constr_rest end_constr {
			map_ui_endblock("CONSTRUCT");
			pop_blockcommand ("CONSTRUCT");
			A4GL_drop_events();
			$<cmd>$=$<cmd>3;
			$<cmd>$->cmd_data.command_data_u.construct_cmd.events=$<on_events>4;
		}
;


constr_rest:
BY_NAME ensured_variable_usage_expression KW_ON constr_col_list opt_defs opt_help_no_i input_attributes
{
	int a;
	/*
	fh_field_list *f;

        f = new_field_list ();
	for (a=0;a<$<cons_list>4->list.list_len;a++) {
		char *colname;
		colname=$<cons_list>4->list.list_val[a]->colname;
                append_field_to_list (f, new_field_entry (colname, NULL, 1));
	}
	*/
	$<cmd>$=new_construct_cmd(EB_TRUE, $<ptr>2, $<cons_list>4, NULL, NULL, $<attrib>7, $<e_boolean>5, $<integer_val>6, get_sio_id("CONSTRUCT")); 
	reset_constr();
}
| ensured_variable_usage_expression KW_ON constr_col_list opt_defs FROM field_name_list_as_struct opt_help_no_i input_attributes
{
	reset_constr();
	$<cmd>$=new_construct_cmd(EB_FALSE, $<ptr>1, $<cons_list>3, $<field_list>6, NULL, $<attrib>8, $<e_boolean>4, $<integer_val>7, get_sio_id("CONSTRUCT")); 
}
;

end_constr :  {$<on_events>$=0;}
| constr_extra_commands END_CONSTRUCT  { $<on_events>$=$<on_events>1;}
;

constr_col_list : constr_col  {
		$<cons_list>$=append_constr_col_list(0,$<cons_list_entry>1);

	}
	| constr_col_list KW_COMMA constr_col {
		$<cons_list>$=append_constr_col_list($<cons_list>1,$<cons_list_entry>3);
	}
;

constr_col : identifier {
			$<cons_list_entry>$=malloc(sizeof(cons_list_entry));
			$<cons_list_entry>$->tabname=strdup("");
			$<cons_list_entry>$->colname=strdup($<str>1);
        }
	| identifier KW_DOT identifier {
			$<cons_list_entry>$=malloc(sizeof(cons_list_entry));
			$<cons_list_entry>$->tabname=strdup($<str>1);
			$<cons_list_entry>$->colname=strdup($<str>3);
        }
	| identifier KW_DOT KW_MULTIPLY {
			$<cons_list_entry>$=malloc(sizeof(cons_list_entry));
			$<cons_list_entry>$->tabname=strdup($<str>1);
			$<cons_list_entry>$->colname=strdup("*");
        }
;


constr_extra_commands : 
		events_construct
;







/* ========================== construct.rule ====================== */

