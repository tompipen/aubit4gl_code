run_cmd : KW_RUN fgl_expr_c  				{ 
			$<cmd>$=new_run_cmd(chk_expr($<ptr>2),EB_TRUE, ERM_NOT_SET, NULL);
			map_run($<ptr>2); 
			add_feature("RUN");} 
	| KW_RUN fgl_expr_c run_mode 			{ 
			map_run($<ptr>2); 
			$<cmd>$=new_run_cmd(chk_expr($<ptr>2),EB_TRUE, $<integer_val>3, NULL);
			
			add_feature("RUN");} 
	| KW_RUN fgl_expr_c RETURNING ensured_variable_usage_expression 		{ 
			//struct binding_comp_list *x;
			//x=add_genbind(NULL,$<str>4,"o");
			map_run($<ptr>2); 
			$<cmd>$=new_run_cmd(chk_expr($<ptr>2),EB_TRUE, ERM_NOT_SET, $<ptr>4);
			
			add_feature("RUN");} 
	| KW_RUN fgl_expr_c WITHOUT_WAITING 		{ 
			map_run($<ptr>2); 
			$<cmd>$=new_run_cmd(chk_expr($<ptr>2),EB_FALSE, ERM_NOT_SET, NULL);
			
			add_feature("RUN");}
	| KW_RUN fgl_expr_c run_mode RETURNING ensured_variable_usage_expression { 
			/* struct binding_comp_list *x; x=add_genbind(NULL,$<str>5,"o"); */
			map_run($<ptr>2); 
			$<cmd>$=new_run_cmd(chk_expr($<ptr>2),EB_TRUE, $<integer_val>3, $<ptr>5);
			
			add_feature("RUN");} 
	| KW_RUN fgl_expr_c run_mode WITHOUT_WAITING 	{ 
			map_run($<ptr>2); 
			$<cmd>$=new_run_cmd(chk_expr($<ptr>2),EB_FALSE, $<integer_val>3, NULL);
			
			add_feature("RUN");
	}
	| KW_RUN fgl_expr_c WAIT 			{ 
			map_run($<ptr>2); 
			$<cmd>$=new_run_cmd(chk_expr($<ptr>2),EB_FALSE,ERM_NOT_SET, NULL);
			
			add_feature("RUN");
	}
	| KW_RUN fgl_expr_c EXIT 			{ 
			map_run($<ptr>2); 
			$<cmd>$=new_run_cmd(chk_expr($<ptr>2),EB_FALSE,ERM_NOT_SET, NULL);
			add_feature("RUN");
	}
	| KW_RUN fgl_expr_c WAITING KW_FOR fgl_expr_c op_by WITH run_saying fgl_expr_c {
			map_run($<ptr>2); 
			$<cmd>$=new_run_waiting_for_cmd(chk_expr($<ptr>2), $<ptr>5, $<ptr>6, $<integer_val>8,$<ptr>9);
			add_feature("RUN");
	}
	| KW_RUN_CLIENT fgl_expr_c {
			struct expr_str_list *plist;
			plist=A4GL_new_ptr_list($<ptr>2);
			$<ptr>$=A4GL_new_expr_fcall("aclfgl_client_execute",plist,infilename,lastlineno,get_namespace("aclfgl_client_execute"));
			 $<cmd>$=new_call_cmd(chk_expr($<ptr>$),NULL);
	}
;

op_by: 
	{$<ptr>$=NULL;}
	| KW_BY fgl_expr_c {$<ptr>$=$<ptr>2;}
;

run_saying: 
	KWMESSAGE {$<integer_val>$=0;}
	| KW_ERROR {$<integer_val>$=1;}
;


run_mode : 
	 IN_FORM_MODE {
			$<integer_val>$=ERM_FORM_MODE;
	}
	| IN_LINE_MODE {
			$<integer_val>$=ERM_LINE_MODE;
	}
;
	
