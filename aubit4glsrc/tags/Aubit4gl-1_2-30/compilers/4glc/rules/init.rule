/*
=====================================================================
                        Source: init.rule
=====================================================================
*/


init_cmd : INITIALIZE init_bind_var_list KW_TO null_or_not_null  {
		$<cmd>$= new_init_cmd($<ptr_list>2, NULL,$<integer_val>4);
		add_feature("INITIALIZE_NULL");
 }
| INITIALIZE init_bind_var_list LIKE init_tab_list  {
	add_feature("INITIALIZE_LIKE");
		$<cmd>$= new_init_cmd($<ptr_list>2, $<str_list>4,0);
}
;


null_or_not_null: 
	KW_NULL {$<integer_val>$=1;}
	| NOT_NULL {$<integer_val>$=0;}
;



init_tab_list : init_tab  {
			$<str_list>$=malloc(sizeof(struct str_list));
                        $<str_list>$->str_list_entry.str_list_entry_len=0;
                        $<str_list>$->str_list_entry.str_list_entry_val=0;
			add_to_str_list_set_record($<str_list>$, &$<s_full_col>1);
	}
	| init_tab_list KW_COMMA init_tab {
			$<str_list>$=$<str_list>1;
			add_to_str_list_set_record($<str_list>$, &$<s_full_col>3);
	}
	;

init_tab : init_table_name KW_DOT column_name {
			$<s_full_col>$.tab=strdup($<str>1);
			$<s_full_col>$.col=strdup($<str>3);
		}
	 | init_table_name KW_DOT KW_MULTIPLY {
			$<s_full_col>$.tab=strdup($<str>1);
			$<s_full_col>$.col=0;
		}
	;


init_table_name: table_name {strcpy($<str>$,$<str>1);}
;

/* =============================== init.rule ======================== */
