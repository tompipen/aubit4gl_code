

validate_cmd : 
VALIDATE expanded_ibind_var_list LIKE {
	add_feature("VALIDATE_LIKE");
	clr_validate_list();
} validate_tab_list  {
	$<cmd>$=new_validate_cmd($<ptr_list>2,$<str_list>5);
}
;


validate_tab_list : validate_tab  {
                     $<str_list>$=malloc(sizeof(struct str_list));
                       $<str_list>$->str_list_entry.str_list_entry_len=1;
                       $<str_list>$->str_list_entry.str_list_entry_val=malloc(sizeof(char *)* $<str_list>$->str_list_entry.str_list_entry_len);
                      $<str_list>$->str_list_entry.str_list_entry_val[0]=strdup($<str>1);

}
        | validate_tab_list KW_COMMA validate_tab {
                   $<str_list>$=$<str_list>1;
                   $<str_list>$->str_list_entry.str_list_entry_len=$<str_list>1->str_list_entry.str_list_entry_len+1;
                   $<str_list>$->str_list_entry.str_list_entry_val=realloc($<str_list>1->str_list_entry.str_list_entry_val, sizeof($<str_list>$->str_list_entry.str_list_entry_val[0]) * $<str_list>$->str_list_entry.str_list_entry_len);
                   $<str_list>$->str_list_entry.str_list_entry_val[$<str_list>$->str_list_entry.str_list_entry_len-1]=strdup($<str>3);
}
;



validate_tab : table_name KW_DOT column_name {
		SPRINTF2($<str>$,"%s.%s",$<str>1,$<str>3);
		push_validate($<str>$);
	}
	| table_name KW_DOT KW_MULTIPLY {
		SPRINTF1($<str>$,"%s.*",$<str>1);
		push_validate($<str>$);
	}
;


/* =============================== validate.rule ======================== */
