 FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS
 FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS
 FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS
 FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS FIX WARNINGS



4GL
	implement extend() 4GL function
	implement datetime() & interval() 4GL functions
	'thru' on display etc ************** DONE
	initialize array/record containing array
	Allow auto initialize of function variables (As per pcode) ** DONE (And module level too - globals still outstanding)
	Add globals header file into variable declaration
	Create function names export
	Clean up error handling
	Replace sqlca & status with acl_sqlca and acl_status -  use as sqlca&status in 4GL code
		(This will allow other DBs to still have their own sqlca - which may be different).


Enhancements
	SQL grammar extension - 4Js compatible
    =====================
	With SQL blocks, the SQL syntax of INFORMIX 7.3 is supported in the 4GL
	language (Until now, the syntax was limited to INFORMIX SQL 4.1). Except
	for some special SQL statements, any new and future SQL command can be
	used from a 4GL program.

	SQL / END SQL blocks

	Syntax:
	SQL
	  <stmt>
	END SQL

	Warning: <stmt> must be a preparable statement.

	Example:

	SQL
	       CREATE TABLE mytab (
	              emp_no      INTEGER,
	              emp_name    CHAR(20),
	              emp_salary  DECIMAL(16,4)
	       )
	END SQL

	Host variables

	SQL blocks can include host variables to be passed to the backend, the 
	dollar character must prefix 4GL variables:

	Example:


	DEFINE emp ARRAY[10] OF
	       RECORD
	           no          INTEGER,
	           name        CHAR(20),
	           salary      DECIMAL(16,4)
	       END RECORD

	  {... fill the emp[*].* record array ...}

	   FOR i = 1 TO 10
	       SQL
	          INSERT INTO mytab  VALUES (
	                 $emp[i].no,
	                 $emp[i].name,
	                 $emp[i].salary
	          )
	       END SQL
	   END FOR

	Result variables

	An INTO list can be used inside SQL blocks to receive the data from a 
	SELECT statement. As host variables, the dollar character must prefix target variables:

	Example:


	SQL
	    SELECT emp_name,
	           emp_salary
	      INTO
	           $emp.name,
	           $emp.salary
	     FROM employee
	      WHERE emp.no = $emp.no
	END SQL

	Using the THRU keyword

	The THRU keyword is supported:

	Example:


	SQL
	    INSERT INTO cust (key,name,address,phone)
	      VALUES ( $r_cust.key THRU $r_cust.phone )
	END SQL


	The STAR

	The usage of a star character as record field list indicator is also supported:

	Example:


	SQL
	    UPDATE cust SET * = $r_cust.*
	      WHERE cust.no = $custno
	END SQL


	EXECUTE IMMEDIATE
    ===================================

	A new 4GL instruction is supported to execute SQL statements directly:

	Syntax:
	EXECUTE IMMEDIATE {<string>|<char variable>}

	Example:

	MAIN
	   DEFINE stmt CHAR(200)

	   EXECUTE IMMEDIATE “UPDATE tab SET col=col *10”

	   LET stmt = “INSERT INTO tab VALUES (12,’ccc’)”
	   EXECUTE IMMEDIATE stmt

	END MAIN

	1.1.EXECUTE stmt with INTO clause

	The EXECUTE instruction supports now the INTO clause:

	Syntax:
	EXECUTE stmt [USING var-list] [INTO var-list]

	Example:

	MAIN
	   DEFINE n,c INTEGER
	   PREPARE s1 FROM
	     ‘SELECT COUNT(*) FROM customer WHERE col>?’
	   LET n = 20
	   EXECUTE s1 USING n INTO c
	END MAIN


	The concatenation operator
    ============================

	The standard SQL string concatenation operator ‘||’ is now supported in the 4GL language.

	Syntax:

	       <string-expr> || <string-expr>


	This is a real operator which can be used in any place where 4GL accepts character string expressions:

	Examples:

	 LET fullname = firstname || ‘ ‘ || lastname

	 CALL open_file( filename || ‘.txt’ )


	The comma is still supported



ESQL/C
	Fix OPEN USING in esql/c (in sql) 
	Fix OPEN USING in esql/c (in lex) *** DONE IN LEX
	Fix FETCH (relative/absolute etc)
	Fix Declare INTO in esql/c LEX
	Other fixes in ESQL/C output driver
	


FIXME's
	Fix 'em
    TODO's - Do them (See DoxyGen @todo tags at http://www.falout.com/projects/Aubit4GL/doxy/html/pages.html )


GTK
	Make it work - start with tools/test/gui code


UI
	Implement proper message stack (current way doesn't work properly)

Other unimplemented functions
	put_insert
	Pause in reports
	INPUT ARRAY


SQL Parser
	IN (variable,variable)
	add extend() SQL function into parser *********** DONE
	Separate SQL parser into different YACC file (to allow for multiple SQL dialects)
	Bind substrings (also used in displays/inputs) ******** PARTIAL (Generates but not coded in library)

SQL plugins
	unixODBC bug (see bug db on SF)
    Finish native PostgreSQL plugin (Sergio), create SAP DB native
    show error when SQLUID/SQLPWD is not set on DEFINE ... LIKE
    Handle DSN-less connections (should be able to connect using CONNECT stmt, even without explicit DSN in odbc.ini)
    Befor using SQLUID and SQLPWD, odbc.ini should be examined for default username/password

ACE
	ace now uses xgen - enable Windows make files

XML-RPC
    create server part

TUI
	implement Field attribute hierarchy
	implement Field expression parsing
	implement attribute 'lines' hierarchy
	General cleanups..
	clean up construct...
    Windows TUI uses strange characters
    DISPLAY without AT erises the screen completely - sends to stdout 
		- should display _OVER_ existing display/screen
		(** THIS IS CURSES FAULT **NOT** Aubit...)

PERL
	fix "make perl"

CVS
    start branch tagging in CVS

Buils system & make files
    Create commit and update targets to handle CVS commits and updates
    in Commit: 
		handle update of no_yacc, no_perl...etc files before commit
        handle build number
    in Update: 
		handle "configure" file to prevent meaningless merginig


MANUALS
    need complete update
    archtecture diagram needs update for libPACKER, LEX_EC, SQL_PG...

WEBSITE
	Replace current static pages with PostNuke

PACKAGING
    create .deb (use Alien?)

MISC
    fix all compiler warnings
	add "#ifdef DEBUG" arround _ALL_ debug() calls
    complete DoxyGen function & variable comments
    enter lclint descriptions to enable full lclint checking
    fix Splint (lclint) warnings and extend to all libraries
    check that "make extra" works
    check code in tools/test/regression
    Review & clean bugs in bugs database on SourceForge

Ad-Hoc Bug Fixes

