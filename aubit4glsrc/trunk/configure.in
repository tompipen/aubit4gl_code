dnl # +----------------------------------------------------------------------+
dnl # | Aubit 4gl Language Compiler Version $.0                              |
dnl # +----------------------------------------------------------------------+
dnl # | Copyright (c) 2000-1 Aubit Development Team (See Credits file)       |
dnl # +----------------------------------------------------------------------+
dnl # | This program is free software; you can redistribute it and/or modify |
dnl # | it under the terms of one of the following licenses:                 |
dnl # |                                                                      |
dnl # |  A) the GNU General Public License as published by the Free Software |
dnl # |     Foundation; either version 2 of the License, or (at your option) |
dnl # |     any later version.                                               |
dnl # |                                                                      |
dnl # |  B) the Aubit License as published by the Aubit Development Team and |
dnl # |     included in the distribution in the file: LICENSE                |
dnl # |                                                                      |
dnl # | This program is distributed in the hope that it will be useful,      |
dnl # | but WITHOUT ANY WARRANTY; without even the implied warranty of       |
dnl # | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        |
dnl # | GNU General Public License for more details.                         |
dnl # |                                                                      |
dnl # | You should have received a copy of both licenses referred to here.   |
dnl # | If you did not, or have any questions about Aubit licensing, please  |
dnl # | contact afalout@ihug.co.nz                                           |
dnl # +----------------------------------------------------------------------+
dnl #
dnl # $Id: configure.in,v 1.162 2003-02-27 22:12:26 afalout Exp $
dnl #
dnl #TODO: check that WARN_LD_LIBRARY_PATH is set ONLY if user specified custom withval
dnl #and then check that it is no already in LD_LIBRARY_PATH or ldconfig file. Only
dnl #then issue a warning.
dnl #
dnl #
dnl #Process this file with autoconf to produce a configure script.
dnl #This script is used to configure BOTH source code and binary distributions

## ==================================================================
##                             Initialise
## ==================================================================

#Workaround for Informix created libphtread mess:
export LD_LIBRARY_PATH=/lib:$LD_LIBRARY_PATH

#We need autoconf at least version 2.50
AC_PREREQ(2.50)

#Need to be here too, to be used in AC_INIT call:
if test -f "tools/project/version" ; then
	AUBIT_VERSION=`cat tools/project/version`
	AUBIT_BUILD=`cat tools/project/build`
fi

#FIXME: Some versions of autoconf are complaining that $AUBIT_VERSION and $AUBIT_BUILD are not
#constants. Maybe we should drop stuff in tools/project alltogether, use Autoconf instead?
dnl source directory sanity check using an arbitrary source file
AC_INIT([Aubit4gl],[$AUBIT_VERSION.$AUBIT_BUILD],[aubit4gl-discuss@lists.sourceforge.net])

#needed to initialize AutoMake functionallity, that will create Makefile.in
#files from Makefile.am:
#AM_INIT_AUTOMAKE
AM_INIT_AUTOMAKE(Aubit4gl, $AUBIT_VERSION.$AUBIT_BUILD)

aubitdir=`pwd`
a4gl_shtool=$aubitdir/tools/project/shtool
T_MD=`$a4gl_shtool echo -n -e %B`
T_ME=`$a4gl_shtool echo -n -e %b`


#examlpe - USE iT
AC_ARG_WITH(pdflibname,[  --with-pdflibname=name  set file name of generated library [default=pdf]],[PDFLIBNAME="$withval"])

AC_ARG_ENABLE(debug, [  --enable-debug          turn on debugging],
if test "$enableval" = "yes" ; then
    WITH_DEBUG=yes
fi)



CONFIGURE_COMMAND="$ac_configure_args"

#location of additional Autoconf files
AC_CONFIG_AUX_DIR(etc/config)


#Purpose of 'aubitconf' script is to hold all the command line switches
#to 'configure' on your system, and is local to your system. If found in
#path, it will be invoked instead of just plain 'configure'
#aubitconf script will typically have only one line, for example:
#./configure --with-aubitconf --with-informix --with-jabber -with-iodbc=/blah/huh/iodbc ...etc
if test "$AUBITCONF_FLAG" != "running"; then

PHP_CONFIGURE_PART(Looking for configure parameters file:)

AC_PATH_PROG(AUBITCONF, aubitconf, no)
if test "$AUBITCONF" != "no"; then
		if test "$with_aubitconf" != "yes" ; then
			PHP_CONFIGURE_PART(Redirecting to 'aubitconf':)
if test "$CONFIGURE_COMMAND" != ""; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| You provided command line options to 'configure'. They will        |
| be ingored, and ones provided in 'aubitconf' used instead. Use     |
| --with-aubitconf=no to disable this behaviour.                     |
+--------------------------------------------------------------------+
X
fi
			#so we don't enter the loop:
			export AUBITCONF_FLAG=running
			aubitconf
			err_code=$?
			#prevent errors when exiting first instance, that did not egt chance
	        #to create this files, but expects them:
			touch conftest.log
			touch confdefs.h
			#echo "About to exit first invocation of configure ($err_code)..."
			exit $err_code
	        echo "Oooops! You should not see this!"
        else
            echo "'aubitconf' found, but disabled"
        fi
fi

	else
PHP_CONFIGURE_PART(Invoked from 'aubitconf'-use 'make settings' to see flags:)
fi

#This script will be used for configuring binary distributions
#when --with-bin switch is on command line
if test "$with_bin" = "yes" ; then
	AUBIT_SOURCE=0
else
	#when --with-src was on command line
	if test "$with_src" = "yes" ; then
		AUBIT_SOURCE=1
	else
		#no switch, detect if we are in source code tree
		if test -f "tools/project/version"; then
			AUBIT_SOURCE=1
	    else
			AUBIT_SOURCE=0
	    fi
    fi
fi

if test "$AUBIT_SOURCE" = "1" ; then
	PHP_CONFIGURE_PART(Configuring Aubit compiler source code:)
else
	PHP_CONFIGURE_PART(Configuring Aubit compiler binary distribution:)
fi

#FIXME: what is this?
#This directive is expanded in initialisation part, and putting it in
#"if" have no effect:
#AC_CONFIG_SRCDIR([compilers/4glc/4glc.c])
#so we need to specify file which is in both source code and
#binary distributions:
AC_CONFIG_SRCDIR([bin/4glpc])

if test "$AUBIT_SOURCE" = "1" ; then
	#Location of global header to receive "#define xxxxx y" replacements:
	#AC_CONFIG_HEADER([incl/a4gl_incl_config.h])
	#When file name contains path and therefore / , we get strange errors
    #from automake if path is specified as ([path/file.ext]). Autoconf
    #seems to work fine with this.
	AM_CONFIG_HEADER(incl/a4gl_incl_config.h)
fi

#configure.in:151: warning: AC_ARG_PROGRAM was called before AC_CANONICAL_TARGET
#AC_  CANONICAL_  TARGET
AC_CANONICAL_SYSTEM

#prevent libtool from trying to build static libraries
AC_DISABLE_STATIC

#Note: The libltdl library included with all libtool versions will only work on
#Darwin when dlcompat is installed.

#AC_LIBLTDL_INSTALLABLE
AC_LIBLTDL_CONVENIENCE
AC_LIBTOOL_WIN32_DLL
AC_LIBTOOL_DLOPEN
AC_PROG_LIBTOOL
AM_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

## ==================================================================
##                Define what will get substituted
## ==================================================================

#Identification
AC_SUBST(aubitdir)
AC_SUBST(COMPILE_DATE)
AC_SUBST(AUBIT_VERSION)
AC_SUBST(AUBIT_BUILD)
AC_SUBST(AUBIT_WEBSITE)
AC_SUBST(AUBIT_PUBLISHER)
AC_SUBST(FULLNAME)
AC_SUBST(SHORTNAME)


#defaults for aubitrc:
AC_SUBST(A4GL_SQLTYPE)
AC_SUBST(A4GL_PDFTYPE)
AC_SUBST(A4GL_RPCTYPE)
AC_SUBST(A4GL_UI)
AC_SUBST(A4GL_LEXTYPE)
AC_SUBST(A4GL_FORMTYPE)
AC_SUBST(A4GL_MENUTYPE)
AC_SUBST(A4GL_MSGTYPE)
AC_SUBST(A4GL_PACKER)

#SQL
AC_SUBST(ODBC_LIB_NAME)

#Informix ESQL/C
AC_SUBST(IFMX_ESQLC)
AC_SUBST(IFX_ESQL_FLAGS)
AC_SUBST(IFX_LIBS)
AC_SUBST(IFX_LFLAGS)
AC_SUBST(IFX_INCLUDE)
AC_SUBST(IFX_C_MAKE)
AC_SUBST(INFORMIXDIR)

#Informix ODBC
AC_SUBST(HAVE_IFXODBC)

#SAP DB ESQL/C
AC_SUBST(SAPDB_ESQLC)
AC_SUBST(SAPDBROOT)
AC_SUBST(SAPDB_LFLAGS)
AC_SUBST(SAPDB_INCLUDE)
AC_SUBST(SAPDB_INCDIR)
AC_SUBST(SAPDB_LIBDIR)

#SAP DB ODBC
AC_SUBST(HAVE_SAPODBC)
AC_SUBST(SAPODBC_INCLUDE)
AC_SUBST(SAPODBC_LFLAGS)

#PG ODBC
AC_SUBST(HAVE_PGODBC)
AC_SUBST(PGODBC_INCLUDE)
AC_SUBST(PGODBC_LFLAGS)

#PG ESQL
AC_SUBST(PGSQL_INCLUDE)
AC_SUBST(PGSQL_LFLAGS)
AC_SUBST(PGSQL_LIBS)


#UnixODBC
AC_SUBST(HAVE_UNIXODBC)
AC_SUBST(UNIXODBC_INCLUDE)
AC_SUBST(UNIXODBC_LFLAGS)
AC_SUBST(UNIXODBC_LIBS)

#Iodbc
AC_SUBST(HAVE_IODBC)
AC_SUBST(IODBC_INCLUDE)
AC_SUBST(IODBC_LFLAGS)
AC_SUBST(IODBC_LIBS)

#GTK+
AC_SUBST(GTKBUILD)
AC_SUBST(GTK_LIB_PATH)
AC_SUBST(GTK_INC_PATH)
AC_SUBST(GTKLIBS)
AC_SUBST(GTK_NAME)
AC_SUBST(GDK_NAME)
AC_SUBST(GLIB_NAME)
AC_SUBST(GLIB_CFLAGS)


#Sun RPC/XDR
AC_SUBST(RPCGEN)
AC_SUBST(RPCLIB_INCLUDE)
AC_SUBST(RPCLIB_LFLAGS)
AC_SUBST(RPCLIB_NAME)
AC_SUBST(USE_RPCGEN)
AC_SUBST(HAVE_RPCLIB)

#XML RPC
AC_SUBST(XML_RPC)
AC_SUBST(XMLRPC_C_CONFIG)

#PDF
AC_SUBST(USE_PDF)
AC_SUBST(PDFBUILD)
AC_SUBST(PDFLIB_I_FLAGS)
AC_SUBST(PDFLIB_L_FLAGS)

#DoxyGen
AC_SUBST(DOXYGEN)
AC_SUBST(HAVE_DOT)
AC_SUBST(DOT_PATH)
AC_SUBST(DOXY_BIN_ABSPATH)

#http server
AC_SUBST(CGI_DIR)
AC_SUBST(APACHECTL)
AC_SUBST(HTTPD)
AC_SUBST(APACHE_CONF)
AC_SUBST(WWW_HOST_NAME)
AC_SUBST(WWW_DOCUMENT_ROOT)

#RPM
AC_SUBST(RPM)
AC_SUBST(AUTOSPEC)

#Jabber/Iksemel lib
AC_SUBST(JABBERBUILD)
AC_SUBST(IKSEMEL_L_FLAGS)
AC_SUBST(IKSEMEL_I_FLAGS)

#exdatatype
AC_SUBST(EXDATA_MPZ)
AC_SUBST(EXDTYPE)

#other
AC_SUBST(INSTALL_MISSING_OPTIONAL)
AC_SUBST(PERL)
AC_SUBST(PERLBUILD)
AC_SUBST(LDCONFIG)
AC_SUBST(target)
AC_SUBST(target_cpu)
AC_SUBST(ADD_LD_LIBRARY_PATH)
AC_SUBST(PIC)
AC_SUBST(LDFLAGS)
AC_SUBST(LDFLAGS_SHARED)
#AC_SUBST(YACC)
AC_SUBST(BISON)
AC_SUBST(LEX)
AC_SUBST(LCLINTEXE)
AC_SUBST(SO_EXT)
AC_SUBST(SO_EXT_LINKABLE)
AC_SUBST(GETOPT_LONG)
AC_SUBST(ARCHEXT)
AC_SUBST(CONFIGURE_COMMAND)
AC_SUBST(GCC_VERSION_MAJOR)
AC_SUBST(GCC_VERSION_MINOR)
AC_SUBST(GCC_MINGW)
AC_SUBST(HAS_CHECK)
AC_SUBST(WGET)
AC_SUBST(REDHAT_VER)
AC_SUBST(REDHAT_NAME)
AC_SUBST(STRIP_EXECUTABLES)
AC_SUBST(STRIP)
AC_SUBST(WINDOWS_DRIVE)
AC_SUBST(CYGWIN_PATH)



#Inno Setup:
AC_SUBST(IS_SOURCE)
AC_SUBST(IS_SOURCE_GTK)

#curses:
AC_SUBST(CURSES_LIB_PATH)
AC_SUBST(CURSES_INC_PATH)
AC_SUBST(HAVE_CURSES)
AC_SUBST(CURSES_LIB_NAME)
AC_SUBST(HAVE_PDCURSES)

#debug
AC_SUBST(DEBUG_BISON)
AC_SUBST(YYDEBUG)
AC_SUBST(INCLINES)



#files to be packaged into RPM, that are built optionaly because of external
#dependencied. Also used for install/deinstall, and to tell make which files to
#build:
AC_SUBST(RPMFILE_1)
AC_SUBST(RPMFILE_2)
AC_SUBST(RPMFILE_3)
AC_SUBST(RPMFILE_4)
AC_SUBST(RPMFILE_5)
AC_SUBST(RPMFILE_6)
AC_SUBST(RPMFILE_7)
AC_SUBST(RPMFILE_8)
AC_SUBST(RPMFILE_9)
AC_SUBST(RPMFILE_10)
AC_SUBST(RPMFILE_11)
AC_SUBST(RPMFILE_12)
AC_SUBST(RPMFILE_13)
AC_SUBST(RPMFILE_14)
AC_SUBST(RPMFILE_15)
AC_SUBST(RPMFILE_16)
AC_SUBST(RPMFILE_17)
AC_SUBST(RPMFILE_18)
AC_SUBST(RPMFILE_19)
AC_SUBST(RPMFILE_20)
AC_SUBST(RPMFILE_21)
AC_SUBST(RPMFILE_22)
AC_SUBST(RPMFILE_23)
AC_SUBST(RPMFILE_24)
AC_SUBST(RPMFILE_25)
AC_SUBST(RPMFILE_26)
AC_SUBST(RPMFILE_27)
AC_SUBST(RPMFILE_28)
AC_SUBST(RPMFILE_29)
AC_SUBST(RPMFILE_30)


#List of libraries that we allways make. Here so we don't have to maintain it
#separately for RPM config file, install/deinstall and lib Makefile:
AC_SUBST(LIBFILE_1)
AC_SUBST(LIBFILE_2)
AC_SUBST(LIBFILE_3)
AC_SUBST(LIBFILE_4)
AC_SUBST(LIBFILE_5)
AC_SUBST(LIBFILE_6)
AC_SUBST(LIBFILE_7)
AC_SUBST(LIBFILE_8)
AC_SUBST(LIBFILE_9)
AC_SUBST(LIBFILE_10)
AC_SUBST(LIBFILE_11)
AC_SUBST(LIBFILE_12)
AC_SUBST(LIBFILE_13)
AC_SUBST(LIBFILE_14)
AC_SUBST(LIBFILE_15)
AC_SUBST(LIBFILE_16)
AC_SUBST(LIBFILE_17)
AC_SUBST(LIBFILE_18)
AC_SUBST(LIBFILE_19)
AC_SUBST(LIBFILE_20)
AC_SUBST(LIBFILE_21)
AC_SUBST(LIBFILE_22)
AC_SUBST(LIBFILE_23)
AC_SUBST(LIBFILE_24)
AC_SUBST(LIBFILE_25)
AC_SUBST(LIBFILE_26)
AC_SUBST(LIBFILE_27)
AC_SUBST(LIBFILE_28)
AC_SUBST(LIBFILE_29)
AC_SUBST(LIBFILE_30)



## ==================================================================
##                             Defaults
## ==================================================================

if test "$AUBIT_SOURCE" = "1" ; then
	#need to do this again, since the earlyer one was before initialisation,
	#and will not get in substitution otherwise:
	AUBIT_VERSION=`cat tools/project/version`
	AUBIT_BUILD=`cat tools/project/build`
fi

FULLNAME="Aubit 4GL compiler"
SHORTNAME="aubit4gl"
AUBIT_WEBSITE=aubit4gl.sf.net
AUBIT_PUBLISHER="Aubit project development team"
COMPILE_DATE=`date +%d-%m-%Y`
test_rpclib="1"
GTKBUILD=no
HAVE_IODBC=no
HAVE_UNIXODBC=no
HAVE_IFXODBC=no
HAVE_PGODBC=no
PIC="-fPIC"
ODBC_LIB_NAME=noodbc
USE_PDF=no
PDFBUILD=no
PERLBUILD=no
JABBERBUILD=no
AUBIT_DEBUG=1
IFMX_ESQLC=no
LCLINTEXE=no
STRIP_EXECUTABLES=no
cygwin=0

#FIXME: do not hard-code
WINDOWS_DRIVE=D:
CYGWIN_PATH=/cygwin

AC_EXEEXT
AC_OBJEXT

SO_EXT=.so
SO_EXT_LINKABLE=$SO_EXT
#ARCHEXT=tar.gz
ARCHEXT=tgz
XMLRPC_C_CONFIG=no

#defaults for aubitrc:
A4GL_SQLTYPE=nosql
A4GL_PDFTYPE=NOPDF
A4GL_RPCTYPE=NORPC
A4GL_UI=CONSOLE
A4GL_LEXTYPE=C
A4GL_FORMTYPE=NOFORM
A4GL_MENUTYPE=NOMENU
A4GL_MSGTYPE=NATIVE

#case "$target_os" in
case $host in
	*linux*)
        #rpclib is part of clib on Linux
		test_rpclib="0"

		if test -f /etc/redhat-release ; then
			AC_MSG_CHECKING(RedHat version)
			REDHAT_NAME=`cat /etc/redhat-release`
			REDHAT_VER=`echo $REDHAT_NAME | awk '{print $5}'`
			AC_MSG_RESULT($REDHAT_NAME ($REDHAT_VER))
		fi

		;;

    #  *-*-cygwin*/gcc*-mno-cygwin*|*-*-mingw*)
	*-*-cygwin | *-*-cygwin* | *-*-pw32*)
		ODBC=odbc32;
    	ODBCMANAGER=$ODBC;
		cygwin=1
        SO_EXT=.dll
        SO_EXT_LINKABLE=$SO_EXT
		ARCHEXT=zip
		;;

	#*-sun-solaris2.7 (Jonathan) and 2.8 (Andrej on SF CF)
	*-sun-solaris*)
		PIC="-fPIC"
		;;

	#powerpc-apple-darwin5.5 (Andrej on SF CF)
	*-apple-darwin*)
		#for dlopen() libs:
		SO_EXT=.bundle
        #for libaubit4gl:
		SO_EXT_LINKABLE=.dylib
		;;


	*-ibm-aix*)
		PIC=
		LDFLAGS_SHARED="-s"
        ;;

	*)
        AC_MSG_WARN(You are using untested platform)
		echo "    Please report success or failure to compile Aubit on this"
		echo "    platform to the mailing list. Thank you."
        ;;
esac

LDFLAGS_SHARED="$PIC -shared"

dnl Set of available languages.
#ALL_LINGUAS="de fr es ko nl no pl pt sl sv"
ALL_LINGUAS="en"
dnl internationalization macros
#AM_GNU_GETTEXT

## ==================================================================
##            Decide on install location
## ==================================================================


	if test "$prefix" = "NONE"; then
		if test "$cygwin" = "1" ; then
			#/opt is not created by default on CygWin installations
			prefix=/usr/local
		else
			prefix=/opt
	    fi
	fi
	AC_MSG_CHECKING(install root 'prefix=$prefix')
	if test -w "$prefix"; then
		AC_MSG_RESULT(Yes ($prefix))
    else
		if test -w "$HOME"; then
			prefix=$HOME
			AC_MSG_RESULT(No (will use $prefix instead))
        else
			AC_MSG_ERROR(Cannot determine install path. HOME=$HOME Stop.)
        fi
    fi

LIB_PREFIX=$prefix/$SHORTNAME/lib

#List of libraries that we allways make. Here so we don't have to maintain it
#separately for RPM config file, install/deinstall and lib Makefile:
LIBFILE_1=$LIB_PREFIX/libEXREPORT_NOPDF${SO_EXT}
LIBFILE_2=$LIB_PREFIX/libaubit4gl${SO_EXT_LINKABLE}
LIBFILE_3=$LIB_PREFIX/libRPC_NORPC${SO_EXT}
LIBFILE_4=$LIB_PREFIX/libFORM_NOFORM${SO_EXT}
LIBFILE_5=$LIB_PREFIX/libSQL_nosql${SO_EXT}
LIBFILE_6=$LIB_PREFIX/libMENU_NOMENU${SO_EXT}
LIBFILE_7=$LIB_PREFIX/libMSG_NATIVE${SO_EXT}
LIBFILE_8=$LIB_PREFIX/libLEX_C${SO_EXT}
LIBFILE_9=$LIB_PREFIX/libUI_CONSOLE${SO_EXT}
LIBFILE_10=$LIB_PREFIX/libPACKER_PACKED${SO_EXT}
LIBFILE_11=$LIB_PREFIX/libPACKER_PERL${SO_EXT}
LIBFILE_12=$LIB_PREFIX/libPACKER_XML${SO_EXT}
LIBFILE_13=$LIB_PREFIX/libLEX_PERL${SO_EXT}
LIBFILE_14=$LIB_PREFIX/libFORM_GENERIC${SO_EXT}
LIBFILE_15=$LIB_PREFIX/libDATA_menu_list${SO_EXT}
LIBFILE_16=$LIB_PREFIX/libDATA_report${SO_EXT}
LIBFILE_17=$LIB_PREFIX/libDATA_struct_form${SO_EXT}
LIBFILE_18=
LIBFILE_19=$LIB_PREFIX/libLEX_EC${SO_EXT}
LIBFILE_20=
LIBFILE_21=
LIBFILE_22=
LIBFILE_23=
LIBFILE_24=
LIBFILE_25=
LIBFILE_26=
LIBFILE_27=
LIBFILE_28=
LIBFILE_29=
LIBFILE_30=

#Install location - must install first:
#IS_SOURCE="$HOMEDRIVE$CYGWIN_PATH$prefix/$SHORTNAME"
#Source code location:
IS_SOURCE="$HOMEDRIVE$CYGWIN_PATH$aubitdir"
IS_SOURCE_GTK="$HOMEDRIVE$CYGWIN_PATH/lib"

#Note: all command line switches like "--xxxx-wwwww" are automativaly
#converted to shell variables in "xxxxx_wwwww" format.
#--disable-xxx are not assigned "yes" by default
#--with-xxx are assigned "yes" if no value was assigned on command line

## ==================================================================
##                              Debugging
## ==================================================================

PHP_CONFIGURE_PART(Configuring Debugging options)
PHP_HELP_SEPARATOR([Debugging options:])



AC_MSG_CHECKING(Autoconf debugging)
if test "$enable_ac_debug" = "yes" ; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi
AC_MSG_CHECKING(Aubit programs debugging)
if test "$enable_debug" = "no" ; then
    CFLAGS="$CFLAGS -DNODEBUG"
    AC_MSG_RESULT(no)
	AC_MSG_WARN(Debugging disabled, use --enable-debug to enable it.)
	AUBIT_DEBUG=0
else
    #FIXME: DEBUG=ALL in environment? aubitrc?
    CFLAGS="$CFLAGS -g -Wall -DDEBUG"
    AC_MSG_RESULT(yes. Set DEBUG=ALL to get debug.out trace.)
fi

AC_MSG_CHECKING(Executables stripping)
if test "$enable_strip" != "no" ; then
    AC_MSG_RESULT(enabled)
	AC_PATH_PROG(STRIP, strip, no)
    if test "$STRIP" != "no"; then
		STRIP_EXECUTABLES=yes
	fi
else
    AC_MSG_RESULT(disabled)
fi

AC_MSG_CHECKING(YY Debugging)
if test "$enable_yy_debug" = "yes" ; then
	#for debbuging in function yyparse() export YYDEBUG=1 to environment:
	YYDEBUG="-DYYDEBUG=1 -DYYERROR_VERBOSE -DYYPRINT=aubit_yyprint"
    AC_MSG_RESULT(enabled, export YYDEBUG=1 to environment to turn it on.)
else
    AC_MSG_RESULT(disabled, specify --enable-yy-debug to turn it on.)
fi

AC_MSG_CHECKING(Yacc Debugging)
if test "$enable_yacc_debug" = "yes" ; then
	DEBUG_BISON="--debug"
    AC_MSG_RESULT(enabled.)
else
    AC_MSG_RESULT(disabled, specify --enable-yacc-debug to turn it on.)
fi

#in libLEX_xxx printc():
# * If the INCLINES variable is set then the source target C
# * file is generated with #line (for debugging purposes).
AC_MSG_CHECKING(printc() Debugging)
if test "$enable_printc_debug" = "yes" ; then
	INCLINES=yes
    AC_MSG_RESULT(enabled.)
else
    AC_MSG_RESULT(disabled.)
fi


## ==================================================================
##                              Platform
## ==================================================================


AC_MSG_CHECKING(MACHDEP)
if test -z "$MACHDEP"
then
    if test -f /usr/lib/NextStep/software_version; then
        set X `hostinfo | grep 'NeXT Mach.*:' | \
                sed -e 's/://' -e 's/\./_/'` && \
        ac_sys_system=next && ac_sys_release=$4
        MACHDEP="$ac_sys_system$ac_sys_release$ac_sys_cpu"
    else
        ac_sys_system=`uname -s`
        if test "$ac_sys_system" = "AIX" ; then
                ac_sys_release=`uname -v`
        else
                ac_sys_release=`uname -r`
        fi
        ac_md_system=`echo $ac_sys_system |
                           tr -d '[/ ]' | tr '[[A-Z]]' '[[a-z]]'`
        ac_md_release=`echo $ac_sys_release |
                           tr -d '[/ ]' | sed 's/\..*//'`
        MACHDEP="$ac_md_system$ac_md_release"
    fi
    case MACHDEP in
    '') MACHDEP=unknown;;
    esac
fi

AC_MSG_RESULT($MACHDEP)



#this things are automatically set by configure:
#build
#build_cpu
#build_vendor
#build_os
#host
#host_cpu
#host_vendor
#host_os
#target
#target_cpu
#target_vendor
#target_os


#Usage: uname [OPTION]...
#  -a, --all        print all information
#  -m, --machine    print the machine (hardware) type
#  -n, --nodename   print the machine's network node hostname
#  -r, --release    print the operating system release
#  -s, --sysname    print the operating system name
#  -p, --processor  print the host processor type
#  -v               print the operating system version

#This will return just 2.4
#KERNEL=`kernelversion`
#this will return 2.4.7-10
KERNEL_VER=`uname -r`

#FIXME: how do I get glibc version?
GLIBC_VER=2.2.4

#grep /usr/bin/glibcbug for:

#VERSION="2.2.4"
#RELEASE="stable"
#ADDONS="c_stubs glibc-compat linuxthreads"
#HOST="i386-redhat-linux-gnu"
#CC='gcc'
#CCVERSION='2.96 20000731 (Red Hat Linux 7.1 2.96-98)'
#CFLAGS="-march=i386 -D__USE_STRING_INLINES -fstrict-aliasing -freorder-blocks -DNDEBUG=1 -g -O3"
#SYSINCLUDES=""
#VERSIONING="yes"
#BUILD_STATIC="yes"
#BUILD_SHARED="yes"
#BUILD_PIC_DEFAULT="no"
#BUILD_PROFILE="yes"
#BUILD_OMITFP="no"
#BUILD_BOUNDED="no"
#BUILD_STATIC_NSS="no"
#STDIO="libio"


## ==================================================================
##                  Checks for standard programs
## ==================================================================

PHP_CONFIGURE_PART(Checking standard programs:)
AC_PATH_PROG(MAKE, make, no)
if test "$MAKE" = "no" ; then
	if test "$AUBIT_SOURCE" = "1" ; then
		AC_MSG_ERROR(Cannot compile Aubit from source code without 'make' - please install it. Stop.)
    else
		AC_MSG_WARN(It will be much easier if you would install 'make')
    fi
else
		AC_MSG_CHECKING(make version)
		#this creates fill set dump on Solaris
		set `make --version | head -1|sed -e 's/^GNU Make version //' -e 's/, by Richard Stallman and Roland McGrath.//' -e 's/\./ /g'`
		if test "$1" != ""; then
			if test "$1" = "3" -a "$2" -lt "50"; then
		        AC_MSG_WARN(You will need GNU make version 3.50 or later (found $1.$2.$3).)
	        else
			    AC_MSG_RESULT($1.$2.$3 (ok))
	        fi
        else
			AC_MSG_ERROR(Aubit needs GNU 'make' - please install it. Stop.)
        fi
fi

if test "$AUBIT_SOURCE" = "1" ; then

	#force this check even if not specified on command line:
	if test "$with_bison" = ""; then
		with_bison=yes
	fi

	AC_ARG_WITH(bison,
	[  --with-bison[=DIR]   Use Bison as YACC to recompile Aubit parsers. DIR is the base
	                          directory of Bison executable, defaults to /usr/bin.],
	[
		
	if test "$withval" != "no"; then

		#AC_PROG_YACC
		#if test "$YACC" != "bison -y"; then
		#	#AC_PROG_YACC macro sets $YACC to "yacc" even when it's not present!
		#	YACC=no
        #    BISON=no
		#	WARN_YACC=1
		#else

		if test "$withval" != "yes"; then
            #user specified path to bison
			BISON_PATH=$withval
        else
			BISON_PATH="$PATH"
		fi

		AC_PATH_PROG(BISON, bison, no, $BISON_PATH)

        if test "$BISON" != "no"; then
			AC_MSG_CHECKING(Bison version)
			set `$BISON --version|head -1|sed -e 's/^GNU Bison version //' -e 's/^bison (GNU Bison) //' -e 's/\./ /g'`
		    AC_MSG_RESULT($1.$2)

			if test "$1" = "1" -a "$2" -lt "875"; then
		        AC_MSG_WARN(You will need Bison 1.875 if you'd want to regenerate the Aubit parsers)
				#Will use preconfigured y.tab.c from /tools/no_yacc
				#YACC=no
                BISON=no
				WARN_YACC=1
	        else
				BISON="$BISON -y"
				#-y is Equivalent to -o y.tab.c; the parser output file is
				#called y.tab.c, and the other  outputs  are  called
				#y.output  and  y.tab.h.  The purpose of this switch
				#is to imitate yacc's output file name  conventions.
			fi
        else
			BISON=no
			WARN_YACC=1
			AC_MSG_WARN(cannot find bison in $BISON_PATH)
		fi
    else
		BISON=no
		WARN_YACC=1
		AC_MSG_RESULT(disbled)
    fi

	],[
	  AC_MSG_RESULT(--with-bison not specified)
	])

	AC_PATH_PROG(DOXYGEN, doxygen, no)
	AC_PATH_PROG(CVS_CLIENT, cvs, no)
	AC_PATH_PROG(DOXYSEARCH, doxysearch, no)
	if test "$DOXYSEARCH" != "no" ; then
		DOXY_BIN_ABSPATH=`dirname $DOXYSEARCH`
    fi

	# dot tool is part of Graphviz, a graph visualization toolkit from AT&T
	# and Lucent Bell Labs. One of DoxyGen options

	if test "$with_dot" != "no"; then
		if test "$with_dot" != "yes"; then
			old_PATH="$PATH"
	        PATH="$with_dot:$PATH"
	    fi

		AC_PATH_PROG(DOTTOOL, dot, no)

		if test "$DOTTOOL" != "no"; then
			HAVE_DOT=YES
			DOT_PATH=`dirname "$DOTTOOL"`
		else
			HAVE_DOT=NO
		fi

		if test "$with_dot" != "yes"; then
			PATH="$old_PATH"
	    fi
	else
		HAVE_DOT=NO
	fi

fi

#This is probably a bug in autoconf, but if we don't test for Lex BEFORE
#we test for C, all sort of wireds things will happen, so we have to test
#it even in binary distro, where we don't need it:
dnl #AC_PROG_LEX
AM_PROG_LEX
if test "$LEX" = ":" || test "$LEX" = "" ; then
    dnl #AC_PROG_LEX macro sets $LEX to ":" when it can't find lex of flex executables!
	LEX="no"
	if test "$AUBIT_SOURCE" = "1" ; then
        WARN_LEX=1
    fi
fi

dnl Checks for programs:
#AC_ISC_POSIX
AC_PROG_CC

if test "$CC" = "gcc"; then
	AC_MSG_CHECKING(GCC version)

	TMP_TMP=`gcc --version | head -1 | sed -e 's/^gcc (GCC) //' -e 's/ (prerelease)//' -e 's/\./ /g'`
	TMP_TMP=`gcc --version | head -1 | sed -e 's/^gcc//' -e 's/(GCC)//' -e 's/ (prerelease)//' -e 's/(//' -e 's/\.exe//' -e 's/\./ /g'`
	if test "$TMP_TMP" != ""; then
		set `echo $TMP_TMP`
		if test "$1" != ""; then
			#if test "$1" = "3" -a "$2" -lt "50"; then
		    #    AC_MSG_WARN(You will need GNU make version 3.50 or later (found $1.$2.$3).)
	        #else
			    AC_MSG_RESULT($1.$2.$3)
	            GCC_VERSION_MAJOR=$1
				GCC_VERSION_MINOR=$2
                if test "$3" = "mingw"; then
					GCC_MINGW=yes
					#should not really need drive letter?
                    #also, if adding drive letter with : , it then we add AUBITDIR to PATH, : will be
                    #interperted as separator (when using CygWin tools), and make PATH invalid
					aubitdir="$HOMEDRIVE$CYGWIN_PATH$aubitdir"
                    #BUT-then CygWin things there is a directory called /cygwin in HIS root!
                    #but how to get a directory name CygWin was installed in, if different then default?
					#aubitdir="$CYGWIN_PATH$aubitdir"
					AC_MSG_WARN(Using MinGW GCC.)
					old_CFLAGS="$CFLAGS"
					old_CPPFLAGS="$CPPFLAGS"
					old_LDFLAGS="$LDFLAGS"

					TMP_IFLAGS="-I$WINDOWS_DRIVE$CYGWIN_PATH/usr/include"
                    CFLAGS=" $CFLAGS $TMP_IFLAGS"
					CPPFLAGS="$CPPFLAGS $TMP_IFLAGS"

					#Clear cached value:
					#unset ac_cv_header_dlfcn_h
					#AC_CHECK_HEADERS([dlfcn.h])
	                #exit
					#In file included from $WINDOWS_DRIVE/MinGW/include/inttypes.h:6,
					#                 from configure:9489:
					#$WINDOWS_DRIVE/MinGW/include/stdint.h:27: conflicting types for `int8_t'
					#$WINDOWS_DRIVE$CYGWIN_PATH/usr/include/sys/types.h:128: previous declaration of `int8_t'

					CFLAGS="$old_CFLAGS"
					CPPFLAGS="$old_CPPFLAGS"
					LDFLAGS="$old_LDFLAGS"
                    TMP_IFLAGS=
                fi
	        #fi
		else
			AC_MSG_WARN(Cannot read GCC version.)
	    fi
    else
		AC_MSG_WARN(Cannot read GCC version.)
    fi
else
	AC_MSG_ERROR(Aubit needs GNU 'C' compiler - please install it. Stop.)
fi


AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_AWK
#FIXME: stop if no gawk (if configuring source code tree) - awk will fail
if test "$AWK" = "awk"; then
		AC_MSG_WARN(Aubit compiler need gawk, awk will probably fail.)
fi

AC_PATH_PROG(PERL, perl, no)
AC_PATH_PROG(SWIG, swig, no)
AC_PATH_PROG(WGET, wget, no)

AC_PATH_PROG(SH, bash, no)
if test "$SH" = "no"; then
	AC_PATH_PROG(SH, sh, /bin/sh)
	AC_MSG_WARN(Aubit compiler need bash, sh will probably fail.)
fi

AC_PATH_PROG(LDD, ldd, no)

AC_PATH_PROG(LCLINTEXE,lclint,no)

	if test "$LCLINTEXE" = "no"; then
		AC_PATH_PROG(LCLINTEXE,splint,no)
    fi

AC_PATH_PROG(LDCONFIG, ldconfig, no)
AC_PATH_PROG(AUTOCONF, autoconf, no)
AC_PATH_PROG(ACLOCAL, aclocal, no)

AC_PATH_PROG(RPM, rpm, no)
AC_PATH_PROG(AUTOSPEC, autospec, no)

AC_PATH_PROG(PROG_SENDMAIL, sendmail, /usr/lib/sendmail, $PATH /usr/bin /usr/sbin /usr/etc /etc /usr/ucblib)
if test -n "$PROG_SENDMAIL"; then
  AC_DEFINE(HAVE_SENDMAIL)
fi

## ==================================================================
##                 Checks for other 4gl compiles
## ==================================================================

PHP_CONFIGURE_PART(Checking for 4Js BDL / Informix D4GL:)
AC_PATH_PROG(FJS_PCOMPILER, fglcomp, no)
AC_PATH_PROG(FJS_PRUNTIME, fglrun, no)

PHP_CONFIGURE_PART(Checking for Querix compiler:)
#4gl code compiler have same name as Plexus  = fglc so we look for Form Compiler
AC_PATH_PROG(QUERIX_COMP, fmpc, no)


if test "$cygwin" = "1" ; then
	PHP_CONFIGURE_PART(Checking for Plexus XDP AD32 - FGLC Compiler:)
	#same name as Querix:
	#AC_PATH_PROG(PLEXUS_COMP, fglc, no)
	AC_PATH_PROG(PLEXUS_COMP, mkesq, no)
else
	PHP_CONFIGURE_PART(Checking for Classic Informix 4gl P-code:)
	AC_PATH_PROG(I4GL_PCOMPILER, fglpc, no)
	AC_PATH_PROG(I4GL_PRUNTIME, fglgo, no)

    if test "$I4GL_PCOMPILER" != "no"; then
		#For 4glWorks: try to understand whether this is 4gl4 or 4gl6, as you
		#have to free cursors & statements differently
		AC_MSG_CHECKING(fglpc version)
		set `fglpc -v 2>/dev/null | head -1|sed -e 's/^INFORMIX-4GL Version //' -e 's/\./ /g'`
		if test "$1" != ""; then
			#if test "$1" = "4" -a "$2" -lt "50"; then
            if test "$1" -lt "5"; then
				I4GL_PCOMPILER_VER=4
				AC_MSG_RESULT($1.$2.$3 (series 4 or earler))
	        else
				I4GL_PCOMPILER_VER=6
				AC_MSG_RESULT($1.$2.$3 (series 6 or later))
	        fi
        else
			AC_MSG_ERROR(Cannot get fglpc version.)
        fi
    fi

	PHP_CONFIGURE_PART(Checking for Classic Informix 4gl C-code:)
	AC_PATH_PROG(I4GL_CCOMPILER, c4gl, no)

    if test "$I4GL_CCOMPILER" != "no"; then
	#For 4glWorks: try to understand if the product is esql/c 5+
	#aware, or is a special case, ie c4gl 4.x or is not esql/c
	#aware in any way, shape or form (ie an rds only shop)
		AC_MSG_CHECKING(c4gl version)
		set `c4gl -v 2>/dev/null | head -1|sed -e 's/^INFORMIX-4GL Version //' -e 's/\./ /g'`
		if test "$1" != ""; then
			#if test "$1" = "4" -a "$2" -lt "50"; then
            if test "$1" -lt "5"; then
				I4GL_CCOMPILER_VER=4
				AC_MSG_RESULT($1.$2.$3 (series 4 or earler))
	        else
				I4GL_CCOMPILER_VER=6
				AC_MSG_RESULT($1.$2.$3 (series 6 or later))
	        fi
        else
			AC_MSG_ERROR(Cannot get c4gl version.)
        fi
    fi
fi

## ==================================================================
##                 Checks for web server support
## ==================================================================

#see if we can enable Aubit CGI/HTMLlib compile, DoxyGen web
#install, FGLDOC web server support
PHP_CONFIGURE_PART(Checking for Web server:)

AC_PATH_PROG(APACHECTL, apachectl, no)
AC_PATH_PROG(HTTPD, httpd, no)

AC_MSG_CHECKING(Web server support)
if test "$APACHECTL" != "no"; then
	AC_MSG_RESULT(Apache)
else
	if test "$HTTPD" != "no"; then
		AC_MSG_RESULT(httpd)
    else
		AC_MSG_RESULT(no)
    fi
fi

#If we have web server:

	if test "$APACHECTL" != "no"; then
		AC_MSG_CHECKING(Apache configuration file)
		if test -f /etc/httpd/conf/httpd.conf; then
			APACHE_CONF=/etc/httpd/conf/httpd.conf
			AC_MSG_RESULT($APACHE_CONF)
		else
			AC_MSG_RESULT(no)
		fi
	fi

	#FIXME: DO we have JSP needed for FGLDOC?

    if test "$APACHE_CONF" != ""; then
		AC_MSG_CHECKING(Web server paths)
		grep ScriptAlias $APACHE_CONF > /tmp/tmp_config_.tmp
		CGI_DIR=`grep -v \# /tmp/tmp_config_.tmp | grep cgi-bin | awk '{print $3}' | sed -e 's/"//g'`
		WWW_DOCUMENT_ROOT=`grep ^DocumentRoot $APACHE_CONF | head -1 | awk '{print $2}' | sed -e 's/"//g'`
		AC_MSG_RESULT(OK ($WWW_DOCUMENT_ROOT)($CGI_DIR))
    fi


	if test "$with_www_name" != "" ; then
		WWW_HOST_NAME=$with_www_name
    else
		WWW_HOST_NAME=localhost
    fi


## ==================================================================
##                 Checks for SAP DB ESQL/C (pre-compiler) support
## ==================================================================

#force this check even if not specified on command line:
if test "$with_sapdb" = ""; then
	with_sapdb=yes
fi

if test "$SAPDBROOT" = ""; then
	SAPDBROOT=/opt/sapdb
fi

PHP_CONFIGURE_PART(Checking for SAP DB ESQL/C support:)

AC_ARG_WITH(sapdb,
[  --with-sapdb[=DIR]   Include SAP DB ESQL/C support.  DIR is the Sap DB base
                          install directory, defaults to ${SAPDBROOT:-nothing}.],
[
	if test "$withval" != "no"; then
		if test "$SAPDBROOT" = ""; then
			SAPDB_WARNING=1
			AC_MSG_RESULT(no)
		else
			if test "$withval" = "yes"; then
				SAPDB_INCDIR="-I$SAPDBROOT/depend/incl -I$SAPDBROOT/interfaces/precompiler/incl"
				SAPDB_LIBDIR="-L$SAPDBROOT/depend/lib -L$SAPDBROOT/interfaces/precompiler/lib"
			else
				#user specified custom withval
				WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON SAPESQLC"
				WARN_LD_LIBRARY_PATH=1
				SAPDB_INCDIR="-I$withval/depend/incl -I$withval/interfaces/precompiler/incl"
				SAPDB_LIBDIR="-L$withval/depend/lib -L$withval/interfaces/precompiler/lib"
				if test "$withval" != "$SAPDBROOT"; then
					SAPDB_WARNING=2
				fi
    		fi

			if test "$withval" != "yes"; then
	            ADD_LD_LIBRARY_PATH="$withval/depend/lib:$ADD_LD_LIBRARY_PATH"
            else
	            ADD_LD_LIBRARY_PATH="$SAPDBROOT/depend/lib:$ADD_LD_LIBRARY_PATH"
			fi

            old_PATH="$PATH"
            PATH="$SAPDBROOT/interfaces/precompiler/bin:$PATH"

			#First check if we have cpc installed at all:
			AC_PATH_PROG(SAPDB_ESQLC, cpc, no, $PATH $SAPDBDIR/interfaces/precompiler/bin /opt/sapdb/interfaces/precompiler/bin)

			#any C (gcc) compiler is OK fro SAP (?)
			SAPDBESQLCC_OK="OK"

			if test "$SAPDB_ESQLC" != "no"; then
				AC_MSG_CHECKING(if we can use cpc)
				if test "$SAPDB_ESQLC" != "no" && test "$SAPDBESQLCC_OK" = "OK";
				then
					SAPDB_INCLUDE=$SAPDB_INCDIR
					SAPDB_LFLAGS=$SAPDB_LIBDIR

	                old_CFLAGS="$CFLAGS"
	                old_LDFLAGS="$LDFLAGS"

					CFLAGS="$CFLAGS $SAPDB_INCLUDE $SAPDB_CFLAGS"
					LDFLAGS="$LDFLAGS $SAPDB_LDFLAGS"

					AC_DEFINE(HAVE_SAPDB)
					AC_MSG_RESULT(Yes)

					CFLAGS="$old_CFLAGS"
	                LDFLAGS="$old_LDFLAGS"

	            else
					AC_MSG_RESULT(cpc not working or no compatible C compiler)
	            fi
            else
				AC_MSG_RESULT(cpc not in path)
            fi

            PATH="$old_PATH"
		fi
	else
		SAPDBDIR=
		AC_MSG_RESULT(no)
	fi
],[
  AC_MSG_RESULT(--with-sapdb not specified)
])

#<This block was compied from PHP 3.x configure.in -------------------->

## ==================================================================
##                 Checks for Informix ESQL/C support
## ==================================================================

#force this check even if not specified on command line:
if test "$with_informix" = ""; then
	with_informix=yes
	force_informix=yes
fi

PHP_CONFIGURE_PART(Checking for Informix ESQL/C support:)

AC_ARG_WITH(informix,
[  --with-informix[=DIR]   Include Informix ESQL/C support.  DIR is the Informix base
                          install directory, defaults to ${INFORMIXDIR:-nothing}.],
[
	if test "$withval" != "no"; then
		if test "$INFORMIXDIR" = "" && test "$force_informix" != "yes" ; then
			INFORMIX_WARNING=1
			#IFX_C_MAKE='touch functions/ifx.c'
			AC_MSG_RESULT(no)
		else
			if test "$withval" = "yes"; then
				IFX_INCDIR=$INFORMIXDIR/incl/esql
				IFX_LIBDIR="-L$INFORMIXDIR/lib -L$INFORMIXDIR/lib/esql"
			else
				#user specified custom withval
				WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON IESQLC"
				WARN_LD_LIBRARY_PATH=1
				IFX_INCDIR=$withval/incl/esql
				IFX_LIBDIR="-L$withval/lib -L$withval/lib/esql"
				if test "$withval" != "$INFORMIXDIR"; then
					INFORMIX_WARNING=2
				fi
    		fi

			if test "$withval" != "yes"; then
	            ADD_LD_LIBRARY_PATH="$withval/lib:$withval/lib/esql:$ADD_LD_LIBRARY_PATH"
            else
	            ADD_LD_LIBRARY_PATH="$INFORMIXDIR/lib:$INFORMIXDIR/lib/esql:$ADD_LD_LIBRARY_PATH"
			fi

			#First check if we have esql installed at all:
			AC_PATH_PROG(IFMX_ESQLC, esql, no)

			if test "$cygwin" = "1"; then
				#on Windows, we need Micro$loth or Bordland C compiler to use ESQL/C:
				AC_PATH_PROG(MSVC_COMP, cl, no)
				AC_PATH_PROG(MSVC_LINK, link, no)
				if test "$MSVC_COMP" != "no" && test "$MSVC_LINK" != "no" ;
				then
	                ESQLCC_OK="OK"
                fi
			else
                #on non-Windows platforms, native C compiler will do:
				ESQLCC_OK="OK"
			fi

			if test "$IFMX_ESQLC" != "no" && test "$ESQLCC_OK" = "OK";
			then
				IFX_INCLUDE=-I$IFX_INCDIR
				IFX_LFLAGS=$IFX_LIBDIR
				if test -z "$IFX_LIBS"; then
					IFX_LIBS=`esql -libs | sed -e 's/-lm$//'`
					dnl  -lm twice otherwise?
					IFX_LIBS=`echo $IFX_LIBS | sed -e 's/Libraries to be used://g' -e 's/esql: error -55923: No source or object file\.//g'`
					dnl Seems to get rid of newlines.
					dnl According to Perl's DBD-Informix, might contain these strings.
				else
					dnl Allow override to use static and/or threaded libs
					IFX_LIBS="$IFX_LIBS"
				fi

                old_CFLAGS="$CFLAGS"
                old_LDFLAGS="$LDFLAGS"

				if test "`uname -s 2>/dev/null`" = "AIX"; then
					IFX_CFLAGS="-D__H_LOCALEDEF"
				fi

				CFLAGS="$CFLAGS $IFX_INCLUDE $IFX_CFLAGS"
				LDFLAGS="$LDFLAGS $IFX_LDFLAGS"

				AC_DEFINE(HAVE_IFX)
				AC_MSG_CHECKING([Informix version])
				IFX_VERSION=[`esql -V | sed -ne '1 s/^[^0-9]*\([0-9]\)\.\([0-9]*\).*/\1\2/p'`]
				if test $IFX_VERSION -ge "900"; then
					AC_DEFINE(HAVE_IFX_IUS)
					IFX_ESQL_FLAGS="-EDHAVE_IFX_IUS"
				else
					IFX_ESQL_FLAGS="-EUHAVE_IFX_IUS"
				fi

                #For 4glWorks: try to understand if the product is esql/c 5+
				#aware, or is a special case, ie c4gl 4.x or is not esql/c
				#aware in any way, shape or form (ie an rds only shop)

				AC_DEFINE_UNQUOTED(IFX_VERSION, $IFX_VERSION)
				AC_MSG_RESULT($IFX_VERSION)
				#IFX_C_MAKE="(esql -e $IFX_ESQL_FLAGS functions/ifx.ec; mv ifx.c functions)"

				AC_MSG_CHECKING(if we can use esql)
				AC_MSG_RESULT(Yes)

				CFLAGS="$old_CFLAGS"
                LDFLAGS="$old_LDFLAGS"

            else
				AC_MSG_CHECKING(if we can use esql)
				AC_MSG_RESULT(esql not in path or no compatible C compiler)
            fi
		fi
	else
		INFORMIXDIR=
		IFX_C_MAKE='touch functions/ifx.c'
		AC_MSG_RESULT(no)
	fi
],[
  AC_MSG_RESULT(--with-informix not specified)
])


if test "$cygwin" = "1"; then

	AC_MSG_WARN(ESQL/C support on Windows temporaraly disabled.)

	IFMX_ESQLC=no
	IFX_ESQL_FLAGS=
	IFX_LIBS=
	IFX_LFLAGS=
	IFX_INCLUDE=
	IFX_C_MAKE=
	INFORMIXDIR=
fi

## ==================================================================
##                 Checks for PostgreSQL lib and ESQL/C compiler support
## ==================================================================

#force this check even if not specified on command line:
if test "$with_pgsql" = ""; then
	with_pgsql=yes
fi

PHP_CONFIGURE_PART(Checking for PostgresSQL ESQL and library support:)
AC_ARG_WITH(pgsql,
[  --with-pgsql[=DIR]      Include PostgresSQL support.  DIR is the PostgresSQL
                          base install directory, defaults to /usr/local/pgsql.],
[

  if test "$withval" != "no"; then
    if test "$withval" = "yes"; then
		withval=/usr/local
    else
		#user specified custom withval
		WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON PGESQLC"
		WARN_LD_LIBRARY_PATH=1
        ADD_LD_LIBRARY_PATH="$withval:$ADD_LD_LIBRARY_PATH"
    fi

    PGSQL_INCDIR=$withval/include
    test -d $withval/include/pgsql && PGSQL_INCDIR=$withval/include/pgsql
    test -d $withval/pgsql/include && PGSQL_INCDIR=$withval/pgsql/include
    test -d $withval/include/postgresql && PGSQL_INCDIR=$withval/include/postgresql
    PGSQL_LIBDIR=$withval/lib
    test -d $withval/lib/pgsql && PGSQL_LIBDIR=$withval/lib/pgsql
    test -d $withval/pgsql/lib && PGSQL_LIBDIR=$withval/pgsql/lib
    test -d $withval/lib/postgresql && PGSQL_LIBDIR=$withval/lib/postgresql

    PGSQL_INCLUDE=-I$PGSQL_INCDIR
    PGSQL_LFLAGS=-L$PGSQL_LIBDIR
    PGSQL_LIBS=-lpq
#configure.in:309: error: possibly undefined macro: AC_ADD_LIBRARY_WITH_PATH
#configure.in:310: error: possibly undefined macro: AC_ADD_INCLUDE
#	AC_ADD_LIBRARY_WITH_PATH(pq, $PGSQL_LIBDIR)
#   AC_ADD_INCLUDE($PGSQL_INCDIR)

    old_CFLAGS=$CFLAGS; old_LDFLAGS=$LDFLAGS; old_LIBS=$LIBS
    CFLAGS="$CFLAGS $PGSQL_INCLUDE"
    LDFLAGS="$LDFLAGS $PGSQL_LFLAGS"
    LIBS="$LIBS $PGSQL_LIBS"

	# FIXME: Replace `main' with a function in `-lc':
	AC_CHECK_LIB([pq], [main])

    #needed by native PG connector:
	AC_CHECK_HEADERS([ pgsql/libpq-fe.h postgresql/libpq-fe.h libpq-fe.h ])
    #FIXME: if we did not find this header; disable compilation of PG native
    #connector

	if test "$ac_cv_header_pgsql_libpq_fe_h" = "yes" -o "$ac_cv_header_postgresql_libpq_fe_h" = "yes" -o "$ac_cv_header_libpq_fe_h" = "yes" ; then
		HAVE_PG_ESQL_HEADERS=yes
    else
        HAVE_PG_ESQL_HEADERS=no
    fi

	#PostgreSQL ESQL/C pre-compiler:
	AC_PATH_PROG(PG_ESQLC, ecpg, no)

	AC_MSG_CHECKING(PG ESQL connector support)
	if test "$ac_cv_lib_pq_main" = "yes" ; then
		if test "$HAVE_PG_ESQL_HEADERS" = "yes"; then
			AC_DEFINE(HAVE_PGSQL)
    	    HAVE_PGSQL_LIB=yes
	    	AC_MSG_RESULT(Yes)
		    AC_CHECK_FUNC(PQcmdTuples,AC_DEFINE(HAVE_PQCMDTUPLES))
        else
			AC_MSG_RESULT(NO (missing headers))
        fi
    else
        HAVE_PGSQL_LIB=no
		AC_MSG_RESULT(NO (missing library))
    fi

	CFLAGS=$old_CFLAGS; LDFLAGS=$old_LDFLAGS; LIBS=$old_LIBS
  else
    AC_MSG_RESULT(disabled)
  fi
],[
  AC_MSG_RESULT(--with-pgsql not specified)
])

## ==================================================================
##                 Checks for Informix ODBC driver
## ==================================================================

#FIXME: use: AC_ARG_WITH here, this is non-standard!

PHP_CONFIGURE_PART(Checking for Informix ODBC driver:)

if test "$cygwin" = "1"; then

		#FIXME: this is not working, probably because it is a DLL and
        #name does not start with "libxxxxx"
		#IVIF7912.DLL      INTERSOLV Informix ODBC driver - WIN
        #this should be in WINDOWSDIR/system32 - but it's DLL !!!!
		AC_CHECK_LIB([ivif7912], [main])


		#only two dll's in csdk280_tc1 - none have lib prefix
		AC_CHECK_LIB([clidll], [main])
		AC_CHECK_LIB([iclit09b], [main])
else
		#Shared drivers for use with ODBC managers (?)
		#[INFORMIX 2.8 32-BIT]
		#Driver=/extra/informix/lib/cli/iclis09a.so
		#AC_CHECK_LIB([iclis09a], [main])
		# FIXME: Replace `main' with a function in `-lxxxx':
		#[INFORMIX 3.3 32-BIT]
		#Driver=/extra/informix/lib/cli/iclis09b.so
		#AC_CHECK_LIB([iclis09b], [main])

		old_LIBS=$LIBS
		old_LDFLAGS=$LDFLAGS
		LDFLAGS="$LDFLAGS -L$INFORMIXDIR/lib/cli -L$INFORMIXDIR/lib/esql -Xlinker -rpath -Xlinker $INFORMIXDIR/lib/esql"
		# FIXME: Replace `main' with a function in `-lifcli':
		AC_CHECK_LIB([ifcli], [main])
		LIBS=$old_LIBS
		LDFLAGS=$old_LDFLAGS


	if test "$ac_cv_lib_ifcli_main" = "yes"; then
		HAVE_IFXODBC=yes

		WARN_LD_LIBRARY_PATH=1
		WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON IFXODBC"
		ADD_LD_LIBRARY_PATH="$INFORMIXDIR/lib/cli:$ADD_LD_LIBRARY_PATH"
		INFORMIXODBC_WARNING=1
	else
		old_LIBS=$LIBS
		old_LDFLAGS=$LDFLAGS
		LDFLAGS="$LDFLAGS -L$INFORMIXDIR/lib/cli -L$INFORMIXDIR/lib/esql -Xlinker -rpath -Xlinker $INFORMIXDIR/lib/esql"
		# FIXME: Replace `main' with a function in `-lifcli':
		#		ivif7912.xx           INTERSOLV Informix ODBC driver - UNIX
		#        Driver=/opt/informix/lib/ivinf7912.so
		AC_CHECK_LIB([ivif7912], [main])
		LIBS=$old_LIBS
		LDFLAGS=$old_LDFLAGS

		if test "$ac_cv_lib_ivif7912_main" = "yes"; then
			HAVE_IS_IFXODBC=yes
			INFORMIXODBC_WARNING=1
        fi
	fi
fi


## ==================================================================
##                 Checks for SAP DB ODBC driver
## ==================================================================
#UNIX:
#bin/odbclnk Shell script (Unix only) for the linking of an application.
#demo/eng/ODBC/sqlexamp.c C example program for an ODBC application.
#demo/eng/ODBC/sqladhoc.c C example program for an ODBC application.
#demo/eng/ODBC/Makefile Makefile for generating a demo program.


#Win32:
#pgm\sql*.dll Libraries for the SAP DB runtime
#environment (see the platform-specific SAP DB Installation manual)
#<Windows System 32> directory :
#odbc32.dll Driver Manager
#ctl3dv2.dll 3D Windows Controls
#odbccp32.dll Installer library
#odbcinst.hlp Installer library help
#odbcad32.exe Administrator program
#odbccr32.dll ODBC cursor library


#Example makefile:
#INCL = -I$(SAPDBROOT)/incl
#LIBS = $(SAPDBROOT)/lib/libsqlod.a $(SAPDBROOT)/lib/libsqlrte.a $(SAPDBROOT)/lib/libpcr.a -lpthread -lm
#HelloSAPDB: HelloSAPDB.o
#        $(CC) -o $@ HelloSAPDB.o $(LIBS)
#.c.o:
#        $(CC) -c -DSQLODBC $(CCFLAGS) $(UNDEF) $(DEFINES) $(INCL) $<

PHP_CONFIGURE_PART(Checking for SAP DB ODBC driver support:)

#force this check even if not specified on command line:
if test "$with_sapodbc" = ""; then
	with_sapodbc=yes
fi

AC_ARG_WITH(sapodbc,
[  --with-sapodbc[=DIR]    Include SAP DB ODBC driver support.  DIR is the base
                          install directory, defaults to /opt/sapdb.],
[
	if test "$withval" != "no"; then
		if test "$withval" = "yes"; then
	    	withval=/opt/sapdb #$SAPDBROOT
		else
			#user specified custom withval
			WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON SAPODBC"
			WARN_LD_LIBRARY_PATH=1
            ADD_LD_LIBRARY_PATH="$withval/interfaces/odbc/lib:$ADD_LD_LIBRARY_PATH"
		fi

		old_LIBS="$LIBS"
		old_LDFLAGS="$LDFLAGS"
        old_CPPFLAGS="$CPPFLAGS"
		TMP_SAPODBC_INCLUDE="-I$withval/interfaces/odbc/incl -I$withval"
		TMP_SAPODBC_LFLAGS="-L$withval/interfaces/odbc/lib -L$withval/indep_prog/runtime/7300/lib"
        LIBS="-lsqlrte -lpcr -lpthread -lm"

        #libpcr: WARNING: NOT part of the SAP DB ODBC RPM!!!
        #It's part of "environment" RPM:
        #/opt/sapdb/indep_prog/runtime/7300/lib/libpcr.so
		#/opt/sapdb/interfaces/precompiler/lib/libpcr.a
		#/opt/sapdb/interfaces/precompiler/runtime/7300/lib/libpcr.so


		CPPFLAGS="$CPPFLAGS $TMP_SAPODBC_INCLUDE"
		LDFLAGS="$LDFLAGS $TMP_SAPODBC_LFLAGS $TMP_SAPODBC_INCLUDE"
		# FIXME: Replace `main' with a function in `-lsqlod':
		AC_CHECK_LIB([sqlod], [main])
		if test $ac_cv_lib_sqlod_main = yes; then
			AC_CHECK_HEADERS([interfaces/odbc/incl/sql.h \
								interfaces/odbc/incl/sqlext.h \
								interfaces/odbc/incl/sqltypes.h \
								interfaces/odbc/incl/WINDOWS.H])
        fi
		LIBS="$old_LIBS"
		LDFLAGS="$old_LDFLAGS"
        CPPFLAGS="$old_CPPFLAGS"

		if test $ac_cv_lib_sqlod_main = yes; then
			if test "$ac_cv_header_interfaces_odbc_incl_sqltypes_h" = "yes" \
				&& test "$ac_cv_header_interfaces_odbc_incl_sql_h" = "yes" \
				&& test "$ac_cv_header_interfaces_odbc_incl_sqlext_h" = "yes" \
				&& test "$ac_cv_header_interfaces_odbc_incl_WINDOWS_H" = "yes"
			then
				HAVE_SAPODBC_HEADERS=yes
            else
                HAVE_SAPODBC_HEADERS=no
            fi

			AC_MSG_CHECKING(if we can use SAP ODBC)
			if test "$HAVE_SAPODBC_HEADERS" != "yes" && AUBIT_SOURCE=1; then
            #we need headers only to compile source code
			    AC_DEFINE(HAVE_SAPODBC,0,[ ])
				AC_MSG_RESULT(no header files)
			else
				AC_MSG_RESULT(yes)
				HAVE_SAPODBC=yes
			    SAPODBC_INCLUDE="$TMP_SAPODBC_INCLUDE"
			    SAPODBC_LFLAGS="$TMP_SAPODBC_LFLAGS"
			    AC_DEFINE(HAVE_SAPODBC,1,[ ])
            fi
		else
		    AC_DEFINE(HAVE_SAPODBC,0,[ ])
		fi
	else
		AC_MSG_RESULT(disabled)
	fi
],[
	AC_MSG_RESULT(--with-sapodbc not specified)
])


## ==================================================================
##                 Checks for PostgreSQL ODBC driver
## ==================================================================

PHP_CONFIGURE_PART(Checking for PostgreSQL ODBC driver support:)

#force this check even if not specified on command line:
if test "$with_pgodbc" = ""; then
	with_pgodbc=yes
fi

AC_ARG_WITH(pgodbc,
[  --with-pgodbc[=DIR]    Include PostgreSQL ODBC driver support.  DIR is the base
                          install directory, defaults to /usr.],
[
  #PHP_WITH_SHARED
	if test "$withval" != "no"; then
		if test "$withval" = "yes"; then
	    	withval=/usr
		else
			#user specified custom withval
			WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON PGODBC"
			WARN_LD_LIBRARY_PATH=1
            ADD_LD_LIBRARY_PATH="$withval/lib:$ADD_LD_LIBRARY_PATH"
		fi

		old_LIBS="$LIBS"
		old_LDFLAGS="$LDFLAGS"
        old_CPPFLAGS="$CPPFLAGS"
		TMP_PGODBC_INCLUDE="-I$withval/include -I$withval/include/pgsql/iodbc"
		TMP_PGODBC_LFLAGS="-L$withval/lib"

		CPPFLAGS="$CPPFLAGS $TMP_PGODBC_INCLUDE"
		LDFLAGS="$LDFLAGS $TMP_PGODBC_LFLAGS $TMP_PGODBC_INCLUDE"
		# FIXME: Replace `main' with a function in `-lpsqlodbc':
		AC_CHECK_LIB([psqlodbc], [main])
		if test $ac_cv_lib_psqlodbc_main = yes; then
			#also check for headers, since they are not in PG ODBC RPM, they are
			#in postgresql-devel, <<< THIS IS NOT TRUE ANY MORE, at least for RH 8 RPM's!
			#7.1.3 seems to be last version to include this files!!
            #http://developer.postgresql.org/cvsweb.cgi/pgsql-server/src/interfaces/odbc/Attic/iodbc.h?hideattic=0 say:
            #Remove all traces of the ODBC driver, which is now on GBorg as the psqlodbc project ...
            #
            #
			#including /usr/lib/libpsqlodbc.a (so we don't need
			#PGSQLODBC RPM installed at all, unless we are using ODBC manager):
			#/usr/include/pgsql/iodbc: iodbc.h isql.h isqlext.h

			#AC_CHECK_HEADERS([ iodbc.h isql.h isqlext.h ])

			AC_CHECK_HEADERS([ pgsql/iodbc/iodbc.h pgsql/iodbc/isql.h pgsql/iodbc/isqlext.h ])

        fi
		LIBS="$old_LIBS"
		LDFLAGS="$old_LDFLAGS"
        CPPFLAGS="$old_CPPFLAGS"

		AC_MSG_CHECKING(PG ODBC connector support)
		if test $ac_cv_lib_psqlodbc_main = yes; then

			#if test "$ac_cv_header_iodbc_h" = "yes" && test "$ac_cv_header_isql_h" = "yes" && test "$ac_cv_header_isqlext_h" = "yes" ; then
			if test "$ac_cv_header_pgsql_iodbc_iodbc_h" = "yes" && test "$ac_cv_header_pgsql_iodbc_isql_h" = "yes" && test "$ac_cv_header_pgsql_iodbc_isqlext_h" = "yes" ; then
                HAVE_PG_HEADERS=yes
            else
                HAVE_PG_HEADERS=no
            fi

			if test "$HAVE_PG_HEADERS" != "yes" && AUBIT_SOURCE=1; then
            #we need headers only to compile source code
			    AC_DEFINE(HAVE_PGODBC,0,[ ])
				AC_MSG_RESULT(NO (missing header files))
			else
				HAVE_PGODBC=yes
			    PGODBC_INCLUDE="$TMP_PGODBC_INCLUDE"
			    PGODBC_LFLAGS="$TMP_PGODBC_LFLAGS"

			    AC_DEFINE(HAVE_PGODBC,1,[ ])
			    AC_MSG_RESULT(yes)
            fi
		else
		    AC_DEFINE(HAVE_PGODBC,0,[ ])
		    AC_MSG_RESULT(No (missing library))
		fi
	else
		AC_MSG_RESULT(disabled)
	fi
],[
	AC_MSG_RESULT(--with-pgodbc not specified)
])

#FIXME:
#warn user to run /usr/share/pgsql/odbc.sql script to add aditional
# PostgreSQL catalog extensions and functions for ODBC compliance
#do the same for ODBC managers, if you detect PG database installed



## ==================================================================
##                 Checks for iODBC ODBC manager support
## ==================================================================


if test "$cygwin" = "0"; then

#force this check even if not specified on command line:
if test "$with_iodbc" = ""; then
	with_iodbc=yes
fi

PHP_CONFIGURE_PART(Checking for iODBC support:)


AC_ARG_WITH(iodbc,
[  --with-iodbc[=DIR]      Include iODBC/Openlink support.  DIR is the iODBC base
                          install directory, defaults to /usr/local.],
[
  #PHP_WITH_SHARED
	if test "$withval" != "no"; then
		if test "$withval" = "yes"; then
	    	withval=/usr/local
		else
			#user specified custom withval
			WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON iODBC"
			WARN_LD_LIBRARY_PATH=1
            ADD_LD_LIBRARY_PATH="$withval/lib:$ADD_LD_LIBRARY_PATH"
		fi

		old_LIBS=$LIBS
		old_LDFLAGS=$LDFLAGS
		LDFLAGS="$LDFLAGS -L$withval/lib"
		#  AC_CHECK_LIB(pq, PQcmdTuples,AC_DEFINE(HAVE_PQCMDTUPLES,1,[ ]))
		# FIXME: Replace `main' with a function in `-liodbc':
		AC_CHECK_LIB([iodbc], [main])
		LIBS=$old_LIBS
		LDFLAGS=$old_LDFLAGS

		if test $ac_cv_lib_iodbc_main = yes; then
			ODBC_LIB_NAME=iodbc
			HAVE_IODBC=yes

			#PHP_ADD_LIBRARY_WITH_PATH(iodbc, $withval/lib)
		    #PHP_ADD_INCLUDE($withval/include, 1)
		    ODBC_TYPE=iodbc
		    IODBC_INCLUDE=-I$withval/include
		    IODBC_LFLAGS=-L$withval/lib
		    IODBC_LIBS=-liodbc
		    AC_DEFINE(HAVE_IODBC,1,[ ])
		    #AC_MSG_RESULT(yes)
		else
		    AC_DEFINE(HAVE_IODBC,0,[ ])
		    #AC_MSG_RESULT(no)
		fi
	else
		AC_MSG_RESULT(disabled)
	fi
],[
    AC_MSG_RESULT(--with-iodbc not specified)
])

fi


## ==================================================================
##            Checks for unixODBC ODBC manager support
## ==================================================================

if test "$cygwin" = "0"; then

PHP_CONFIGURE_PART(Checking for unixODBC support:)

#force this check even if not specified on command line:
if test "$with_unixodbc" = ""; then
	with_unixodbc=yes
fi

AC_ARG_WITH(unixodbc,
[  --with-unixodbc[=DIR]   Include unixODBC support.  DIR is the unixODBC base
                          install directory, defaults to /usr/local.],
[
	#PHP_WITH_SHARED
	if test "$withval" = "yes"; then
    	withval=/usr/local
	else
		#user specified custom withval
		WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON unixODBC"
		WARN_LD_LIBRARY_PATH=1
        ADD_LD_LIBRARY_PATH="$withval:$ADD_LD_LIBRARY_PATH"
    fi

	if test "$withval" != "no"; then

		old_LIBS=$LIBS
		old_LDFLAGS=$LDFLAGS
		LDFLAGS="$LDFLAGS -L$withval/lib"
		#  AC_CHECK_LIB(pq, PQcmdTuples,AC_DEFINE(HAVE_PQCMDTUPLES,1,[ ]))
		# FIXME: Replace `main' with a function in `-lodbc':
		AC_CHECK_LIB([odbc], [main])
		LIBS=$old_LIBS
		LDFLAGS=$old_LDFLAGS

		if test $ac_cv_lib_odbc_main = yes; then
			if test "$AUBIT_SOURCE" = "1" ; then
				#CPPFLAGS="$CPPFLAGS $TMP_IFLAGS"
				AC_CHECK_HEADERS([sql.h])
				TMP=`eval echo '${'$as_ac_Header'}'`
		        if test "$TMP" = "yes"; then
					AC_CHECK_HEADERS([sqlext.h])
					TMP=`eval echo '${'$as_ac_Header'}'`
			        if test "$TMP" = "yes"; then
						AC_CHECK_HEADERS([odbcinst.h])
						TMP=`eval echo '${'$as_ac_Header'}'`
				        if test "$TMP" = "yes"; then
						    HAVE_UNIXODBC_HEADERS=1
                        fi
                    fi
                fi
			else
			    HAVE_UNIXODBC_HEADERS=1
			fi

			if test "$HAVE_UNIXODBC_HEADERS" = "1" ; then
				ODBC_LIB_NAME=odbc
				HAVE_UNIXODBC=yes
			    UNIXODBC_INCLUDE=-I$withval/include
			    UNIXODBC_LFLAGS=-L$withval/lib
			    UNIXODBC_LIBS=-lodbc

			    ODBC_TYPE=unixODBC
			    AC_DEFINE(HAVE_UNIXODBC,1,[ ])
            else
				AC_MSG_WARN(unixODBC libraries present but headers are missing.)
				AC_DEFINE(HAVE_UNIXODBC,0,[ ])
				INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.unixodbcdev"
            fi
		else
		    AC_DEFINE(HAVE_UNIXODBC,0,[ ])
			INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.unixodbc"
		fi
	else
		AC_MSG_RESULT(disbled)
	    AC_DEFINE(HAVE_UNIXODBC,0,[ ])
	fi
],[
	AC_MSG_RESULT(--with-unixodbc not specified)
])

fi

## ==================================================================
##            Checks for Easysoft ODBC-ODBC Bridge support
## ==================================================================

if test "$cygwin" = "0"; then

#Do this check only if we did not find any ODBC manager support already:
if test -z "$ODBC_TYPE"; then
PHP_CONFIGURE_PART(Checking for Easysoft ODBC-ODBC Bridge support:)
#AC_MSG_CHECKING(for Easysoft ODBC-ODBC Bridge support)
AC_ARG_WITH(esoob,
[  --with-esoob[=DIR]      Include Easysoft OOB support. DIR is the OOB base
                          install directory,
                          defaults to /usr/local/easysoft/oob/client.],
[
  #PHP_WITH_SHARED
  if test "$withval" = "yes"; then
    withval=/usr/local/easysoft/oob/client
	ADD_LD_LIBRARY_PATH="$withval:$ADD_LD_LIBRARY_PATH"
  else
	#user specified custom withval
	WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON ODBCbridge"
	WARN_LD_LIBRARY_PATH=1
    ADD_LD_LIBRARY_PATH="$withval:$ADD_LD_LIBRARY_PATH"
  fi


  if test "$withval" != "no"; then
    ODBC_INCDIR=$withval/include
    ODBC_LIBDIR=$withval/lib
    ODBC_LFLAGS=-L$ODBC_LIBDIR
    ODBC_INCLUDE=-I$ODBC_INCDIR
    ODBC_LIBS=-lesoobclient
    ODBC_TYPE=ESOOB
    AC_DEFINE(HAVE_ESOOB,1,[ ])
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(disabled)
  fi
],[
  AC_MSG_RESULT(--with-esoob not specified)
])
fi

fi

## ==================================================================
##            Checks for custom ODBC support
## ==================================================================

if test "$cygwin" = "0"; then

#Do this check only if we did not find any ODBC manager support already:
if test -z "$ODBC_TYPE"; then
PHP_CONFIGURE_PART(Checking for custom ODBC support:)
#AC_MSG_CHECKING(for a custom ODBC support)
AC_ARG_WITH(custom-odbc,
[  --with-custom-odbc[=DIR]
                          Include a user defined ODBC support.
                          The DIR is ODBC install base directory,
                          which defaults to /usr/local.
                          Make sure to define CUSTOM_ODBC_LIBS and
                          have some odbc.h in your include dirs.
                          E.g., you should define following for
                          Sybase SQL Anywhere 5.5.00 on QNX, prior to
                          run configure script:
                              CPPFLAGS=\"-DODBC_QNX -DSQLANY_BUG\"
                              LDFLAGS=-lunix
                              CUSTOM_ODBC_LIBS=\"-ldblib -lodbc\".],
[
  if test "$withval" = "yes"; then
    withval=/usr/local
  else
	#user specified custom withval
	WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON CustODBC"
	WARN_LD_LIBRARY_PATH=1
    ADD_LD_LIBRARY_PATH="$withval:$ADD_LD_LIBRARY_PATH"
  fi
  if test "$withval" != "no"; then
    ODBC_INCDIR=$withval/include
    ODBC_LIBDIR=$withval/lib
    ODBC_LFLAGS=-L$ODBC_LIBDIR
    ODBC_INCLUDE=-I$ODBC_INCDIR
    ODBC_LIBS=$CUSTOM_ODBC_LIBS
    ODBC_TYPE=custom
    AC_DEFINE(HAVE_CODBC,1,[ ])
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(disabled)
  fi
],[
  AC_MSG_RESULT(--with-custom-odbc not specified)
])
fi

fi

#</This block was copied from PHP 4.x ext/odbc/config.m4 ---------------->

## ==================================================================
##                  Check for GTK+ GUI support
## ==================================================================

#Fixme: use AC native macros:
#AM_PATH_GTK(1.0.2,, [AC_MSG_ERROR([GTK not in path])])
#AM_PATH_GTKMM(0.9.5,, [AC_MSG_ERROR([GTK not in path])])

PHP_CONFIGURE_PART(Checking for GTK+ GUI support:)

#AC_PATH_PROG(GTK_CONFIG, gtk-config, no)
#AC_PATH_PROG(PKG_CONFIG, pkg-config, no)


#force this check even if not specified on command line:
if test "$with_gtk" = ""; then
		with_gtk=yes
fi

AC_ARG_WITH(gtk,
[  --with-gtk[=DIR]      Include GTK+ GUI support.  DIR is the GTK+ base
                          install directory, defaults to /usr/local.],
[
	if test "$withval" != "no"; then
		if test "$withval" = "yes"; then
	    	withval=/usr/local
		else
			#user specified custom withval
			CUSTOM_WITHVAL=1
		    ADD_LD_LIBRARY_PATH="$withval:$ADD_LD_LIBRARY_PATH"
		fi

		old_PATH="$PATH"
		PATH="$PATH:$withval/bin"
		AC_PATH_PROG(GTK_CONFIG, gtk-config, no)
		AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
        PATH="$old_PATH"

		old_LIBS=$LIBS
		old_LDFLAGS=$LDFLAGS
		LDFLAGS="$LDFLAGS -L$withval/lib -L/usr/lib"

        ###########################################
        #
        #All this tests fro a single library will in most cases fail anyway,
        #because of inter-depenencies between GTK libraries - we need to find out
        #which are needed using pkg-config or gtk-config first anyway, so should
        #I remove this, or move it AFTER I read config fron gtk-config?
        #
        ###########################################


		# FIXME: Replace `main' with a function in `-lgdk':
		AC_CHECK_LIB([gdk], [main])
		# FIXME: Replace `main' with a function in `-lglib':
		AC_CHECK_LIB([glib], [main])

		#Old workaround - remove:
		#if test "$ac_cv_lib_glib_main" = "no"; then
		#	#libglib-1.3.dll.a
		#	AC_CHECK_LIB([glib-1.3.dll], [main])
		#	if test "$ac_cv_lib_glib_1_3_dll_main" != "no"; then
		#		ac_cv_lib_glib_main="yes"
        #    fi
        #else
		#	ac_cv_lib_glib_1_3_dll_main="no"
		#fi

		# FIXME: Replace `main' with a function in `-lgtk':
		AC_CHECK_LIB([gtk], [main])

		if
		(test "$ac_cv_lib_gtk_main" != yes &&
		test "$ac_cv_lib_glib_main" != yes &&
		test "$ac_cv_lib_gdk_main" != yes); then

			AC_CHECK_LIB([gdk-2.0], [main])
			AC_CHECK_LIB([glib-2.0], [main])
			AC_CHECK_LIB([gtk-2.0], [main])

			if
			(test "$ac_cv_lib_gtk_2_0_main" != yes &&
			test "$ac_cv_lib_glib_2_0_main" != yes &&
			test "$ac_cv_lib_gdk_2_0_main" != yes); then

				AC_CHECK_LIB([gdk-1.2], [main])
				AC_CHECK_LIB([glib-1.2], [main])
				AC_CHECK_LIB([gtk-1.2], [main])

				if
				(test "$ac_cv_lib_gtk_1_2_main" = yes &&
				test "$ac_cv_lib_glib_1_2_main" = yes &&
				test "$ac_cv_lib_gdk_1_2_main" = yes); then

		            HAVE_GTKLIBS=1.2

                fi
			else
	            HAVE_GTKLIBS=2.0
			fi
		else
            HAVE_GTKLIBS=nover
		fi

		LIBS=$old_LIBS
		LDFLAGS=$old_LDFLAGS

#Removed from makefile(s):
#ifneq "$(GLIBVER)" "old"
#	ifneq "$(GLIBVER)" "" #GLIBVER was manualy specified
#		ifneq "@PKG_CONFIG@" "no" #PKG_CONFIG
#			GTKLIB_CFLAGS	:=$(shell @PKG_CONFIG@ --cflags $(GLIBVER))
#			GDKLIB_CFLAGS	:=$(shell @PKG_CONFIG@ --cflags $(GDKVER))
#        endif
#		GLIB_CFLAGS		=$(GTKLIB_CFLAGS) $(GDKLIB_CFLAGS) -I${GTKPATH}/include
#    else #GLIBVER is empty
#		ifneq "@GTK_CONFIG@" "no" #GTK_CONFIG
#			GLIB_CFLAGS		:=$(shell @GTK_CONFIG@ --cflags)
#			xxGTKLIBS		:=$(shell @GTK_CONFIG@ --libs)
#			#we cannot have -rdynamic and -shared at the same time:
#			GTKLIBS			=$(subst -rdynamic,,${xxGTKLIBS})
#        else
#			ifneq "@PKG_CONFIG@" "no" #PKG_CONFIG
#                #for this we already set CFLAGS in configure
#				#GLIB_CFLAGS		:=$(shell @PKG_CONFIG@ --cflags glib)
#				#GLIB_CFLAGS		:=$(shell @PKG_CONFIG@ --cflags @GTK_NAME@)
#				#-lgtk -lgdk -lgmodule-1.3 -lglib-1.3 -liconv -lintl
#				#GLIB_LIBS		:=$(shell @PKG_CONFIG@ --libs-only-l gtk+-1.3-win32-production)
#            endif
#        endif
#    endif
#else #GLIBVER="old"
#	GLIB_CFLAGS=-I/usr/lib/glib/include
#	ifdef COMSPEC
#		GLIB_CFLAGS+=-I/usr/src/gtk+ -I/usr/src/gtk+/gdk -I/usr/src/glib
#    else
#		GLIB_CFLAGS+=-I/usr/include/gtk-1.2 -I/usr/include/glib-1.2
#    endif
#endif

		#check if we have all we need to make GTK GUI
		if
			((test "$ac_cv_lib_gtk_main" = yes &&
			test "$ac_cv_lib_glib_main" = yes &&
			test "$ac_cv_lib_gdk_main" = yes) ||
            (test "$GTK_CONFIG" != "no" ||
			test "$PKG_CONFIG" != "no")); then

			if test "$GTK_CONFIG" != "no"; then
				GTK_NAME="using gtk-config"
				#GTK_NAME=`$PKG_CONFIG --list-all | grep gtk | head -1 | awk '{print $1}'`
				#GDK_NAME=`$PKG_CONFIG --list-all | grep gdk | head -1 | awk '{print $1}'`
				#GLIB_NAME=`$PKG_CONFIG --list-all | grep glib |  head -1 | awk '{print $1}'`

				GTK_INC_PATH=`$GTK_CONFIG --cflags`
				GLIB_CFLAGS=$GTK_INC_PATH
				GTKLIBS=`$GTK_CONFIG --libs`

				AC_DEFINE(HAVE_GTK,1,[ ])
				GTKBUILD=yes

			else
				if test "$PKG_CONFIG" != "no"; then

                            #pkg-config needs package name as parameter, and on Cygwin,
                            #this iclude version names, so we need to extract this names first:

                            GTK_NAME=`$PKG_CONFIG --list-all 2>/dev/null | grep ^gtk | head -1 | awk '{print $1}'`
							GDK_NAME=`$PKG_CONFIG --list-all 2>/dev/null | grep ^gdk | head -1 | awk '{print $1}'`
							GLIB_NAME=`$PKG_CONFIG --list-all 2>/dev/null | grep ^glib |  head -1 | awk '{print $1}'`

                            if test "$GTK_NAME" != "" && test "$GDK_NAME" != "" && test "$GLIB_NAME" != ""; then
	                            GTK_LIB_PATH=`$PKG_CONFIG --libs-only-L $GTK_NAME`
								GTK_INC_PATH=`$PKG_CONFIG --cflags-only-I $GTK_NAME`
								GTKLIBS=`$PKG_CONFIG --libs-only-l $GTK_NAME`

								AC_DEFINE(HAVE_GTK,1,[ ])
								GTKBUILD=yes
                            else
								AC_MSG_WARN(cannot extract names from pkg-config.)

								if test "$HAVE_GTKLIBS" = ""; then
									AC_MSG_WARN(Trying to find some trace of GTK+ libraries-please wait...)
									#can This be /usr/local/lib too?
									LIBGLIBTMP=`find /usr/lib -name libglib* 2>/dev/null`
    	                            LIBGDKTMP=`find /usr/lib -name libgdk* 2>/dev/null`
        	                        LIBGTKTMP=`find /usr/lib -name libgtk* 2>/dev/null`

									if test "$LIBGLIBTMP" != "" && test "$LIBGDKTMP" != "" && test "$LIBGTKTMP" != ""; then
							        	AC_MSG_WARN(you apparently have GTK+ run-time libraries installed.)
								        AC_MSG_WARN(but pkg-config info is installed with -devel- packages.)
    	                            else
								        AC_MSG_WARN(Nothing found)
									fi
        	                    else
						        	AC_MSG_WARN(you apparently have GTK+ run-time libraries version $HAVE_GTKLIBS installed.)
									AC_MSG_WARN(but pkg-config info is installed with -devel- packages.)
								fi
                            fi

	            else
                            #try to assign paths manually:
					        AC_MSG_WARN(cannot find pkg-config or gtk-config)
					        AC_MSG_WARN(Trying to guess GTK configuration manually)
							GTK_LIB_PATH="-L$withval/lib"
							GTK_INC_PATH="-I$withval/include -I$withval/include/gdk -I$withval/lib/gtk+/include -I$withval -I$withval/gdk"
							GTKLIBS="-lgtk -lgdk"

							#Some GTK distros on CygWin have a naming probem!
							if test "$ac_cv_lib_glib_1_3_dll_main" = "yes"; then
								"ac_cv_lib_glib_1_3_dll_main = $ac_cv_lib_glib_1_3_dll_main"
								GTKLIBS="$GTKLIBS -lglib-1.3.dll "
								GTK_INC_PATH="$GTK_INC_PATH -I$withval/include/glib-2.0 -I$withval/lib/glib-2.0/include"
		                    else
			                    GTKLIBS="$GTKLIBS -lglib"
		                    fi

                            #This way user can specify explicit path to GLIB using --with-glib=path
							if test "$with_glib" != ""; then
								GTK_INC_PATH="$GTK_INC_PATH -I$with_glib"
							fi

							AC_DEFINE(HAVE_GTK,1,[ ])
							GTKBUILD=yes
	            fi
			fi

			if test "$GTKBUILD" = "yes" && test "$CUSTOM_WITHVAL" = "1"; then
						#user specified custom withval
						WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON GTK"
						WARN_LD_LIBRARY_PATH=1
			fi
		else
		    AC_DEFINE(HAVE_GTK,0,[ ])
		fi
	else
		AC_MSG_RESULT(disabled)
	fi
],[
	AC_MSG_RESULT(--with-gtk not specified)
])

CUSTOM_WITHVAL=0

AC_MSG_CHECKING(GTK+ support)
AC_MSG_RESULT($GTKBUILD ($GTK_NAME $GDK_NAME $GLIB_NAME))

#Fixme: we should test for GTK+ versions

## ==================================================================
##                  Check for Jabber IM support
## ==================================================================

PHP_CONFIGURE_PART(Checking for Jabber support:)


#force this check even if not specified on command line:
if test "$with_iksemel" = ""; then
	with_iksemel=yes
fi

AC_ARG_WITH(iksemel,
[  --with-iksemel[=DIR]   Include Jabber/iksemel support.  DIR is the iksemel
                          install directory, defaults to /usr/local.],
[
	#PHP_WITH_SHARED
	if test "$withval" != "no"; then
		if test "$withval" = "yes"; then
	    	withval=/usr/local
		else
			#user specified custom withval
			WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON Jabber"
			WARN_LD_LIBRARY_PATH=1
            ADD_LD_LIBRARY_PATH="$withval/lib:$ADD_LD_LIBRARY_PATH"
		fi

		old_LIBS=$LIBS
		old_LDFLAGS=$LDFLAGS
		TEST_IKSEMEL_I_FLAGS="-I$withval/include"
		TEST_IKSEMEL_L_FLAGS="-L$withval/lib"
		LDFLAGS="$LDFLAGS $TEST_IKSEMEL_I_FLAGS $TEST_IKSEMEL_L_FLAGS"
		#  AC_CHECK_LIB(pq, PQcmdTuples,AC_DEFINE(HAVE_PQCMDTUPLES,1,[ ]))
		# FIXME: Replace `main' with a function in `-liksemel':
		AC_CHECK_LIB([iksemel], [main])
		LIBS=$old_LIBS
		LDFLAGS=$old_LDFLAGS

		if test $ac_cv_lib_iksemel_main = yes; then
			JABBERBUILD=yes
		    AC_DEFINE(HAVE_IKSEMEL,1,[ ])
            IKSEMEL_L_FLAGS="$TEST_IKSEMEL_L_FLAGS"
            IKSEMEL_I_FLAGS="$TEST_IKSEMEL_I_FLAGS"

		    #AC_MSG_RESULT(yes)
		else
		    AC_DEFINE(HAVE_IKSEMEL,0,[ ])
		    #AC_MSG_RESULT(no)
		fi
	else
		AC_MSG_RESULT(disabled)
	fi
],[
	AC_MSG_RESULT(--with-iksemel not specified)
])

## ==================================================================
##                  Check for PDF support
## ==================================================================

PHP_CONFIGURE_PART(Checking for PDF support:)

#force this check even if not specified on command line:
if test "$with_pdf" = ""; then
	with_pdf=yes
fi

AC_ARG_WITH(pdf,
[  --with-pdf[=DIR]       Include PDF support.  DIR is the pdflibl
                          install directory, defaults to /usr/local.],
[
	#PHP_WITH_SHARED
	if test "$withval" != "no"; then
		if test "$withval" = "yes"; then
	    	withval=/usr/local
		else
			#user specified custom withval
			WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON PDF"
			WARN_LD_LIBRARY_PATH=1
            ADD_LD_LIBRARY_PATH="$withval/lib:$ADD_LD_LIBRARY_PATH"
		fi

		old_LIBS=$LIBS
		old_LDFLAGS=$LDFLAGS
		TEST_PDFLIB_I_FLAGS="-I$withval/include"
		TEST_PDFLIB_L_FLAGS="-L$withval/lib"
		TEST_PDFLIB_FLAGS="$TEST_PDFLIB_I_FLAGS $TEST_PDFLIB_L_FLAGS"
		LDFLAGS="$LDFLAGS $TEST_PDFLIB_FLAGS"
		#  AC_CHECK_LIB(pq, PQcmdTuples,AC_DEFINE(HAVE_PQCMDTUPLES,1,[ ]))
		# FIXME: Replace `main' with a function in `-lpdf':
		AC_CHECK_LIB([pdf], [main])
		LIBS=$old_LIBS
		LDFLAGS=$old_LDFLAGS

		if test $ac_cv_lib_pdf_main = yes; then
			USE_PDF=yes
    	    PDFBUILD=yes
			PDFLIB_I_FLAGS="$TEST_PDFLIB_I_FLAGS"
			PDFLIB_L_FLAGS="$TEST_PDFLIB_L_FLAGS"
		    AC_DEFINE(HAVE_PDF,1,[ ])
		    #AC_MSG_RESULT(yes)
		else
		    AC_DEFINE(HAVE_PDF,0,[ ])
		    #AC_MSG_RESULT(no)
		fi
	else
		AC_MSG_RESULT(disabled)
	fi
],[
	AC_MSG_RESULT(--with-pdf not specified)
])


## ==================================================================
##                  Check for Sun RPC support
## ==================================================================

PHP_CONFIGURE_PART(Checking for Sun RPC support:)

#Note: on Linux, rpclib functions are in libc. On other systems, for
#example Windows/CygWin, this will be a separate library that we will need

#First, let's see if RPC is in libraries we already have as default:

#it is not enough to just test for function, you then have test for it's success by name!
#and BTW, what's wrong with svctcp_create ?
#AC_CHECK_FUNCS([svc_run])
AC_CHECK_FUNCS([svctcp_create])
AC_CHECK_HEADERS([ rpc/rpc.h rpc.h ])
		#We will get #define HAVE___rpc_thread_svc_fdset in a4gl_incl_config.h, but no variables
		#are defined when testing functions.

#if test `eval echo '${'$as_ac_var'}'` != yes ; then
#if test "$ac_cv_func___rpc_thread_svc_fdset" != "yes"; then
if test "$ac_cv_func_svctcp_create" != "yes"; then
	RPC_FUNC_INTERNAL=0
	#This happened on ia64-unknown-linux-gnu
	case $host in
	*linux*)
		AC_MSG_WARN(Ooops-you don't have RPC function in GLIBC, but you are on Linux?)
		;;
	esac

	#force this check even if not specified on command line:
	if test "$with_rpc" = ""; then
		with_rpc=yes
	fi
else
	RPC_FUNC_INTERNAL=1

	if test "$AUBIT_SOURCE" = "1"; then #if compiling source code...
		#...force this check even if not specified on command line:
		if test "$with_rpc" = ""; then
			with_rpc=yes
		fi
    fi
fi

AC_ARG_WITH(rpc,
[  --with-rpc[=DIR]   Include RPC support.  DIR is the RPC base
                          install directory, defaults to /usr/local.],
[

	if test "$withval" != "no"; then

		#AC_MSG_CHECKING(for RPC support)

		if test "$withval" = "yes"; then
	    	withval=/usr/local
		else
			#user specified custom withval
		    CUSTOM_WITHVAL=1
			ADD_LD_LIBRARY_PATH="$withval:$ADD_LD_LIBRARY_PATH"
	    fi

		old_LIBS=$LIBS
		old_LDFLAGS=$LDFLAGS
        old_PATH="$PATH"
        PATH="$withval/rpcgen:$PATH"
        TEST_I_FLAGS="-I$withval/include -I$withval/rpc -I$withval"
        TEST_L_FLAGS="-L$withval/lib"
		LDFLAGS="$LDFLAGS $TEST_I_FLAGS $TEST_L_FLAGS"
		# FIXME: Replace `main' with a function in `-lrpclib':
		AC_CHECK_LIB([rpclib], [main])
		AC_CHECK_LIB([rpcsvc], [main])

		if test "$ac_cv_lib_rpcsvc_main" = "yes"; then
			#seems rpc library is rpcsvc on aix and sparc-sun-solaris2.7
			#which defines a bunch of symbols starting 'xdr_'

			AC_CHECK_LIB(rpcsvc, svctcp_create ,AC_DEFINE(HAVE_RPCSVC,1,[ ]))

			AC_MSG_CHECKING(library containing RPC functions)
			if test "$ac_cv_lib_rpcsvc___rpc_thread_svc_fdset" = "yes" || test "$ac_cv_lib_rpcsvc_svctcp_create_" = "yes" || test "$ac_cv_lib_rpcsvc_xdr_argument_" = "yes"; then
				AC_MSG_RESULT(-lrpcsvc)
	            RPCLIB_NAME=-lrpcsvc
            else
				AC_MSG_RESULT(Found -lrpcsvc, but no RPC functions inside.)
				#This checks are just to make debugging easier if real one fails, and should be removed in future:
				AC_CHECK_LIB(rpcsvc, __rpc_thread_svc_fdset,AC_DEFINE(HAVE_RPCSVC,1,[ ]))
				AC_CHECK_LIB(rpcsvc, xdr_argument ,AC_DEFINE(HAVE_RPCSVC,1,[ ]))

				case $host in
					*solaris*)
				        #sparc-sun-solaris2.8
                        #I'm obviously looking for wrong functions on Solaris:
						RPCLIB_NAME=-lrpcsvc
						;;

				esac

			fi
        fi

		if test "$ac_cv_lib_rpclib_main" = "yes"; then

			AC_CHECK_LIB(rpclib, svctcp_create ,AC_DEFINE(HAVE_RPCLIB,1,[ ]))
			if test "$ac_cv_lib_rpclib___rpc_thread_svc_fdset" = "yes" || test "$ac_cv_lib_rpclib_svctcp_create_" = "yes" || test "$ac_cv_lib_rpclib_xdr_argument_" = "yes"; then
				echo "Found RPC functions in -lrpclib"
		        RPCLIB_NAME=-lrpclib
	        else
                echo "Found -lrpclib, but no RPC functions inside."
				#This checks are just to make debugging easier if real one fails, and should be removed in future:
				AC_CHECK_LIB(rpclib, xdr_argument ,AC_DEFINE(HAVE_RPCLIB,1,[ ]))
				AC_CHECK_LIB(rpclib, __rpc_thread_svc_fdset,AC_DEFINE(HAVE_RPCLIB,1,[ ]))

			fi
		fi

		AC_PATH_PROG(RPCGEN, rpcgen, no)
		LIBS="$old_LIBS"
		LDFLAGS="$old_LDFLAGS"
        PATH="$old_PATH"

		if test "$RPCGEN" = "no";  then
		    AC_DEFINE(HAVE_RPCGEN,0,[ ])

			if test "$AUBIT_SOURCE" = "1"; then

				case "$host" in

					*-*-cygwin* | *-*-mingw* )
						#we don't need rpcgen on CygWin
		                USE_RPCGEN=0
                        #FIXME: if needed, set this path to appropriate subdir of "no_rpc" depending
                        #on platform. It is not clear is this files are platform dependent.
						RPCLIB_INCLUDE="-I$aubitdir/tools/no_rpc/cygwin"
                        WARN_RPCGEN=1
						;;

		            *)
                        WARN_RPCGEN=2
						#AC_MSG_ERROR( "rpcgen" not found. Please install Sun RPC or ask for precompiled RPC files for your platform to be added to Aubit disrtibution. Stop.)
						USE_RPCGEN=0
						RPCLIB_INCLUDE="-I$aubitdir/tools/no_rpc/cygwin"
		                ;;

	            esac
            else
				#we don't need rpcgen for binary distro
                USE_RPCGEN=0
			fi

		else
			USE_RPCGEN=1
			AC_DEFINE(HAVE_RPCGEN,1,[ ])
		fi

        if test "$RPCLIB_NAME" != ""; then
		    RPCLIB_INCLUDE="$TEST_I_FLAGS"
		    RPCLIB_LFLAGS="$TEST_L_FLAGS"
		    AC_DEFINE(HAVE_RPCLIB,1,[ ])
			HAVE_RPCLIB=1
            A4GL_RPCTYPE=SUNRPC
		else
			if test "$RPC_FUNC_INTERNAL" != "1"; then
				AC_DEFINE(HAVE_RPCLIB,0,[ ])
				HAVE_RPCLIB=0
                WARN_RPCLIB=1
                #FIXME: if we link fcompile and mcompile statically with rpclib for binary distro, will
                #it be able to compile forms and menus on systems without rpclib installed?

				#FIXME: if we link libRPC_SUNRPC statically with rpclib for binary distro, will RPC work
				#on system without rpclib installed?
            else
				AC_DEFINE(HAVE_RPCLIB,1,[ ])
				HAVE_RPCLIB=1
			fi
		fi

		if test "$CUSTOM_WITHVAL" = "1"; then
			if test "$HAVE_RPCLIB" = "1"; then
				#user specified custom withval
				WARN_LD_LIBRARY_REASON="$WARN_LD_LIBRARY_REASON RPC"
				WARN_LD_LIBRARY_PATH=1
            fi
		fi
	else
		AC_MSG_RESULT(disbled)
		AC_DEFINE(HAVE_RPCLIB,0,[ ])
		HAVE_RPCLIB=0
		USE_RPCGEN=0
		AC_DEFINE(HAVE_RPCGEN,0,[ ])

	fi
],[
	#This shoult never happen:
	AC_MSG_RESULT(--with-rpc not specified)
])

CUSTOM_WITHVAL=0

#I't probably ok to link it even if we don' need it, but if RPC functions
#are already in standard libraryes (Linux), we really don't need to:
#if test "$RPC_FUNC_INTERNAL" = "1"; then
#	RPCLIB_NAME=
#fi

## ==================================================================
##                  Check for XML RPC support
## ==================================================================

PHP_CONFIGURE_PART(Checking for XML-RPC support:)

old_CFLAGS="$CFLAGS"
old_LIBS="$LIBS"

#This will test for both w3c-libwww and xmlrpc-c, since all this depends on each other
CLIENT_LIBS="-L/usr/local/lib -L/usr/lib -lxmlrpc_client -lwwwxml -lxmltok -lxmlparse -lwwwinit -lwwwapp -lwwwhtml -lwwwtelnet -lwwwnews -lwwwhttp -lwwwmime -lwwwgopher -lwwwftp -lwwwfile -lwwwdir -lwwwcache -lwwwstream -lwwwmux -lwwwtrans -lwwwcore -lwwwutils -lmd5 -ldl -lxmlrpc -lxmlrpc_xmlparse -lxmlrpc_xmltok -lwwwzip"
CFLAGS="$CFLAGS $CLIENT_LIBS"
AC_CHECK_LIB([xmlrpc], [main])

CFLAGS="$old_CFLAGS"
LIBS="$old_LIBS"

if test $ac_cv_lib_xmlrpc_main = yes; then

    #xmlrpc-c-config executable is NOT in current RPM!
	AC_PATH_PROG(XMLRPC_C_CONFIG, xmlrpc-c-config, no)

	if test "$AUBIT_SOURCE" = "1" ; then
	    #to compile from source code, we need headers too:
		AC_CHECK_HEADERS([ xmlrpc.h xmlrpc_client.h ])

		if test "$ac_cv_header_xmlrpc_h" = "yes" && test "$ac_cv_header_xmlrpc_client_h" = "yes" ; then
			XML_RPC=yes
        else
			XML_RPC=no
        fi
    else
		XML_RPC=yes
    fi
else
	XML_RPC=no
fi

AC_MSG_CHECKING(XML-RPC support)
AC_MSG_RESULT($XML_RPC)


## ==================================================================
##            Check for mpz library (large integers) for exdatatype
## ==================================================================

PHP_CONFIGURE_PART(Checking for mpz library support:)
AC_CHECK_LIB([gmp], [main])

if test $ac_cv_lib_gmp_main = yes; then

	if test "$AUBIT_SOURCE" = "1" ; then
	    #to compile from source code, we need headers too:
		AC_CHECK_HEADERS([ gmp.h ])

		if test "$ac_cv_header_gmp_h" = "yes"  ; then
			EXDATA_MPZ=yes
            EXDTYPE=MPZ
        else
			EXDATA_MPZ=no
        fi
    else
		EXDATA_MPZ=yes
		EXDTYPE=MPZ
    fi
else
	EXDATA_MPZ=no
fi




## ==================================================================
##            Check for Perl generating compiler support
## ==================================================================

if test "$PERL" != no; then
	if test "$SWIG" != no; then
		#Fixme: How to test for MakeMaker Perl module ?
			PERLBUILD=yes
    fi
fi

## ==================================================================
##                       Checks for curses library
## ==================================================================

	#if test "$GCC_MINGW" != "yes"; then
	if test "$with_pdcurses" = "" && test "$GCC_MINGW" != "yes"; then
		HAVE_PDCURSES=0
		PHP_CONFIGURE_PART(Checking for curses libraries:)

		if test "$GCC_MINGW" = "yes"; then
			#when running MinGW GCC in CygWin environment, we can try using CygWin curses:
			case "$host" in
			*-*-cygwin | *-*-cygwin* )
				CYG_LFLAGS="-L$WINDOWS_DRIVE$CYGWIN_PATH/lib"
				CYG_IFLAGS="-I$WINDOWS_DRIVE$CYGWIN_PATH/usr/include/ncurses -I$WINDOWS_DRIVE$CYGWIN_PATH/usr/include"
				old_LIBS="$LIBS"
				old_LDFLAGS="$LDFLAGS"
				old_CFLAGS="$CFLAGS"
				LDFLAGS="$LDFLAGS $CYG_LFLAGS"
				CFLAGS="$CFLAGS $CYG_LFLAGS"

				;;
			esac
        fi

		# FIXME: Replace `main' with a function in `-lcurses':
		AC_CHECK_LIB([curses], [main])
		if test "$ac_cv_lib_curses_main" = "yes"; then
			#fixme: check version of curses - how?
			case $host in
				*-apple-darwin*)
					CURSES_LIB_NAME="-lSystem"
					;;
				*)
					CURSES_LIB_NAME="-lcurses -lform -lpanel"
			        ;;
			esac
			AC_DEFINE(HAVE_CURSES)
	        HAVE_CURSES=1
		    #AC_CHECK_FUNC(PQcmdTuples,AC_DEFINE(HAVE_PQCMDTUPLES))
			CURSES_LIB_PATH="-L/lib"
			AC_DEFINE(HAVE_CURSES_H)
		else
			# FIXME: Replace `main' with a function in `-lcurses':
			AC_CHECK_LIB([ncurses], [main])

			if test "$ac_cv_lib_ncurses_main" = "yes"; then
				#fixme: check version of ncurses - how?
				case $host in
					*-apple-darwin*)
						CURSES_LIB_NAME="-lSystem"
						;;
					*)
						CURSES_LIB_NAME="-lncurses -lform -lpanel"
				        ;;
				esac
				AC_DEFINE(HAVE_CURSES)
		        HAVE_CURSES=1
			    #AC_CHECK_FUNC(PQcmdTuples,AC_DEFINE(HAVE_PQCMDTUPLES))

				if test "$CYG_LFLAGS" = ""; then
					CURSES_LIB_PATH="-L/lib"
                else
					CURSES_LIB_PATH="$CYG_LFLAGS"
					CURSES_INC_PATH="$CYG_IFLAGS"

                fi
				AC_DEFINE(HAVE_NCURSES_H)

	        else
				HAVE_CURSES=0
				CURSES_INC_PATH="-I$aubitdir/tools/no_curses/cygwin"
	        fi
		fi

		#form and panel are part of curses - but not PDcurses
		#AIX: Both form and panel h files are part of ncurses. Install it.
		# FIXME: Replace `main' with a function in `-lform':
		AC_CHECK_LIB([form], [main])
		# FIXME: Replace `main' with a function in `-lpanel':
		AC_CHECK_LIB([panel], [main])

		LDFLAGS="$old_LDFLAGS"
		CFLAGS="$old_CFLAGS"
		LIBS="$old_LIBS"

	else #$with_pdcurses was specified
		HAVE_CURSES=0
		#there is not ncurses on Win32 - but we can try Pdcurses: OOPS - no go - no forms support -
        #check again in some time
		PHP_CONFIGURE_PART(Checking for PDcurses:)
		AC_ARG_WITH(pdcurses,
		[  --with-pdcurses[=DIR]      Include PDcurses support. DIR is the PDcurses base
		                          install directory,
		                          defaults to /cygdrive/d/pdc25_vc_w32.],
		[
		  if test "$withval" = "yes"; then
		    withval=/cygdrive/d/pdc25_vc_w32
		  fi

		  if test "$withval" != "no"; then

			CURSES_LIB_PATH="-L$withval"
			CURSES_INC_PATH="-I$withval"
			#CURSES_LIB_NAME="-lcurses"
			CURSES_LIB_NAME="$withval/curses.dll"
            HAVE_PDCURSES=1
			AC_DEFINE(HAVE_PDCURSES,1,[ ])
		    AC_MSG_RESULT(yes)
		  else
		    AC_MSG_RESULT(disabled)
			HAVE_PDCURSES=0
		  fi
		],[
			AC_MSG_RESULT(--with-pdcurses not specified)
			HAVE_PDCURSES=0
		])
	fi


## ==================================================================
##         Checks for Java binding (JNI)
## ==================================================================


WITH_JAVA=yes
JAVAINCLUDE=""
JAVAPACKAGE=""

PHP_CONFIGURE_PART(Checking for Java JNI:)

AC_ARG_WITH(java,[  --with-java=path        full path of Java Developers Kit, or no],[
case $withval in
    no) WITH_JAVA=no ;;
    yes) WITH_JAVA=yes ;;
    *) JAVAPACKAGE=$withval
    ;;
esac
])

if test "$WITH_JAVA" != "no" ; then
    WITH_JAVA=no
	AC_MSG_CHECKING(for Java header files for JNI)

	#what about using GCC JNI?:
	#/usr/lib/gcc-lib/i386-redhat-linux/2.96/include/jni.h
	#/usr/lib/gcc-lib/i386-redhat-linux/3.0.2/include/jni.h

	#so here we go the "manual" way - it will not actually test if jni.h is usable,

	dirs="$prefix /usr/local/src/j2sdk1.3.1 /usr/lib/java /usr/java        \
		/usr/java/jdk1.4 /usr/lib/jdk1.4 /opt/java1.4 /usr/lpp/java/J1.4       \
		/usr/java/jdk1.4 /usr/lib/jdk1.4 /usr/jdk14 /jdk1.4 /usr/java/jdk1.3   \
		/usr/include/java /usr/local/java /usr/local/include/kaffe             \
		/usr/include/kaffe /usr/lib/jdk1.3 /opt/java1.3 /usr/lpp/java/J1.3     \
		/usr/java/jdk1.2 /usr/lib/jdk1.2.2 /usr/lib/jdk1.2.1 /usr/jdk122       \
		/usr/lib/jdk122 /usr/lib/jdk1.2.1 /opt/java1.2 /usr/lpp/java/J1.2      \
		/usr/lib/jdk1.1.8 /usr/jdk118 /usr/lib/jdk118 /usr/lpp/java/J1.1       \
		/opt/java1.1 /usr /opt/local /jdk1.3 /jdk1.2.3 /jdk1.2.2 /jdk1.2.1     \
		/System/Library/Frameworks/JavaVM.framework/Headers                    \
		/usr/jdk_base/include"

        if test "$JAVAPACKAGE" != ""; then
            dirs="$JAVAPACKAGE $dirs"
		fi
        # now try to find jni.h
        for i in $dirs ; do
			if test -r "$i/jni.h"; then
                JAVAINCLUDE="$i"
                #WITH_JAVA=yes
				break
            elif test -r "$i/include/jni.h"; then
				JAVAINCLUDE="$i/include"
                #WITH_JAVA=yes
                break
            fi
        done



    # now try with an include path
    if test "$JAVAINCLUDE" != ""; then
        OCPPFLAGS="$CPPFLAGS"
        CPPFLAGS="-I$JAVAINCLUDE $OCPPFLAGS"
        AC_TRY_CPP([#include <jni.h>], [
                WITH_JAVA=yes
                JAVAINCLUDE="-I$JAVAINCLUDE"
        ],)
        CPPFLAGS="$OCPPFLAGS"
    fi

    # if the above didn't work probably jni_md.h is missing
    if test "WITH_JAVA" != "yes" ; then
        if test "$JAVAINCLUDE" != ""; then
            subdirs="$JAVAINCLUDE $JAVAINCLUDE/$MACHDEP $JAVAINCLUDE/$ac_md_system $JAVAINCLUDE/solaris $JAVAINCLUDE/genunix $JAVAINCLUDE/alpha $JAVAINCLUDE/win32 $JAVAINCLUDE/mvs"
            for i in $subdirs ; do
                if test -r $i/jni_md.h; then
                    JAVAINCLUDE="-I$JAVAINCLUDE -I$i"
                    WITH_JAVA=yes
                    break
                fi
            done
        fi
    fi

	if test "$JAVAINCLUDE" = ""; then
		WITH_JAVA=no
    fi

    if test "$WITH_JAVA" = "no"; then
        AC_MSG_RESULT(not found)
    else
		GENERATED_FILES="$GENERATED_FILES bind/java/Makefile"
        AC_MSG_RESULT(yes) #($JAVAINCLUDE))
        AC_SUBST(JAVAINCLUDE)
    fi
else
	AC_MSG_RESULT(Disabled)
fi

## ==================================================================
##         Checks for libraries expected in standard locations
## ==================================================================


PHP_CONFIGURE_PART(Checking for standard libraries:)

		case "$host" in
		*-*-cygwin | *-*-cygwin* | *-*-mingw* | *-*-pw32* )
				AC_MSG_CHECKING(libdl)
				AC_MSG_RESULT(Cygwin DLL contains emulation of libdl functions.)
		    ;;
		*)

			# FIXME: Replace `main' with a function in `-ldl' - but don't forget to
			#clear AC cache for next test!
			AC_CHECK_LIB([dl], [main])

			if test "$ac_cv_lib_dl_main" != "yes"; then
				old_LDFLAGS="$LDFLAGS"
				#/sw/lib/libdl.a
				#/sw/lib/libdl.dylib
				LDFLAGS="$LDFLAGS -L/sw/lib"
				AC_CHECK_LIB([dl], [dlopen])
				if test "$ac_cv_lib_dl_dlopen" != "yes"; then
					AC_MSG_ERROR(No dl lib found - please install it. Stop.)
				else
					AC_DEFINE(HAVE_LIB_DL)
				fi
				LDFLAGS="$old_LDFLAGS"
		    fi
		    ;;
		esac


# FIXME: Replace `main' with a function in `-lc':
AC_CHECK_LIB([c], [main])


#unit test sw for C code, used in tools/test/db
AC_CHECK_LIB([check], [suite_create])
if test "$ac_cv_lib_check_suite_create" = "yes" ; then
	HAS_CHECK=1
fi

## ==================================================================
##                       Checks for header files
## ==================================================================

PHP_CONFIGURE_PART(Checking for header files:)

if test "$AUBIT_SOURCE" = "1" ; then
	#AC_STDC_HEADERS
	AC_HEADER_STDC
	AC_CHECK_HEADERS([alloca.h errno.h locale.h malloc.h memory.h netdb.h netinet/in.h stddef.h stdlib.h string.h strings.h sys/socket.h sys/time.h unistd.h share.h])
	#AC_HAVE_HEADERS(string.h fcntl.h sys/file.h sys/param.h)

   	AC_CHECK_HEADERS([search.h])
	if test `eval echo '${'$as_ac_Header'}'` != yes; then
	    #FIXME: stop if no search.h
		#a simple fix is to get a copy of search.h from the Darwin CVS tree's
		#libedit pkg, as follows:
		#cvs -d :pserver:(username)@anoncvs.opensource.apple.com:/cvs/Darwin login
		#CVS password: (password)
		#cvs -d :pserver:blakers@anoncvs.opensource.apple.com:/cvs/Darwin checkout libedit
		#cp /usr/ports/libedit/libedit/search.h /usr/include/search.h

   		AC_MSG_WARN(Using Aubit provided search.h)

    fi

   	AC_CHECK_HEADERS([getopt.h])
	if test `eval echo '${'$as_ac_Header'}'` != yes; then
		AC_MSG_WARN(Using Aubit provided getopt.h)
    fi


	AC_CHECK_HEADERS([dlfcn.h])

	if test `eval echo '${'$as_ac_Header'}'` != yes; then

		#libdl: Aubit loads plugins using the dlopen() interface (except on HP-UX).
		#This is not the OS X way, but Apple has supplied the dlcompat library to
		#simulate this interface. This library and its header file dlfcn.h are
		#required for Aubit to compile.

		#Clear cached value:
		unset ac_cv_header_dlfcn_h

        old_CPPFLAGS="$CPPFLAGS"
		#old_CLFAGS="$CFLAGS"

		case $host in
			*-apple-darwin*)
				#only on Darwin:
				TMP_IFLAGS="-I/sw/include"
                RE_CHECK=1
				;;
			*)
		        ;;
		esac

        if test "$RE_CHECK" = "1"; then
			CPPFLAGS="$CPPFLAGS $TMP_IFLAGS"
			AC_CHECK_HEADERS([dlfcn.h])
        fi

		TMP=`eval echo '${'$as_ac_Header'}'`
		#if test `eval echo '${'$as_ac_Header'}'` != "yes"; then
        if test "$TMP" != "yes"; then
			if test "$GCC_MINGW" != "yes"; then
				AC_MSG_ERROR(No dlfcn.h found, please install dl library. Stop.)
            fi
		else

			CFLAGS="$CFLAGS $TMP_IFLAGS"
        fi

		CPPFLAGS="$old_CPPFLAGS"
    fi
fi

## ==================================================================
##      Checks for typedefs, structures, and compiler characteristics
## ==================================================================

PHP_CONFIGURE_PART(Checking for compiler characteristics:)

AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

AC_CHECK_SIZEOF(long, 8)
AC_CHECK_SIZEOF(int, 4)


## ==================================================================
##                   Checks for library functions
## ==================================================================

PHP_CONFIGURE_PART(Checking for library functions:)
if test "$AUBIT_SOURCE" = "1" ; then
	AC_FUNC_FORK
	AC_FUNC_MALLOC
	AC_FUNC_MEMCMP
	AC_TYPE_SIGNAL
	AC_FUNC_VPRINTF
	AC_CHECK_FUNCS([floor gethostbyname inet_ntoa memset pow putenv re_comp regcomp select setlocale strcasecmp strchr strdup strncasecmp strrchr strstr strtol])

    #all used in lib/libaubit4gl.so:
    #On Solaris, all this are in -lsocket
	AC_CHECK_FUNCS([socket recv accept bind setsockopt getservbyname listen])
    #So if any of abowe is not found, we should check something like this:
 	#AC_CHECK_LIB([socket], [socket recv accept bind setsockopt getservbyname listen])


	#4glc (mod.c)
	#AC_CHECK_FUNC(setenv,AC_MSG_RESULT(Yes),AC_MSG_ERROR(Cannot compile Aubit without 'setenv'. Stop.))
    #AC_CHECK_FUNC(setenv,,AC_MSG_ERROR(Cannot compile Aubit without 'setenv'. Stop.))
	AC_CHECK_FUNCS([setenv])

	#Check if we have it in libc:
	AC_CHECK_FUNC(getopt_long,GETOPT_LONG=yes,AC_CHECK_LIB(iberty, getopt_long))
    if test "$GETOPT_LONG" != "yes"; then
		if test "$ac_cv_lib_iberty_getopt_long" = "yes"; then
            #On Solaris systems, you will probably have to install the GNU "libiberty"
			#library (-liberty) which provides getopt_long for Solaris; get it at
			#	http://sunfreeware.com (look for the package "libiberty.so" in
			#the list of freeware) and install it into /usr/local/lib.
			GETOPT_LONG=iberty
			AC_MSG_RESULT(using iberty getopt_long)
            #echo "LD_LIBRARY_PATH = $LD_LIBRARY_PATH xx $LIBPATH"
        else
			GETOPT_LONG=no
			AC_MSG_RESULT(using Aubit included getopt sources)
        fi
    fi
fi

## ==================================================================
##                   Checks for Cygwin specifics
## ==================================================================

case "$host" in
*-*-cygwin | *-*-cygwin* | *-*-mingw* | *-*-pw32* )

	PHP_CONFIGURE_PART(Checking for Cygwin specific options:)

	#<example form hello.x>
	# ----------------------------------------------------------------------
	# Win32 objects need to tell the header whether they will be linking
	# with a dll or static archive in order that everything is imported
	# to the object in the same way that it was exported from the
	# archive (extern for static, __declspec(dllimport) for dlls)
	# ----------------------------------------------------------------------


	LIBHELLO_DLL_IMPORT=
	LIBGREET_DLL_IMPORT=


	if test X"$enable_shared" = Xyes; then
		LIBHELLO_DLL_IMPORT=-DLIBHELLO_DLL_IMPORT
		LIBGREET_DLL_IMPORT=-DLIBGREET_DLL_IMPORT
		dnl    AC_TRY_LINK_FUNC([libhello_is_dll],
		dnl                     [LIBHELLO_DLL_IMPORT=-DLIBHELLO_DLL_IMPORT])
	fi

	AC_SUBST(LIBHELLO_DLL_IMPORT)
	AC_SUBST(LIBGREET_DLL_IMPORT)
	#</example form hello.x>

	#cygcheck can be used instead of ldd that is missing on CygWin:
	AC_PATH_PROG(CYGCHECK, cygcheck, no)

   	#this macros are in aclocal.m4 - run aclocal to create it :

	AC_CYGWIN
	AC_MINGW32
	AC_OBJEXT
	AC_EXEEXT

	_LT_AC_LOCK                         #checking for dlfcn.h... yes
	AC_LIBTOOL_DLOPEN_SELF              #checking for BSD-compatible nm... /usr/bin/nm -B
	AC_LIBTOOL_PROG_LD_SHLIBS           #checking command to parse /usr/bin/nm -B output... ok
	AC_LIBTOOL_SYS_DYNAMIC_LINKER       #checking whether the linker () supports shared libraries... yes
	AC_CHECK_LIBM                       #checking dynamic linker characteristics... Win32 ld.exe


	# recent cygwin and mingw systems supply a stub DllMain which the user
	# can override, but on older systems we have to supply one
	#  echo "$as_me:3493: checking if libtool should supply DllMain function" >&5
	#echo $ECHO_N "checking if libtool should supply DllMain function... $ECHO_C" >&6
	#if test "${lt_cv_need_dllmain+set}" = set; then

	#=======================================


	#  case $host/$CC in
	#  *-*-cygwin*/gcc*-mno-cygwin*|*-*-mingw*)
	#    # old mingw systems require "-dll" to link a DLL, while more recent ones
	#    # require "-mdll"
	#    SAVE_CFLAGS="$CFLAGS"
	#    CFLAGS="$CFLAGS -mdll"
	#    echo "$as_me:3540: checking how to link DLLs" >&5
	#echo $ECHO_N "checking how to link DLLs... $ECHO_C" >&6
	#if test "${lt_cv_cc_dll_switch+set}" = set; then
	#
	#...
	#
	#
	#  *-*-cygwin* | *-*-pw32*)
	#    # cygwin systems need to pass --dll to the linker, and not link
	#    # crt.o which will require a WinMain@16 definition.
	#    lt_cv_cc_dll_switch="-Wl,--dll -nostartfiles" ;;
	#  esac
	#  ;;
	#
	#

	#=======================================

	# cygwin* | mingw* | pw32* | os2*)
      # This hack is so that the source file can tell whether it is being
      # built for inclusion in a dll (and should export symbols for example).
    #  lt_cv_prog_cc_pic='-DDLL_EXPORT'
    #  ;;


	;;
esac


## ==================================================================
##            Decide on default SQL driver
## ==================================================================

#if more then one ODBC support was detected, this one will
#override A4GL_SQLTYPE set earlier in this script:
#Options: static nosql iodbc unixodbc esql ifxodbc pgodbc odbc32

if test "$default_odbc" != ""; then
	#User can force SQL driver default with --default-odbc=xxxx switch
	A4GL_SQLTYPE="$default_odbc"
else
	############# ODBC drivers ##############
	if test "$HAVE_PGODBC" = "yes" ; then
		A4GL_SQLTYPE=pgodbc
	fi
	if test "$HAVE_IFXODBC" = "yes" ; then
		A4GL_SQLTYPE=ifxodbc
	fi

	############# ODBC managers #############
	if test "$HAVE_UNIXODBC" = "yes" ; then
		A4GL_SQLTYPE=unixodbc
	fi
	if test "$HAVE_IODBC" = "yes" ; then
		#we want iodbc to have highest priority, when we have a choice,
        #sine we still have problems with unixODBC
		A4GL_SQLTYPE=iodbc
	fi
	if test "$cygwin" = "1"; then
		#if we are on windows, we will ALLWAYS use native odbc32 manager
		A4GL_SQLTYPE=odbc32
	fi

	############# native ####################
	#non existant:
	#if test "$HAVE_PGSQL_LIB" = "yes" ; then
	#	A4GL_SQLTYPE=pgsql
    #fi
	if test "$IFMX_ESQLC" != "no" ; then
		A4GL_SQLTYPE=esql
	fi


fi

## ==================================================================
##            Decide on default RPC driver
## ==================================================================

if test "$default_rpc" != ""; then
	#User can force RPC driver default with --default-rpc=xxxx switch
	A4GL_RPCTYPE="$default_rpc"
else

	if test "$XML_RPC" != "no"; then
		A4GL_RPCTYPE="XMLRPC"
    fi

	if test "$HAVE_RPCLIB" != "0"; then
		A4GL_RPCTYPE="XDR"
    fi
fi

## ==================================================================
##            Decide on default FORM driver
## ==================================================================

if test "$default_form" != ""; then
	#User can force FORM driver default with --default-form=xxxx switch
	A4GL_FORMTYPE="$default_form"
else
	#FIXME: do we want to use XDR forms any more?
	if test "$HAVE_RPCLIB" != "0"; then
		A4GL_FORMTYPE="XDR"
    fi

	A4GL_FORMTYPE="GENERIC"
fi

## ==================================================================
##            Decide on default MENU driver
## ==================================================================

if test "$default_menu" != ""; then
	#User can force MENU driver default with --default-menu=xxxx switch
	A4GL_MENUTYPE="$default_menu"
else
	if test "$HAVE_RPCLIB" != "0"; then
		A4GL_MENUTYPE="XDR"
    fi

	A4GL_MENUTYPE="GENERIC"

fi

## ==================================================================
##            Decide on default EXTended REPorts driver
## ==================================================================

if test "$default_report" != ""; then
	#User can force EXREPORT driver default with --default-report=xxxx switch
	A4GL_PDFTYPE="$default_report"
else
	if test "$PDFBUILD" != "no"; then
		A4GL_PDFTYPE="PDF"
    fi
fi

## ==================================================================
##            Decide on default UI driver
## ==================================================================

if test "$default_ui" != ""; then
	#User can force UI driver default with --default-ui=xxxx switch
	A4GL_UI="$default_ui"
else
	if test "$HAVE_CURSES" = "1" || test "$HAVE_PDCURSES" = "1"; then
		A4GL_UI="TUI"
    fi

	if test "$GTKBUILD" != "no"; then
		A4GL_UI="GTK"
    fi


	if test "$A4GL_UI" = "CONSOLE" ; then
		WARN_UI=1
    fi
fi


## ==================================================================
##            Decide on default COMPILER OUTPUT driver
## ==================================================================

if test "$default_comp" != ""; then
	#User can force COMPILER driver default with --default-comp=xxxx switch
	A4GL_LEXTYPE="$default_comp"
#else
	#if test "$PERLBUILD" != "no"; then
	#	A4GL_LEXTYPE="PERL"
    #fi
fi

## ==================================================================
##            Decide on default HELP MESSAGE driver
## ==================================================================

if test "$default_msg" != ""; then
	#User can force HELP MESSAGE driver default with --default-msg=xxxx switch
	A4GL_MSGTYPE="$default_msg"
#else
	#if test "$PERLBUILD" != "no"; then
	#	A4GL_LEXTYPE="PERL"
    #fi
fi

## ==================================================================
##  Decide on default packer driver for forms,menus and reports (ace)
## ==================================================================

if test "$default_packer" != ""; then
	#User can force PACKER driver default with --default-packer=xxxx switch
	A4GL_PACKER="$default_packer"
else

	#Simple data
	#A4GL_PACKER=PACKED

	A4GL_PACKER=XML

   	if test "$HAVE_RPCLIB" != "0"; then
		A4GL_PACKER=XDR
    fi

	#A4GL_PACKER=PERL

fi

## ==================================================================
##				Decide on targets that are built/istalled/packaged
##              optionaly based on external dependencies. This affects
##              RPM packaging, install/seinstall and build process
## ==================================================================

	if test "$HAVE_CURSES" = "1" || test "$HAVE_PDCURSES" = "1"; then
        RPMFILE_2=$LIB_PREFIX/libUI_TUI$SO_EXT
        PLUGIN_YES="$PLUGIN_YES TUI"
	else
        PLUGIN_NO="$PLUGIN_NO TUI"
		#should be on every Linux
		#INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL "
	fi

	if test "$PDFBUILD" != "no"; then
		RPMFILE_3=$LIB_PREFIX/libEXREPORT_PDF$SO_EXT
        PLUGIN_YES="$PLUGIN_YES PDF"
	else
        PLUGIN_NO="$PLUGIN_NO PDF"
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.pdflib"
	fi

	if test "$IFMX_ESQLC" != "no" ; then
		RPMFILE_4=$LIB_PREFIX/libSQL_esql$SO_EXT
		RPMFILE_26=$LIB_PREFIX/libesqlhelper_funcs$SO_EXT
		PLUGIN_YES="$PLUGIN_YES IFX_NATIVE ESQLC_HELPER"
	else
        PLUGIN_NO="$PLUGIN_NO IFX_NATIVE ESQLC_HELPER"
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.ifx.esql"
	fi

	if test "$HAVE_PGODBC" = "yes" ; then
		RPMFILE_5=$LIB_PREFIX/libSQL_pgodbc$SO_EXT
        PLUGIN_YES="$PLUGIN_YES PG_ODBC"
	else
        PLUGIN_NO="$PLUGIN_NO PG_ODBC"
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.pg.odbc"
	fi

	if test "$HAVE_IFXODBC" = "yes" ; then
		RPMFILE_6=$LIB_PREFIX/libSQL_ifxodbc$SO_EXT
        PLUGIN_YES="$PLUGIN_YES IFXODBC"
	else
        PLUGIN_NO="$PLUGIN_NO IFXODBC"
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.ifx.odbc"
	fi

	if test "$cygwin" != "1" ; then
		if test "$HAVE_IODBC" = "yes" ; then
			RPMFILE_7=$LIB_PREFIX/libSQL_iodbc$SO_EXT
	        PLUGIN_YES="$PLUGIN_YES iODBC"
		else
	        PLUGIN_NO="$PLUGIN_NO iODBC"
			INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.iodbc"
		fi

		if test "$HAVE_UNIXODBC" = "yes" ; then
			RPMFILE_8=$LIB_PREFIX/libSQL_unixodbc$SO_EXT
	        PLUGIN_YES="$PLUGIN_YES unixODBC"
		else
	        PLUGIN_NO="$PLUGIN_NO unixODBC"
			#INSTALL_MISSING_OPTIONAL is set in unixODBC tests, because it can have two variants
		fi
    fi

	if test "$cygwin" = "1"; then
		RPMFILE_9=$LIB_PREFIX/libSQL_odbc32$SO_EXT
        PLUGIN_YES="$PLUGIN_YES ODBC32"
	#else
		#We do not want to confuse people on UNIX saying this will not be built
        #since we can only build it on Windows and we allways build it on Windows
		#PLUGIN_NO="$PLUGIN_NO ODBC32"
	fi

	if test "$XML_RPC" != "no"; then
		RPMFILE_10=$LIB_PREFIX/libRPC_XMLRPC$SO_EXT
        PLUGIN_YES="$PLUGIN_YES XML-RPC"
	else
        PLUGIN_NO="$PLUGIN_NO XML-RPC"
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.xmlrpc"
	fi

	if test "$HAVE_RPCLIB" != "0" && test "$GTKBUILD" != "no"; then
		RPMFILE_11=$LIB_PREFIX/libMENU_XDR$SO_EXT
		PLUGIN_YES="$PLUGIN_YES MENU_XDR"
    else
        PLUGIN_NO="$PLUGIN_NO MENU_XDR"
    fi

	if test "$HAVE_RPCLIB" != "0"; then
		RPMFILE_12=$LIB_PREFIX/libRPC_XDR$SO_EXT
		RPMFILE_13=$LIB_PREFIX/libFORM_XDR$SO_EXT
		RPMFILE_14=$LIB_PREFIX/libXDRPACKER_menu_list$SO_EXT
		RPMFILE_15=$LIB_PREFIX/libXDRPACKER_report$SO_EXT
		RPMFILE_16=$LIB_PREFIX/libXDRPACKER_struct_form$SO_EXT
        RPMFILE_17=$LIB_PREFIX/libPACKER_XDR$SO_EXT

        PLUGIN_YES="$PLUGIN_YES RPC_XDR FORM_XDR XDRPACKER"
	else
        PLUGIN_NO="$PLUGIN_NO RPC_XDR FORM_XDR XDRPACKER"
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.sunrpc"
	fi

	if test "$EXDATA_MPZ" != "no"; then
		RPMFILE_18=$LIB_PREFIX/libEXDTYPE_mpz$SO_EXT
        PLUGIN_YES="$PLUGIN_YES MPZ"
	else
        PLUGIN_NO="$PLUGIN_NO MPZ"
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.mpz"
	fi

	if test "$HAVE_SAPODBC" = "yes" ; then
		RPMFILE_19=$LIB_PREFIX/libSQL_sapodbc$SO_EXT
        PLUGIN_YES="$PLUGIN_YES SAPODBC"
	else
        PLUGIN_NO="$PLUGIN_NO SAPODBC"
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.sapdb.odbc"
	fi

	#this is made by 'make extra'
	if test "$JABBERBUILD" != "no"; then
		RPMFILE_20=$LIB_PREFIX/libIM_JABBER$SO_EXT_LINKABLE
        PLUGIN_YES="$PLUGIN_YES JABBER"
	else
        PLUGIN_NO="$PLUGIN_NO JABBER"
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.iksemel"
	fi


#On CygWin/MinGW:

#make[3]: Entering directory `/usr/src/aubit/aubit4glsrc/lib/extra_libs/file'
#/usr/bin/bash 4glpc -as-dll libfile.4gl -o libA4GL_file.dll
#============ FIRST ERROR: ==============
#libfile.4gl: In function `aclfgl_ferror':
#libfile.4gl:21: invalid type argument of `->'
#libfile.4gl: In function `aclfgl_popen':
#libfile.4gl:34: warning: assignment makes integer from pointer without a cast
#libfile.4gl: In function `aclfgl_fopen':
#libfile.4gl:54: warning: assignment makes integer from pointer without a cast
#libfile.4gl: In function `aclfgl_ftell':
#libfile.4gl:76: warning: passing arg 1 of `ftell' makes pointer from integer without a cast
#libfile.4gl: In function `aclfgl_fseek':
#libfile.4gl:96: warning: passing arg 1 of `fseek' makes pointer from integer without a cast
#========================================
#See file  libA4GL_file.dll.err
#Error compiling... check  libA4GL_file.dll.err

    if test "$GCC_MINGW" != "yes" -a "$cygwin" != "1"; then
		RPMFILE_21=$LIB_PREFIX/libA4GL_file$SO_EXT
    else
        #we must set it to something, because of InnoSetup, and InnoSetup will
        #eliminate dupicates automatically:
		#RPMFILE_21=$LIB_PREFIX/libaubit4gl$SO_EXT
		RPMFILE_21=$IS_SOURCE/lib/libaubit4gl$SO_EXT
	fi




	RPMFILE_22=$LIB_PREFIX/libA4GL_string$SO_EXT
	RPMFILE_23=$LIB_PREFIX/libA4GL_HTML$SO_EXT_LINKABLE
	PLUGIN_YES="$PLUGIN_YES FILE STRING HTML"

    #temp disabled:
    #if test "$HAVE_PGSQL_LIB" = "yes"; then
	#	RPMFILE_24=$LIB_PREFIX/libSQL_pg$SO_EXT
    #    PLUGIN_YES="$PLUGIN_YES PG_NATIVE"
	#else
	#	PLUGIN_NO="$PLUGIN_NO PG_NATIVE"
	#	INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.pg.esql"
	#fi

	#GTK plug-in may need to recompile assist.4gl, so it may need to have 4glc,
    #so it needs to be AFTER all other plug-ins needed by 4glc, like SQL plug-ins:
	if test "$GTKBUILD" != "no"; then
		RPMFILE_25=$LIB_PREFIX/libUI_GTK$SO_EXT
		RMPFILE_1=$LIB_PREFIX/libMENU_GENERIC${SO_EXT}
		PLUGIN_YES="$PLUGIN_YES GTK MENU_GENERIC"
	else
        PLUGIN_NO="$PLUGIN_NO GTK MENU_GENERIC"
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.gtk"
	fi

	#RPMFILE_27=$LIB_PREFIX/
	#RPMFILE_28=$LIB_PREFIX/
	#RPMFILE_29=$LIB_PREFIX/
	#RPMFILE_30=$LIB_PREFIX/

## ==================================================================
##           Additional auto-install targets:
## ==================================================================


	if test "$DOTTOOL" = "no"; then
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.dot"
    fi

	if test "$DOXYGEN" = "no"; then
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.doxygen"
    fi

	if test "$HAS_CHECK" != "1"; then
		INSTALL_MISSING_OPTIONAL="$INSTALL_MISSING_OPTIONAL install.libcheck"
    fi



## ==================================================================
##           Translate Autoconf internals into our replace tags:
## ==================================================================



if test "$lt_cv_prog_cc_pic_works" = "yes"; then
	#WARNING: this will overwrite PIC settings from the beginning of this file
    #if this works OK, remove manually set ones there!
	#lt_cv_prog_cc_pic=' -fno-common'
	PIC="$lt_cv_prog_cc_pic"
	LDFLAGS_SHARED="$PIC -shared"
    #echo "LDFLAGS_SHARED set to $LDFLAGS_SHARED"
fi


## ==================================================================
##           Define which files we will substitute @xxx@ in
## ==================================================================


#GENERATED_FILES="$GENERATED_FILES Makefile pdflib-config pdflib/Makefile test/Makefile clients/Makefile util/Makefile bind/c/Makefile"

#AC_OUTPUT([$GENERATED_FILES],[
#    chmod +x pdflib-config
#])



if test "$AUBIT_SOURCE" = "1" ; then

	AC_CONFIG_FILES([Makefile
                etc/aubitrc
                etc/aubit-rpm.spec
                etc/aubit-InnoSetup.iss
                incl/Makefile-common
				common/dataio/Makefile
				compilers/4glc/Makefile
                compilers/4glc/rules/Makefile
                compilers/fcompile/Makefile
                compilers/helpcompile/Makefile
                compilers/menus/Makefile
                compilers/ace/Makefile
                compilers/xgen/Makefile
                lib/libaubit4gl/Makefile
                lib/libform/form_xdr/Makefile
                lib/libform/noform/Makefile
                lib/libform/form_generic/Makefile
                lib/libmenu/menu_xdr/Makefile
                lib/libmenu/menu_nomenu/Makefile
                lib/libmenu/menu_generic/Makefile
                lib/libmsg/msg_native/Makefile
                lib/liblex/lex_c/Makefile
                lib/liblex/lex_esqlc/Makefile
                lib/liblex/lex_perl/Makefile
				lib/libpdf/Makefile
                lib/libui/ui_console/Makefile
                lib/libui/ui_curses/Makefile
                lib/libui/ui_gtk/Makefile
                lib/resource/Makefile
                lib/libsql/nosql/Makefile
                lib/libsql/odbc/Makefile
                lib/libsql/esqlc/Makefile
                lib/libsql/postgresql/Makefile
                lib/libsql/sapdb/Makefile
                lib/librpc/no_rpc/Makefile
				lib/librpc/sun_rpc/Makefile
                lib/librpc/xml_rpc/Makefile
				lib/extra_libs/file/Makefile
				lib/extra_libs/string/Makefile
				lib/libpacker/packed/Makefile
				lib/libpacker/perl/Makefile
				lib/libpacker/xdr/Makefile
				lib/libpacker/xml/Makefile
   				lib/libexdata/Makefile
				lib/swig/domake
				lib/Makefile
                tools/adbaccess/Makefile
                tools/loadmap/Makefile
                tools/adbload/Makefile
                tools/html/Makefile
                tools/ide/Makefile
                tools/4glunit/Makefile
                tools/jabber/Makefile
                tools/odbctest/Makefile
                tools/test/gui/Makefile
                tools/test/regression/Makefile
                tools/test/lang/Makefile
                tools/test/db/Makefile
                tools/test/db/informix/Makefile
                tools/test/db/postgresql/Makefile
                tools/test/Makefile
                bin/aubitbuild.sh
				docs/doxy/Doxyfile])

else

	AC_CONFIG_FILES([
                etc/aubitrc-bin
                ])
fi

PHP_CONFIGURE_PART(Creating files:)
AC_OUTPUT


if test "$AUBIT_SOURCE" = "1" ; then
	if test "$INFORMIXDIR" != "" ; then
		echo "Running configure for FglDoc..."
		cd tools/fgldoc; configure; cd -
    fi
fi


## ==================================================================
##                Warnings and exit messages
## ==================================================================

if test "$WARN_LEX" = "1"; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| Will use pre-compiled parser files from tools/no_yacc              |
| Use 'make refresh.noyacc' on source tree with yacc installed.      |
| You will need lex if you'd want to regenerate the Aubit parsers.   |
X
fi
TMP=`echo $PATH | grep :/lib:`
if test "$GTKBUILD" = "yes" && test "$cygwin" = "1" && test "$TMP" = ""; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| Add /lib to your PATH - GTK+ libraries where found there, and you  |
| are on Windows - Windows native library loader searches PATH to    |
| to find libraries, but /lib is not in PATH on CygWin by default!   |
X
fi
if test "$WARN_YACC" = "1"; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| Will use pre-compiled parser files from tools/no_yacc. Use         |
| 'make refresh.noyacc' on source tree with yacc installed.You will  |
| need Bison 1.875 if you'd want to regenerate the Aubit parsers.    |
X
fi
#Don't war about missing librpc/rpcgen any more, since we now have libpacker:
#if test "$WARN_RPCGEN" = "1"; then
#cat<<X
#+--------------------------------------------------------------------+
#|                        *** WARNING ***                             |
#| "rpcgen" not found. Will use pre-compiled RPCgen-erated files from |
#| tools/cygwin/                                                      |
#| Use 'make refresh.norpcgen' on source tree with rpcgen installed.  |
#X
#fi
#if test "$WARN_RPCGEN" = "2"; then
#cat<<X
#+--------------------------------------------------------------------+
#|                        *** WARNING ***                             |
#| "rpcgen" not found. Will use pre-compiled RPCgen-erated files from |
#| CygWin port. ---NOT SURE THIS WILL WORK---                         |
#X
#fi
#if test "$WARN_RPCLIB" = "1"; then
#cat<<X
#+--------------------------------------------------------------------+
#|                        *** WARNING ***                             |
#| 'rpclib' not found. You will not be able to compile or open form   |
#| and menu files or use Sun RPC functionality of Aubit 4gl compiler. |
#| Consider installing Sun RPC. Will use header files from            |
#| tools/no_rpc/. Use 'make refresh.norpclib' on system with rpclib   |
#X
#fi
if test "$WARN_UI" = "1"; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| No curses or GTK detected - your only screen UI will be CONSOLE    |
| IN CONSOLE MODE YOU WILL NOT BE ABLE TO USE FORMS - ONLY DISPLAY   |
| ERROR MESSAGE MENU & PROMPT WILL WORK! Considder installing        |
| 'curses' libraries                                                 |
X
fi
if test "$INFORMIX_WARNING" = "1"; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| You asked for Informix ESQL/C support, but don't have              |
| \\\$INFORMIXDIR environment value set up. Configuring and          |
| compiling Informix support is impossible and has been turned off.  |
| Please try again after setting up your environment.                |
X
fi
if test "$INFORMIX_WARNING" = "2"; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| You specified Informix base install directory that is different    |
| than your \\\$INFORMIXDIR environment variable. You'd better know  |
| exactly what you are doing.                                        |
X
fi
if test "$SAPDB_WARNING" = "1"; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| You asked for SAP DB ESQL/C support, but don't have \\\$SAPDBROOT  |
| environment value set up. Configuring and compiling Sap DB         |
| support is impossible and has been turned off. Please              |
| try again after setting up your environment.                       |
X
fi
if test "$SAPDB_WARNING" = "2"; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| You specified SAP DB base install directory that is different      |
| than your \\\$SAPDBROOT environment variable. You'd better know    |
| exactly what you are doing.                                        |
X
fi
if test "$INFORMIXODBC_WARNING" = "1"; then
cat<<X
+--------------------------------------------------------------------+
|                        *** NOTE ***                                |
| Configuration files used by Informix ODBC driver:                  |
| \$INFORMIXDIR/etc/odbc.ini odbcinst.ini setup.odbc                  |
X
fi
if test "$MISSING_PERLMODS" != ""; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| One or more required Perl modules where not detected. If this      |
| is connected to the Internet, and you have CPAN Perl module        |
| installed, you should be able to install them automaticall by using|
| command 'make missing.perlmods'. Otherwise, please install this    |
| Perl modules manually: $MISSING_PERLMODS
X
fi
if test "$A4GL_SQLTYPE" = "nosql"; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| No SQL connection options are available. Abut compiler will be     |
| with only dummy NOSQL library - you will not be able to connect to |
| any databases ! Please install at least one supported database     |
| connectivity library, and re-run configure                         |
X
fi
if test "$WARN_LD_LIBRARY_PATH" != ""; then
cat<<X
+--------------------------------------------------------------------+
|                        *** WARNING ***                             |
| You have specified one or more --with-xxxx=<path> switches to      |
| 'configure' script, specifiying package installed in non-standard  |
| <path> In most cases, you will have to add this path to your PATH  |
| and/or LD_LIBRARY_PATH and/or ld.so.conf in your run-time          |
| environment, for Aubit compilers and compiler programs to be able  |
| to find nedded programs and/or libraries that belong to this way   |
| specified package in non-standard place. We will try to do this    |
| automatically for you:                                             |
X
if test "$enable_ac_debug" = "yes" ; then
cat<<X
|                                                                    |
| (DEBUG) Reason for LD_LIBRARY_PATH warning:                        |
| "$WARN_LD_LIBRARY_REASON"
|                                                                    |
| (DEBUG) configure invoked with flags:                              |
| CONFIGURE_COMMAND="$CONFIGURE_COMMAND"
|                                                                    |
| (DEBUG) LD_LIBRARY_PATH to add:                                    |
| ADD_LD_LIBRARY_PATH=$ADD_LD_LIBRARY_PATH
|                                                                    |
X
fi

	if test "$ADD_LD_LIBRARY_PATH" != ""; then
		if test "$MAKE" != "no" ; then
			#--silent
			$MAKE --silent --no-print-directory ldconfig
        else
            echo "Ooops! No 'make' installed, you will have to do it manually!"
        fi
    else
		echo "ERROR: ADD_LD_LIBRATY_PATH is empty."
    fi

fi
if test "$PLUGIN_NO" != ""; then
cat<<X
+--------------------------------------------------------------------+
|                        ***   NOTE  ***                             |
| One or more optional modules will not be built, because required   |
| libraries or programs where not detected.                          |
X
if test "$WGET" != "no" && test "$RPM" != "no" && (test "$REDHAT_VER" = "8.0" || test "$REDHAT_VER" = "7.3") ; then
cat<<X
| If this computer is connected to the Internet,                     |
|  you should be able to install all of them automaticall by using   |
|  command 'make missing.optional'.                                  |
|                                                                    |
| make targets to install this options are:                          |
| $INSTALL_MISSING_OPTIONAL
|                                                                    |
| You can install individual options as spercified in output of      |
| 'make help.optional' command. Otherwise:                           |
|                                                                    |
X
fi
cat<<X
| Please install this options manually, if you wish to use           |
| this Aubit compiler extended functionality:                        |
|                                                                    |
| $PLUGIN_NO
X
fi
if test "$enable_ac_debug" = "yes" ; then
cat<<X
+--------------------------------------------------------------------+
|                     ***  DEBUG NOTE   ***                          |
|                                                                    |
| Aubit plug-ins to build:                                           |
| $PLUGIN_YES
|                                                                    |
| Aubit plug-ins the will not be built:                              |
| $PLUGIN_NO
|                                                                    |
+--------------------------------------------------------------------+
X
fi
cat<<X
+--------------------------------------------------------------------+
| License:                                                           |
| This software is subject to the Aubit License, available in this   |
| distribution in the file LICENSE.  By continuing this installation |
| process, you are bound by the terms of this license agreement.     |
| If you do not agree with the terms of this license, you must abort |
| the installation process at this point.                            |
+--------------------------------------------------------------------+
X
if test "$AUBIT_SOURCE" = "1" ; then
cat<<X
|                          *** NOTE ***                              |
|            Aubit 4gl compiler source code is now configured.       |
|                    Execute 'make' to compile it.                   |
+--------------------------------------------------------------------+
X
else
cat<<X
|                          *** NOTE ***                              |
|        Aubit 4gl compiler binary disrtibution now configured.      |
|                Execute 'make install' to install it.               |
+--------------------------------------------------------------------+
X

fi

AC_MSG_RESULT([])
AC_MSG_RESULT([Thank you for using Aubit 4gl compiler.])
AC_MSG_RESULT([              $AUBIT_PUBLISHER])
AC_MSG_RESULT([])


#------------------------------ EOF --------------------------------

