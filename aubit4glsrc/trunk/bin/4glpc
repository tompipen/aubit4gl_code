#!/bin/bash
# --norc --noprofile
#There are several problems with SH on CygWin - not sure how to do this to be compatible
#with users that don't have bash on there *NIX platforms ....?
#!/bin/sh
# +----------------------------------------------------------------------+
# | Aubit 4gl Language Compiler Version $.0                              |
# +----------------------------------------------------------------------+
# | Copyright (c) 2000-1 Aubit Development Team (See Credits file)       |
# +----------------------------------------------------------------------+
# | This program is free software; you can redistribute it and/or modify |
# | it under the terms of one of the following licenses:                 |
# |                                                                      |
# |  A) the GNU General Public License as published by the Free Software |
# |     Foundation; either version 2 of the License, or (at your option) |
# |     any later version.                                               |
# |                                                                      |
# |  B) the Aubit License as published by the Aubit Development Team and |
# |     included in the distribution in the file: LICENSE                |
# |                                                                      |
# | This program is distributed in the hope that it will be useful,      |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of       |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        |
# | GNU General Public License for more details.                         |
# |                                                                      |
# | You should have received a copy of both licenses referred to here.   |
# | If you did not, or have any questions about Aubit licensing, please  |
# | contact afalout@ihug.co.nz                                           |
# +----------------------------------------------------------------------+

#
# $Id: 4glpc,v 1.80 2002-07-07 04:28:05 afalout Exp $
#

########################################################################
#this is main Aubit 4gl compiler .4gl files compiler script
#You should not need to invoke actual compiler(s) (4glc, fcompile...) directly
########################################################################

    ERRCHAR=^\|
	GOBACKLINES=10
	GOAFTERLINES=2
    HEAD=head
    #HEAD=head -n 20
    SHOWERRCODE=1
    FGLCEXEC=4glc
	OVERWRITE_CONFIG=0
#	USE_CONFIGURE=1
	USE_SHARED="Yes"


if [ "$A4GLDEBUG" = "yes" ]
then
	A4GLVERBOSE="yes"
fi

#############
#this internal variable points to default location of Aubit config files
#Default=/etc/opt/aubit4gl
AUBITETC=/etc/opt/aubit4gl

#FIXME:
#uppercase 0, passed to 4glpc as "4gpc -O ..." is causing on CygWin:
#[: --help: unknown operand
#[: --help-options: unknown operand
#...etc...
#...but NOT on UNIX: Why?????

if [ $# -lt 1 -o "$1" = "--help" ]
then
    echo
	echo Aubit 4gl main compiler script: $0
    echo
    echo Usage:
    echo '  4glpc sourcefile.type [...] [options] executablename.4ae'
    echo '  4glpc sourcefile.4gl -c -o objectname.ao'
    echo '  4glpc sourcefile.4gl -o executablename.4ae'
	echo
    echo ' For details, try: '
    echo ' 4glpc --help-options	- for command line options'
    echo ' 4glpc --help-env	- for environment variables recognised'
	echo ' 4glpc --help-types	- for file types'
    echo ' 4glpc --help-examples	- for examples'
    echo
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code 6"
    fi
	exit 6
fi

if [ $# -lt 1 -o "$1" = "--help-options" ]
then
    echo
	echo Aubit 4gl main compiler script: $0
    echo
	echo Options:
    echo '  -o'
    echo '  -c : falg to C compiler'
	echo '  -shared/static ($USE_SHARED=Yes/no) compile with shared libraries'
    echo '  -echo  ($DOIT=echo) display CC command only, do not execute'
    echo '              this inhibits C compiler only, not the 4gl compiler'
    echo '  -debug  ($INCLLINES=Yes) include extra debuging code'
    echo '  -map/nomap ($MAP4GL=Yes) generate additional map file code'
    echo '  -maponly'
    echo '  -verbose ($A4GLVERBOSE=yes) show additional info while compiling'
    echo '  -noerrcode () do not show eeror code on compile errors'
    echo '  -as-ddl'
    echo '  -i ignore errors and continue'
	echo '  -jabber link executable with Jabber libraries'
	echo
    echo All options unknown to Aubit compiler will be passed to C compiler
    echo Please see Aubit 4gl manual for more information.
    echo
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code 6"
    fi
	exit 6
fi

if [ $# -lt 1 -o "$1" = "--help-env" ]
then
#FIXME: find and list all env var's recognised
	echo
	echo Aubit 4gl main compiler script: $0
    echo
	echo Environment variables recognised:
    echo
	echo '  -shared/static ($USE_SHARED=Yes/no) compile with shared libraries'
    echo '  -echo  ($DOIT=echo) display CC command only, do not execute'
    echo '              this inhibits C compiler only, not the 4gl compiler'
    echo '  -debug  ($INCLLINES=Yes) include extra debuging code'
    echo '  -map/nomap ($MAP4GL=Yes) generate additional map file code'
    echo '  -maponly'
    echo '  -verbose ($A4GLVERBOSE=yes) show additional info while compiling'
    echo '  -as-ddl'
    echo '  $A4GLRC - full path to file to be used instead of .a4glrc'
	echo
    echo 'Note: 4glc, cc and other compilers invoked by this script will'
    echo '      recognise additional variables that might affect this script'
    echo
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code 6"
    fi
	exit 6
fi


if [ $# -lt 1 -o "$1" = "--help-types" ]
then
    echo
	echo Aubit 4gl main compiler script: $0
    echo
	echo File types:
    echo '	4gl - 4gl source file, compiled to .c and then to .o'
    echo '	per - 4gl form file, compiled to .c and then to .o'
    echo '	msg - 4gl message file, compiled to .iem'
#FIXME: describe this:
	echo '	a   -'
    echo '	o   -'
    echo '	c   -'
    echo '	menu - Aubit 4gl GUI menu source, compiled to'
    echo
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code 6"
    fi
	exit 6
fi

if [ $# -lt 1 -o "$1" = "--help-examples" ]
then
#FIXME: describe this:
	echo Examples:
    echo
	echo '  4glpc sourcefile.4gl -o executablename.4ge'
	echo '  4glpc sourcefile.4gl -c -o objectname.o'
	echo '  4glpc -shared file.4gl -o file.4ge'
    echo '  4glpc -static -echo file.4gl -o file.4ge'
    echo '  4glpc -debug file.4gl -o file.debug'
    echo '  4glpc -map -echo file.4gl'
	echo '  4glpc -gtk file.4gl -o'
    echo
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code 6"
    fi
	exit 6
fi

######################
function run_next {
######################
#get next parameter from command line, and run specified command on it:

		let nextparam=counter+1
		#echo $nextparam
		counter2=0
		#echo $@
		#echo $ALLPARAMS
		for params in $ALLPARAMS #$@
		do
		   	let counter2=counter2+1
			#echo 1 $counter2 2 $nextparam
           	if test "$counter2" = "$nextparam"
            then
                filename=$params
                #echo "Manifest for filename $filename :"
                echo "Running: $DO_AND_EXIT $filename"
                $DO_AND_EXIT $filename
                exit
			fi
        done

        echo "Error: nothing specified after switch"
        exit 2

}


############################
function testswitchfunc {
############################
	ISSWITCH=0

	############
	for a in $@
	############
	do
	   ##########
	   case $a in
	   ##########

	   $TESTSWITCH)     ISSWITCH=1
	   ;;

	  ####
	  esac
	  ####
	####
	done
	####

}


########################
function showerror {
########################

    if [ -f $errfname ]
    then
		if test $SHOWERRCODE = "1"
		then
			ERRLINES=`cat $errfname | grep -c $ERRCHAR`
		    if [ "$ERRLINES" != "0" ]
		    then
				echo "============ FIRST ERROR: =============="
				cat $errfname | grep -B $GOBACKLINES -A $GOAFTERLINES $ERRCHAR
		    else
				echo "============ FIRST ERROR: =============="
				$HEAD $errfname
		    fi
		    echo "========================================"
		fi
	    echo "See file $errfname"
    fi

}


ALLPARAMS=$@

if [ -f ${AUBITETC}/aubitrc ]
then
	A1=${AUBITETC}/aubitrc
	. ${AUBITETC}/aubitrc
fi

#we no longer export all variables, so this is obsolete?:
if [ "$MAKINGAUBIT" = "1" ] #if we are invoked from Aubit compiler makefiles
then
	if [ "$AUBIT_BIN_INSTALL" != "1" ] && [ "$AUBIT_SRC_ROOT" != "" ] #and we are still in Aubit source code tree
    then
		AUBITDIR=$AUBIT_SRC_ROOT
    fi
fi

    #find path to this script:
	PATHTO4GLPC1=`dirname $0`
	PATHTO4GLPC=`dirname $PATHTO4GLPC1` #remove bin/
    #OLD_DIR=`pwd`
	cd $PATHTO4GLPC
    CURRDIR=`pwd`
	cd -


if [ "$AUBITDIR" = "" ]
then
	#if still emty, assume this script is in $AUBITDIR/bin
	export AUBITDIR=$CURRDIR

	if [ -f $AUBITDIR/bin/4glpc ]
    then
		echo "AUBITDIR now set to $AUBITDIR"
        #cd $OLD_DIR
    else
        echo "Error: cannot set AUBITDIR: $AUBITDIR"
		echo PATHTO4GLPC1=$PATHTO4GLPC1
		echo PATHTO4GLPC=$PATHTO4GLPC
    	echo OLD_DIR=$OLD_DIR
		exit 13
    fi
fi


if [ "$AUBITDIR" != "" ]
then
	if [ -f $AUBITDIR/etc/aubitrc ]
	then
		A2=$AUBITDIR/etc/aubitrc
		. $AUBITDIR/etc/aubitrc
	fi
fi
if [ -f ~/.aubit4gl/aubitrc ]
then
	A5=~/.aubit4gl/aubitrc
	. ~/.aubit4gl/aubitrc
fi

if [ -f ./.aubitrc ]
then
	A6=./.aubitrc
	. ./.aubitrc
fi

if [ -f "$A4GL_INIFILE" ] && [ "$A4GL_INIFILE" != "" ]
then
	A7=$A4GL_INIFILE
	. $A4GL_INIFILE
fi

#we no longer export all variables, so this is obsolete?:
if [ "$MAKINGAUBIT" = "1" ]
then
	#if we are invoked from Aubit compiler makefiles
	if [ "$AUBIT_BIN_INSTALL" != "1" ] && [ "$AUBIT_SRC_ROOT" != "" ]
    then
		#and we are still in Aubit source code tree
		AUBITDIR=$AUBIT_SRC_ROOT
    fi
fi

PATH=$AUBITDIR/bin:$PATH

COMPCC=""

if [ "$OLD_INCL" != "0" ] #OLD_INCL is set in MAkefile-common
then
	#if we did not EXPLICITLY turn on new includes, we have to set
    #old ones as default
	CFLAGS="-DOLD_INCL $CFLAGS"
fi


JABBER_LIB_DIR=$AUBITDIR/tools/jabber
JABBER_LIB_NAME=jabber

FGLLIBSDIR="-L$AUBITDIR/lib"

if [ "$CURRDIR" != "$AUBITDIR" ]; then
	FGLLIBSDIR="$FGLLIBSDIR -L$CURRDIR/lib"
fi


if [ -d $AUBITDIR/extralibs ]
then
	FGLLIBSDIR="$FGLLIBSDIR -L$AUBITDIR/extralibs"
fi


if [ "$NCURSES_LIB_DIR"  != "" ]
then
        LIBSDIR="-L$NCURSES_LIB_DIR"
fi

if [ "$NCURSES_INCL_DIR"  != "" ]
then
        LIBSDIR="-L$NCURSES_INCL_DIR"
fi


if [ "$COMPILE_QUIET" != "" ]
then
        output=": "
else
        output="echo"
fi

#restore things from before reading .a4glrc that where in environment:
#see if we are called form Aubit compiler makefiles:
TESTSWITCH=-make-compile
testswitchfunc
if test "$ISSWITCH" = "1"
then
	export MAKE4GLPC="Yes"
fi


LAST=""
INCLDIR="-I$AUBITDIR/incl"

#CC is set via aubitrc config file:
CC="$CC -O2 -g"

#This may help while compiling, but compiled programs will not run
#if it's not in his environmnet. So set your environment!
#WARNING: this _IS_ needed in case you have several different libraries
#with same names in the path, like odbc. This will put path to library we
#are currently compiling for in front, and pick up correct one:

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$AUBITDIR/lib:.:
#$AUBITDIR/extlibs

#ADD_LD_LIBRARY_PATH is defined by 'configure' in aubitrc
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ADD_LD_LIBRARY_PATH

counter=0

############
for a in $@
############
do
   let counter=counter+1
   ##########
   case $a in
   ##########

   -findfunc)
		nm -A --defined-only `find $AUBITDIR/lib -name '*.so'` | grep $2

        #-H = show file names:
		# grep -H "extern int close" /usr/include/*.h

        exit 0
   ;;

   -findlib)
		nm -A --defined-only `find /lib -name '*.so'` | grep $2

        #-H = show file names:
		# grep -H "extern int close" /usr/include/*.h

        exit 0
   ;;


   -dups)
		#list all duplicated files in tree below current location
		ALL=`find . -name "*" -exec basename {} \; | sort | uniq -c | grep -v " 1" `
		CNT=1
		############
		for a in $ALL
		############
		do
			if [ $CNT = 2 ]
			then
				case $a in
				#things to be ignored:
				"CVS")
				;;
				"Root")
				;;
				"Repository")
				;;
				"Makefile")
				;;
				"Makefile.in")
				;;
				"Makefile.old")
				;;
				"bin")
				;;
				"config")
				;;
				"data")
				;;
				"debian")
				;;
				"Entries")
				;;
				"generated")
				;;
				"*.bak")
				;;
				READM*)
				;;
				"rules")
				;;
				* )
					echo -------------------------- $DUP_NUM = $a
					FILE=`find . -name $a`
					for b in $FILE
					do
						if [ ! -d "$b" ]
						then
							ls -al $b
						else
							echo "$b Is directory - skipped"
						fi
					done
				esac
				CNT=1
			else
			    CNT=2
				DUP_NUM=$a
			fi
		done

    ;;

   -manifest)
        DO_AND_EXIT="ldd"
        run_next
   ;;

   -run)
        DO_AND_EXIT="exec"
        run_next
   ;;

   -settings)
        echo "Processed configuration files, in this order:"
		echo
		echo "A1 [/etc/opt/aubit4gl/aubitrc] =$A1"
		echo "A2 [/opt/aubit4gl/etc/aubitrc] =$A2"
		echo "A3 [../etc/aubitrc]            =$A3"
		echo "A4 [etc/aubitrc]               =$A4"
		echo "A5 [~/.aubit4gl/aubitrc]       =$A5"
		echo "A6 [./.aubitrc]                =$A6"
		echo "A7 ['A4GL_INIFILE']           =$A7"
		echo

        echo AUBITDIR = $AUBITDIR

        if [ "$1" = "-settings" ] && [ "$2" = "" ]
        then
			exit 0
        fi

   ;;

   *.a) COMPCC="$COMPCC $a"
   ;;

   *.o) COMPCC="$COMPCC $a"
		EXECNAME="1"
   ;;

	#same as .o, needed to distinguish from I4GL objects in universal makefiles:
	#but I don't know how to do OR here...? Like:
	# *.o) || *.ao)
   *.ao) COMPCC="$COMPCC $a"
		EXECNAME="1"
   ;;

   #this is supposed to be linked collection of compiled library files (.ao)
   *.aox) COMPCC="$COMPCC $a"
		EXECNAME="1"
   ;;



   *.c) COMPCC="$COMPCC $a"
   ;;

   *.per)
		  if [ "$A4GLVERBOSE" = "yes" ]
		  then
            $output Compiling form $a
		  fi

		  fcompile -c $a
		  err_code=$?

          dirn=`dirname $a`
   		  fname=`basename $a .per`
   		  errfname=`basename $a .per`.err;

		  if ! [ -f $fname.c ]
		  then
            if [ -f $errfname ]
            then
				showerror
				#$output "Error compiling $a, see file $errfname"
			else
				if [ -f $dirn/$errfname ]
                then
					errfname=$dirn/$errfname
					showerror
					#$output "Error compiling $a - see file $errfname"
                else
					$output "Error compiling $a - error file NOT created"
                fi
            fi
            if [ "$IGNORE_ERRORS" != "1" ]
            then
				if [ "$A4GLVERBOSE" = "yes" ]
				then
			        echo "Exiting with code $err_code"
			    fi
				exit $err_code
            fi
          else
	        COMPCC="$COMPCC $fname.c"
          fi

   ;;


   *.per-old) fcompile -c $a
          fname=`basename $a .per`
        COMPCC="$COMPCC $fname.c"
   ;;

   *.per-direct) fcompile $a
   ;;



   *.msg)
        fname=`basename $a .msg`
		mkmess $fname
		#COMPCC="$COMPCC $fname.c"
   ;;

   *.menu) mcompile -c $a
          fname=`basename $a .menu`
        COMPCC="$COMPCC $fname.c"
   ;;


   *.4gl)

		  dirn=`dirname $a`
          fname=`basename $a .4gl`
          errfname=`basename $a .4gl`.err;

          fname2="$dirn/$fname"
          fname3="$dirn/$fname.4gl"
		  fname=$fname2

          #if we did not invoked 4gl compile from out of dir where 4gl is,
          #CC will not be able to find it's .h file:
		  if [ "$dirn" != "" ] && [ "$dirn" != "." ]
		  then
			  COMPCC="$COMPCC -I./$dirn"
          fi

          if ! [ -f $fname3 ]
          then
            echo "$fname3 not found"
            exit 10
          fi

          # Create the blank...
          touch $fname.c

          if [ -f "$fname".err ]
          then
                rm "$fname".err
          fi

		  if [ "$A4GLVERBOSE" = "yes" ]
		  then
	          $output "$fname: "
			  $output LD_LIBRARY_PATH=$LD_LIBRARY_PATH, A4GL_SQLTYPE=$A4GL_SQLTYPE
              $output AUBITDIR=$AUBITDIR, PATH=$PATH
              $output "Executing (3) : $FGLCEXEC $a"
          fi

	   echo $FGLCEXEC $a

          err_msg=`"$FGLCEXEC" "$a"`
          err_code=$?
		#echo "err_code = $err_code err_msg=$err_msg"

          if [ "$err_code" != "0" ]
          then
			if [ "$err_code" = "139" ]
	        then
	        	echo "$FGLCEXEC core dump"
				if [ "$A4GLDEBUG" = "yes" ]
				then
					env
                fi
				exit 139
			fi

			if [ -f $errfname ]
            then
				showerror
			else
				if [ -f $dirn/$errfname ]
                then
					errfname=$dirn/$errfname
					showerror
					if [ "$A4GLVERBOSE" = "yes" ]
					then
		            	$output err_msg is: $err_msg
		            fi
                else
					$output "Error compiling $a - error file NOT created"
	            	$output err_msg is: $err_msg
                fi
            fi

			if [ "$A4GLVERBOSE" = "yes" ]
			then
				echo "Exiting with code $err_code"
			fi

			exit $err_code
          fi

		if [ -f $fname.c ]
        then

			if ! [ -s $fname.c ]
    	    then
				#True if file exists and has  a  size  greater  than  zero.
                echo "Created $fname.c is zero size !"

				if [ "$A4GLVERBOSE" = "yes" ]
				then
				  	if [ -f $errfname ]
	    	        then
                        showerror
					else
						if [ -f $dirn/$errfname ]
		                then
							errfname=$dirn/$errfname
							showerror
							#$output "Error compiling $fname.c - see file $errfname"
		                else
							$output "Error compiling $fname.c - error file NOT created"
		                fi
	                fi

					$output err_msg is: $err_msg
	                $output err_code is: $err_code
	                $output Please check file "$fname".err
	                $output 'You can also "export DEBUG=ALL" to get "debug.out" file'
				fi
	            #we don't want to exit with 0 here:
	            err_code=9
				if [ "$A4GLVERBOSE" = "yes" ]
				then
					echo "Exiting with code $err_code"
				fi
				exit $err_code
			fi

		  if [ "$A4GLVERBOSE" = "yes" ]
		  then
            $output $FGLCEXEC "$a" OK, continue...
		  fi

          if [ "$AUTOINDENT" = "Y" ]
          then
                indent $fname.c
          fi

          if [ "$MAP4GL" = "Y" ]
          then
			if [ -x "$AUBITDIR/bin/loadmap" -a "$LOADMAP" != "N" ]
            then
                        $output "Loading map file for $a into database"
                        loadmap $fname.map > /dev/null 2> $fname.map.err
            fi
          fi

			PRETTYC=${PRETTYC:-"indent"}
			if [ "$AUTOINDENT" = "Y" ]
			then
			 	$PRETTYC $fname.c
			fi

			if [ "$LINKIT" = "1" ]
			then
                #we got this .4gl in linking command, we need to make .ao
                #for linking to succedde:
				if [ "$COMSPEC" = "" ]
				then
					EXEC="$DOIT $CC $CFLAGS $fname.c -c -o $fname.ao $INCLDIR 2> $fname.err"
				else
					EXEC="$DOIT $CC $CFLAGS $fname.c -o $fname.ao -c $INCLDIR 2> $fname.err"
				fi

				if [ "$A4GLVERBOSE" = "yes" ]
				then
					$output "executing (1) : $EXEC"
				fi

				eval $EXEC
				err_code=$?

				if [ "$err_code" != "0" ]
				then
                    #linking will fail anyway, we cannot continue:
					showerror
					echo "error compiling $fname.c. STOP."
					exit 17
                fi

				COMPCC="$COMPCC $fname.ao"
            else
				COMPCC="$COMPCC $fname.c"
            fi
        else
            #is this a 0 length file?
			FGLFILESIZE=$(ls -al $fname3 | awk '{print $5}')

			if [ "$FGLFILESIZE" = "0" ]
            then
				if [ "$A4GLVERBOSE" = "yes" ]
	    		then
					echo "$fname3 size is $FGLFILESIZE"
                fi

				#fakeing c file, to get empty object file from c compiler:
				#Simplest way is before the 4glc call in 4glpc, 'touch' the required C
				#file...

				touch $fname.c
				COMPCC="$COMPCC $fname.c"
            else
				$output "Error compiling $a - $fname.c not generated, but no err code from $FGLCEXEC"
				if [ "$A4GLVERBOSE" = "yes" ]
				then
				  	if [ -f $errfname ]
	    	        then
                        showerror
					else
						if [ -f $dirn/$errfname ]
		                then
							errfname=$dirn/$errfname
							showerror
							#$output "Error compiling $fname.c - see file $errfname"
		                else
							$output "Error compiling $fname.c - error file NOT created"
		                fi
	                fi

					$output err_msg is: $err_msg
	                $output err_code is: $err_code
	                $output Please check file "$fname".err
	                $output 'You can also "export DEBUG=ALL" to get "debug.out" file'
				fi
	            #we don't want to exit with 0 here:
	            err_code=9
				if [ "$A4GLVERBOSE" = "yes" ]
				then
					echo "Exiting with code $err_code"
				fi
				exit $err_code
            fi
		fi
   ;;

   -echo) DOIT="echo"
   ;;

   -i) IGNORE_ERRORS="1"
   ;;

   -jabber) USE_JABBER=1
   ;;


   -verbose) 	A4GLVERBOSE="yes"
				SHOWERRCODE=1
   ;;

   -noerrcode)
        SHOWERRCODE=0
   ;;

   -map)
        echo "Setting map file on"
        MAP4GL="Y"
        export MAP4GL
   ;;

   -maponly) 		export MAP4GL="Y"
             		NOCFILE="Y"
   ;;

   -make-compile) 	export MAKE4GLPC="Yes"

   ;;

   -nomap) unset MAP4GL
   ;;

   -debug) export INCLINES=""
           export DEBUG=ALL
		   #DDEBUG="_g"
           COMPCC="$COMPCC -g"
   ;;

   -as-dll)		#creates shared library- .so on UNIX, .dll on Windows
   				COMPCC="$COMPCC -shared"
   ;;

   -shared)
			USE_SHARED="Yes"
   ;;

   -static)
			USE_SHARED="No"

   ;;

   -o) COMPCC="$COMPCC -o "
       ISMAKE=-1
       LINKIT=1

       LAST="2> $fname.err"
       ERRFILE="$fname.err"
       DEFAULTCOMPCC="$COMPCC $fname"
       EXECNAME="-1"


   ;;

   *) if [ "$ISMAKE" = "-1" ]
      then
         EXECNAME="$a"
		 ISMAKE=1
         LAST="2> $a.err"
         ERRFILE="$a.err"
      fi
      COMPCC="$COMPCC $a"
  ;;

  ####
  esac
  ####
####
done
####


if [ "$EXECNAME" = "-1" ]
then
    COMPCC=$DEFAULTCOMPCC
	$output "-o specified without object name, default name is $fname"
	if [ "$ISMAKE" = "-1" ]
    then
         ISMAKE=1
    fi
fi

#-lFORM/MENU/MSG_xxx is here temporary, untill this lib is dlopen() enabled:
#FGLLIBS_COMMON="-laubit4gl -lFORM_$A4GL_FORMTYPE -lMENU_$A4GL_MENUTYPE -lMSG_$A4GL_MSGTYPE"
FGLLIBS_COMMON="-laubit4gl"

if [ "$COMSPEC" = "" ]
then
	FGLLIBS_COMMON="$FGLLIBS_COMMON" # -ldl"
else
	FGLLIBS_COMMON="$FGLLIBS_COMMON -L/lib/w32api -L/usr/local/lib"
fi

#FGLLIBS_COMMON="$FGLLIBS_COMMON -lm  -lRPC_$A4GL_XDRTYPE"
FGLLIBS_STATIC="$FGLLIBS_COMMON -static"
FGLLIBS_SHARED="$FGLLIBS_COMMON"

if [ "$A4GLDEBUG" = "yes" ]
then
	echo ------------------------------------------------------------------
	echo USE_SHARED = $USE_SHARED
	echo FGLLIBS_SHARED = $FGLLIBS_SHARED
	echo FGLLIBS_STATIC = $FGLLIBS_STATIC
	echo ------------------------------------------------------------------
fi

if [ "$USE_SHARED" = "Yes" ]
then
	FGLLIBS="$FGLLIBS_SHARED"
else
	FGLLIBS="$FGLLIBS_STATIC"

	if test "$COMSPEC" = ""; then
		#without -rdynamic:
		#Opps 1 - can't open DLL - /opt/aubit/aubit4glsrc/lib/libSQL_unixodbc.so: undefined symbol: status
		LIBS="$LIBS -rdynamic"
	fi
fi

if test "$USE_JABBER" = "1"
then
	LIBS="$LIBS -L$JABBER_LIB_DIR -l$JABBER_LIB_NAME -liksemel"
	#JabberX link line:
	#MANLINK2= -rdynamic -lnsl -lposix -lcrypt -liksemel
fi

if [ "$NOCFILE" = "Y" ]
then
   if [ "$A4GLVERBOSE" = "yes" ]
   then
	   $output No C files to compile.
   fi
	if [ "$A4GLVERBOSE" = "yes" ]
	then
		echo "Exiting with code 8"
	fi
	exit 8
fi

if [ "$COMPCC" = "" ]
then
   if [ "$A4GLVERBOSE" = "yes" ]
   then
	   $output No C files to compile.
   fi
	if [ "$A4GLVERBOSE" = "yes" ]
	then
		echo "Exiting with code 8"
    fi
	exit 8
fi

if [ "$A4GLDEBUG" = "yes" ]
then
#	echo $GTKGUI
	echo $COMSPEC
	echo $MAKE4GLPC
fi

if [ "$ISMAKE" != "1" ]
then
	if [ "$COMSPEC" = "" ]
	then
		EXEC="$DOIT $CC $CFLAGS $COMPCC $INCLDIR $LAST"
    else
        EXEC="$DOIT $CC $CFLAGS $COMPCC -c $INCLDIR $LAST"
    fi

   if [ "$A4GLVERBOSE" = "yes" ]
   then
        $output "executing (1) : $EXEC"
   fi

   	eval $EXEC
	err_code=$?

	if [ $err_code != 0 ]
	then
		if [ "$LAST" != "" ]
		then
			errfname=`expr "$LAST" : "..\(.*\)"`
			showerror
			$output "Error compiling... check $errfname"
      else
		  $output "Error compiling."
      fi
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code $err_code"
    fi
	exit $err_code
   fi

else
   if [ "$A4GLVERBOSE" = "yes" ]
   then
	   $output "Generating Exec"
	   echo "executing (2) : $DOIT $CC $CFLAGS $COMPCC $INCLDIR $FGLLIBSDIR $FGLLIBS $LIBSDIR $LIBS $GTKLIBS $LAST"

		if [ "$A4GLDEBUG" = "yes" ]; then
		   echo $DOIT
		   echo $CC
		   echo $COMPCC
		   echo $INCLDIR
		   echo $FGLLIBSDIR
		   echo $FGLLIBS
		   echo $LIBSDIR
		   echo $LIBS
		   echo $GTKLIBS
		   echo $LAST

		   echo LD_LIBRARY_PATH=$LD_LIBRARY_PATH
	       echo "PWD is `pwd`"
	    fi
   fi

	eval "$DOIT $CC $COMPCC $INCLDIR $FGLLIBSDIR $FGLLIBS $LIBSDIR $LIBS $GTKLIBS $LAST"
	err_code=$?

	if [ $err_code != 0 ]
	then
		if [ "$LAST" != "" ]
		then
			errfname=`expr "$LAST" : "..\(.*\)"`
			showerror
			echo "Error compiling... check $errfname"

	  else
		  $output "Error compiling."
      fi
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code $err_code"
    fi
	exit $err_code
   fi
fi

if [ "$ERRFILE" != "" -a ! -s "$ERRFILE" ]
then
	if [ -f "$ERRFILE" ]
    then
		rm $ERRFILE
	fi
fi


if [ "$A4GLVERBOSE" = "yes" ]
then
	echo "Exiting with code 0"
fi

exit 0


#---------------------------- EOF ---------------------------------

