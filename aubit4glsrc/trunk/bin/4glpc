#!/bin/bash

#There are several problems with SH on CygWin - not sure how to do this to be compatible
#with users that don't have bash on there *NIX platforms ....?
#!/bin/sh
########################################################################
#this is main Aubit 4gl compiler .4gl files compiler script
#You should not need to invoke actual compiler(s) (4glc, fcompile...) directly
#
# $Id: 4glpc,v 1.25 2001-11-09 08:14:26 afalout Exp $
#
########################################################################

    ERRCHAR=^\|
	GOBACKLINES=10
	GOAFTERLINES=2
    HEAD=head
    #HEAD=head -n 20
    SHOWERRCODE=1
    FGLCEXEC=4glc
#FIXME:
#uppercase 0, passed to 4glpc as "4gpc -O ..." is causing on CygWin:
#[: --help: unknown operand
#[: --help-options: unknown operand
#...etc...
#...but NOT on UNIX: Why?????

if [ $# -lt 1 -o "$1" = "--help" ]
then
    echo
	echo Aubit 4gl main compiler script: $0
    echo
    echo Usage:
    echo '  4glpc sourcefile.type [...] [options] executablename.4ae'
    echo '  4glpc sourcefile.4gl -c -o objectname.ao'
    echo '  4glpc sourcefile.4gl -o executablename.4ae'
	echo
    echo ' For details, try: '
    echo ' 4glpc --help-options	- for command line options'
    echo ' 4glpc --help-env	- for environment variables recognised'
	echo ' 4glpc --help-types	- for file types'
    echo ' 4glpc --help-examples	- for examples'
    echo
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code 6"
    fi
	exit 6
fi

if [ $# -lt 1 -o "$1" = "--help-options" ]
then
    echo
	echo Aubit 4gl main compiler script: $0
    echo
	echo Options:
    echo '  -o'
    echo '  -c : falg to C compiler'
	echo '  -shared/static ($USE_SHARED=Yes/no) compile with shared libraries'
    echo '  -echo  ($DOIT=echo) display CC command only, do not execute'
    echo '              this inhibits C compiler only, not the 4gl compiler'
    echo '  -debug  ($INCLLINES=Yes) include extra debuging code'
    echo '  -map/nomap ($MAP4GL=Yes) generate additional map file code'
    echo '  -maponly'
    echo '  -gtk/nogtk ($GTKGUI=Yes/No) include GTK libraries (default)'
    echo '  -verbose ($A4GLVERBOSE=yes) show additional info while compiling'
    echo '  -noerrcode () do not show eeror code on compile errors'
	echo '  -pdf ($USE_PDF=yes) use PDF report libraries when compiling'
	echo '      (if compiler was compiled with them)'
    echo '  -udbc (ODBC_LIB_NAME="udbc")'
    echo '  -odbc (ODBC_LIB_NAME="iodbc")'
    echo '  -noodbc'
    echo '  -as-ddl'
    echo '  -i ignore errors and continue'
	echo '  -jabber link executable with Jabber libraries'
	echo
    echo All options unknown to Aubit compiler will be passed to C compiler
    echo Please see Aubit 4gl manual for more information.
    echo
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code 6"
    fi
	exit 6
fi

if [ $# -lt 1 -o "$1" = "--help-env" ]
then
#FIXME: find and list all env var's recognised
	echo
	echo Aubit 4gl main compiler script: $0
    echo
	echo Environment variables recognised:
    echo
	echo '  -shared/static ($USE_SHARED=Yes/no) compile with shared libraries'
    echo '  -echo  ($DOIT=echo) display CC command only, do not execute'
    echo '              this inhibits C compiler only, not the 4gl compiler'
    echo '  -debug  ($INCLLINES=Yes) include extra debuging code'
    echo '  -map/nomap ($MAP4GL=Yes) generate additional map file code'
    echo '  -maponly'
    echo '  -gtk/nogtk ($GTKGUI=Yes/No) include GTK libraries (default)'
    echo '  -verbose ($A4GLVERBOSE=yes) show additional info while compiling'
    echo '  -pdf ($USE_PDF=yes) use PDF report libraries when compiling'
	echo '      (if compiler was compiled with them)'
    echo '  -udbc (ODBC_LIB_NAME="udbc")'
    echo '  -odbc (ODBC_LIB_NAME="iodbc")'
    echo '  -as-ddl'
    echo '  $A4GLRC - full path to file to be used instead of .a4glrc'
    echo '  $ODBC_LIB_DIR'
    echo '  $ODBC_LIB_NAME'
	echo
    echo 'Note: 4glc, cc and other compilers invoked by this script will'
    echo '      recognise additional variables that might affect this script'
    echo
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code 6"
    fi
	exit 6
fi


if [ $# -lt 1 -o "$1" = "--help-types" ]
then
    echo
	echo Aubit 4gl main compiler script: $0
    echo
	echo File types:
    echo '	4gl - 4gl source file, compiled to .c and then to .o'
    echo '	per - 4gl form file, compiled to .c and then to .o'
    echo '	msg - 4gl message file, compiled to .iem'
#FIXME: describe this:
	echo '	a   -'
    echo '	o   -'
    echo '	c   -'
    echo '	menu - Aubit 4gl GUI menu source, compiled to'
    echo
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code 6"
    fi
	exit 6
fi

if [ $# -lt 1 -o "$1" = "--help-examples" ]
then
#FIXME: describe this:
	echo Examples:
    echo
	echo '  4glpc sourcefile.4gl -o executablename.4ge'
	echo '  4glpc sourcefile.4gl -c -o objectname.o'
	echo '  4glpc -shared file.4gl -o file.4ge'
    echo '  4glpc -static -echo file.4gl -o file.4ge'
    echo '  4glpc -debug file.4gl -o file.debug'
    echo '  4glpc -map -echo file.4gl'
	echo '  4glpc -gtk file.4gl -o'
    echo
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code 6"
    fi
	exit 6
fi

######################
function run_next {
######################
#get next parameter from command line, and run specified command on it:

		let nextparam=counter+1
		#echo $nextparam
		counter2=0
		#echo $@
		#echo $ALLPARAMS
		for params in $ALLPARAMS #$@
		do
		   	let counter2=counter2+1
			#echo 1 $counter2 2 $nextparam
           	if test "$counter2" = "$nextparam"
            then
                filename=$params
                #echo "Manifest for filename $filename :"
                echo "Running: $DO_AND_EXIT $filename"
                $DO_AND_EXIT $filename
                exit
			fi
        done

        echo "Error: nothing specified after switch"
        exit 2

}


############################
function testswitchfunc {
############################
	ISSWITCH=0

	############
	for a in $@
	############
	do
	   ##########
	   case $a in
	   ##########

	   $TESTSWITCH)     ISSWITCH=1
	   ;;

	  ####
	  esac
	  ####
	####
	done
	####

}


########################
function showerror {
########################

    if [ -f $errfname ]
    then
		if test $SHOWERRCODE = "1"
		then
			ERRLINES=`cat $errfname | grep -c $ERRCHAR`
		    if [ "$ERRLINES" != "0" ]
		    then
				echo "============ FIRST ERROR: =============="
				cat $errfname | grep -B $GOBACKLINES -A $GOAFTERLINES $ERRCHAR
		    else
				echo "============ FIRST ERROR: =============="
				$HEAD $errfname
		    fi
		    echo "========================================"
		fi
	    echo "See file $errfname"
    fi

}


ALLPARAMS=$@

if [ "$GTKGUI" = "" ]
then
	GTKGUI="Yes"
    ui=gui
fi

if [ "$AUBITDIR" = "" ]
then
        AUBITDIR=`pwd`
fi

#save some things from environment, so they don't get overwtitten by .a4glrc -
# we need this when making compiler:
ENV_ODBC_LIB_DIR="$ODBC_LIB_DIR"
ENV_ODBC_LIB_NAME="$ODBC_LIB_NAME"


	FOUNDRC=0

if [ "$A4GLRC" = "" ]
then
	if [ -f /etc/a4glrc ]
	then
		. /etc/a4glrc
	    FOUNDRC=1
	else
		if [ -f $AUBITDIR/etc/.a4glrc ]
		then
			. $AUBITDIR/etc/.a4glrc
		    FOUNDRC=1
		fi
	fi

	if [ -f $HOME/.a4glrc ]
	then
		. $HOME/.a4glrc
	    FOUNDRC=1
	fi

	if [ "$FOUNDRC" = "0" ]
	then
	    echo "Cannot find /etc/a4glrc, $AUBITDIR/etc/.a4glrc or $HOME/.a4glrc"
	    echo "Stop."
		if [ "$A4GLVERBOSE" = "yes" ]
		then
    	    echo "Exiting with code 5"
	    fi
		exit 5
	fi
else
	if [ -f $A4GLRC ]
	then
		. $A4GLRC
	    FOUNDRC=1
    else
	    echo "Cannot find $A4GLRC"
	    echo "Stop."
		if [ "$A4GLVERBOSE" = "yes" ]
		then
    	    echo "Exiting with code 5"
	    fi
		exit 5
	fi
fi

COMPCC=""

JABBER_LIB_DIR=$AUBITDIR/tools/jabber
JABBER_LIB_NAME=jabber

FGLLIBSDIR="-L$AUBITDIR/lib"

if [ -d $AUBITDIR/extralibs ]
then
	FGLLIBSDIR="$FGLLIBSDIR -L$AUBITDIR/extralibs"
fi


if [ "$NCURSES_LIB_DIR"  != "" ]
then
        LIBSDIR="-L$NCURSES_LIB_DIR"
fi

if [ "$NCURSES_INCL_DIR"  != "" ]
then
        LIBSDIR="-L$NCURSES_INCL_DIR"
fi


if [ "$COMPILE_QUIET" != "" ]
then
        output=": "
else
        output="echo"
fi


if [ "$ODBC_LIB_NAME" != "noodbc" ]
then
	if [ "$ODBC_LIB_NAME" = "" ]
	then
		if [ "$COMSPEC" = "" ]
	    then
			ODBC_LIB_NAME="iodbc"
	    else
	        ODBC_LIB_NAME="odbc32"
	    fi
	fi

	if [ "$ODBC_LIB_DIR" = "" ]
	then
		if [ -d $AUBITDIR/extlibs ]
		then
			ODBC_LIB_DIR=$AUBITDIR/extlibs
	    fi
	fi

	if [ "$ODBC_LIB_DIR" != "" ]
    then
		if [ "$ODBC_SHARED" = "" ]
		then
		        ODBC_SHARED="-L$ODBC_LIB_DIR"
		fi

		if [ "$ODBC_STATIC" = "" ]
		then
		        ODBC_STATIC="-L$ODBC_LIB_DIR"
		fi
    fi
fi

#restore things from before reading .a4glrc that where in environment:
#see if we are called form Aubit compiler makefiles:
TESTSWITCH=-make-compile
testswitchfunc
if test "$ISSWITCH" = "1"
then
	export MAKE4GLPC="Yes"
fi

#we want to do this ONLY if we are making compiler, but not all calls to
#4glpc have make-compile flag, so we cannot rely on this:
#if [ "$MAKE4GLPC" = "Yes" ]
#MAKINGAUBIT will be exported in root makefile
if test "$MAKINGAUBIT" = "1"
then
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "NOTE: invoked from Aubit compiler main makefile"
    fi

	if [ "$ODBC_LIB_NAME" != "noodbc" ]
    then
		if [ "$ENV_ODBC_LIB_DIR" != "" ]
		then
			ODBC_LIB_DIR="$ENV_ODBC_LIB_DIR"
			ODBC_SHARED="-L$ENV_ODBC_LIB_DIR"
			ODBC_STATIC="-L$ENV_ODBC_LIB_DIR"

			echo "NOTE: using ODBC_LIB_DIR from environment: $ODBC_LIB_DIR"
		fi

		if [ "$ENV_ODBC_LIB_NAME" != "" ]
		then
			ODBC_LIB_NAME=$ENV_ODBC_LIB_NAME
		    echo "NOTE: using ODBC_LIB_NAME from environment: $ODBC_LIB_NAME"
		fi
    fi
fi

LAST=""
INCLDIR="-I$AUBITDIR/incl"

if [ "$COMSPEC" = "" ]
then
	GCC=${GCC:-"cc -O -g "}
else
	GCC=${GCC:-"gcc -O -g "}
fi

#This may help while compiling, but compiled programs will not run
#if it's not in his environmnet. So set your environment!
#WARNING: this _IS_ needed in case you have several different libraries
#with same names in the path, like odbc. This will put path to library we
#are currently compiling for in front, and pick up correct one:

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$AUBITDIR/lib:
#$AUBITDIR/extlibs

if [ "$ODBC_LIB_NAME" != "noodbc" ]
then
	export LD_LIBRARY_PATH=$ODBC_LIB_DIR:$LD_LIBRARY_PATH
fi

counter=0

############
for a in $@
############
do
   let counter=counter+1
   ##########
   case $a in
   ##########

   -manifest)
        DO_AND_EXIT="ldd"
        run_next
   ;;

   -run)
        DO_AND_EXIT="exec"
        run_next
   ;;

   -configexample)
        #FIXME: check if $AUBITDIR is set
        #FIXME: don't overwrite if exist
		cp $AUBITDIR/etc/aubitenv.example /etc/aubitenv
        cp $AUBITDIR/etc/a4glrc.example /etc/a4glrc
        cp $AUBITDIR/etc/aubitbuild.mk.example /etc/aubitbuild.mk
        #cp $AUBITDIR/etc/aubitbuild-multi.mk.example /etc/aubitbuild-multi.mk
        chmod +x /etc/aubitenv
		echo ""
		echo "Example configuration files placed in /etc:"
		echo "'aubitenv' 'a4glrc' 'aubitbuild.mk' and 'aubitbuild-multi.mk'"
        echo "Please edit them to reflect your configuration."
        echo "Then, execute: '. /etc/aubitenv' to set your environment."
		echo ""
		exit 0
   ;;

   *.a) COMPCC="$COMPCC $a"
   ;;

   *.o) COMPCC="$COMPCC $a"
		EXECNAME="1"
   ;;

	#same as .o, needed to distinguish from I4GL objects in universal makefiles:
	#but I don't know how to do OR here...? Like:
	# *.o) || *.ao)
   *.ao) COMPCC="$COMPCC $a"
		EXECNAME="1"
   ;;

   #this is supposed to be linked collection of compiled library files (.ao)
   *.aox) COMPCC="$COMPCC $a"
		EXECNAME="1"
   ;;



   *.c) COMPCC="$COMPCC $a"
   ;;

   *.per)
		  if [ "$A4GLVERBOSE" = "yes" ]
		  then
            $output Compiling form $a
		  fi

		  fcompile -c $a
		  err_code=$?

          dirn=`dirname $a`
   		  fname=`basename $a .per`
   		  errfname=`basename $a .per`.err;

		  if ! [ -f $fname.c ]
		  then
            if [ -f $errfname ]
            then
				showerror
				#$output "Error compiling $a, see file $errfname"
			else
				if [ -f $dirn/$errfname ]
                then
					errfname=$dirn/$errfname
					showerror
					#$output "Error compiling $a - see file $errfname"
                else
					$output "Error compiling $a - error file NOT created"
                fi
            fi
            if [ "$IGNORE_ERRORS" != "1" ]
            then
				if [ "$A4GLVERBOSE" = "yes" ]
				then
			        echo "Exiting with code $err_code"
			    fi
				exit $err_code
            fi
          else
	        COMPCC="$COMPCC $fname.c"
          fi

   ;;


   *.per-old) fcompile -c $a
          fname=`basename $a .per`
        COMPCC="$COMPCC $fname.c"
   ;;

   *.per-direct) fcompile $a
   ;;



   *.msg)
        fname=`basename $a .msg`
		mkmess $fname
		#COMPCC="$COMPCC $fname.c"
   ;;

   *.menu) mcompile -c $a
          fname=`basename $a .menu`
        COMPCC="$COMPCC $fname.c"
   ;;


   *.4gl)

		  dirn=`dirname $a`
          fname=`basename $a .4gl`
          errfname=`basename $a .4gl`.err;

          fname2="$dirn/$fname"
          fname3="$dirn/$fname.4gl"
		  fname=$fname2

          #if we did not invoked 4gl compile from out of dir where 4gl is,
          #CC will not be able to find it's .h file:
		  if [ "$dirn" != "" ] && [ "$dirn" != "." ]
		  then
			  COMPCC="$COMPCC -I./$dirn"
          fi

          if ! [ -f $fname3 ]
          then
            echo "$fname3 not found"
            exit 10
          fi

          # Create the blank...
          touch $fname.c

          if [ -f "$fname".err ]
          then
                rm "$fname".err
          fi

		  if [ "$A4GLVERBOSE" = "yes" ]
		  then
	          $output "$fname: "
			  $output ODBC_LIB_DIR is $ODBC_LIB_DIR
			  $output LD_LIBRARY_PATH is $LD_LIBRARY_PATH
              $output "Executing (3) : $FGLCEXEC $a"
          fi

          err_msg=`"$FGLCEXEC" "$a"`
          err_code=$?

          if [ "$err_code" != "0" ]
          then
			if [ "$err_code" = "139" ]
	        then
	        	echo "$FGLCEXEC core dump"
	            exit 139
			fi

			if [ -f $errfname ]
            then
				showerror
				#$output "Error compiling $a - see file $errfname"
			else
				if [ -f $dirn/$errfname ]
                then
					errfname=$dirn/$errfname
					showerror
					#$output "Error compiling $a - see file $errfname"
                else
					$output "Error compiling $a - error file NOT created"
                fi
            fi

			if [ "$A4GLVERBOSE" = "yes" ]
			then
            	$output err_msg is: $err_msg
                $output err_code is: $err_code
                $output 'You can also "export DEBUG=ALL" to get "debug.out" file'
            fi

			if [ "$A4GLVERBOSE" = "yes" ]
			then
				echo "Exiting with code $err_code"
			fi

			exit $err_code
          fi

		if [ -f $fname.c ]
        then
		  if [ "$A4GLVERBOSE" = "yes" ]
		  then
            $output $FGLCEXEC "$a" OK, continue...
		  fi

          if [ "$AUTOINDENT" = "Y" ]
          then
                indent $fname.c
          fi

          if [ "$MAP4GL" = "Y" ]
          then
			if [ -x "$AUBITDIR/bin/loadmap" -a "$LOADMAP" != "N" ]
            then
                        $output "Loading map file for $a into database"
                        loadmap $fname.map > /dev/null 2> $fname.map.err
            fi
          fi

			#GCC=${GCC:-"cc -O -g "}
			PRETTYC=${PRETTYC:-"indent"}
			if [ "$AUTOINDENT" = "Y" ]
			then
			 	$PRETTYC $fname.c
			fi

			if [ "$LINKIT" = "1" ]
			then
                #we got this .4gl in linking command, we need to make .ao
                #for linking to succedde:
				if [ "$COMSPEC" = "" ]
				then
					EXEC="$DOIT $GCC $fname.c -c -o $fname.ao $INCLDIR 2> $fname.err"
				else
					EXEC="$DOIT $GCC $fname.c -o $fname.ao -c $INCLDIR 2> $fname.err"
				fi
                # cc -O  ./P12.c -c -o  P12.ao -I/usr/aubit/aubit4glsrc/incl

				if [ "$A4GLVERBOSE" = "yes" ]
				then
					$output "executing (1) : $EXEC"
				fi

				eval $EXEC
				err_code=$?

				if [ "$err_code" != "0" ]
				then
                    #linking will fail anyway, we cannot continue:
					showerror
					echo "error compiling $fname.c. STOP."
					exit 17
                fi

				COMPCC="$COMPCC $fname.ao"
            else
				COMPCC="$COMPCC $fname.c"
            fi
        else
            #is this a 0 length file?
			FGLFILESIZE=$(ls -al $fname3 | awk '{print $5}')

			if [ "$FGLFILESIZE" = "0" ]
            then
				if [ "$A4GLVERBOSE" = "yes" ]
	    		then
					echo "$fname3 size is $FGLFILESIZE"
                fi

				#fakeing c file, to get empty object file from c compiler:
				#Simplest way is before the 4glc call in 4glpc, 'touch' the required C
				#file...

				touch $fname.c
				COMPCC="$COMPCC $fname.c"
            else
				$output "Error compiling $a - $fname.c not generated, but no err code from $FGLCEXEC"
				if [ "$A4GLVERBOSE" = "yes" ]
				then
				  	if [ -f $errfname ]
	    	        then
                        showerror
					else
						if [ -f $dirn/$errfname ]
		                then
							errfname=$dirn/$errfname
							showerror
							#$output "Error compiling $fname.c - see file $errfname"
		                else
							$output "Error compiling $fname.c - error file NOT created"
		                fi
	                fi

					$output err_msg is: $err_msg
	                $output err_code is: $err_code
	                $output Please check file "$fname".err
	                $output 'You can also "export DEBUG=ALL" to get "debug.out" file'
				fi
	            #we don't want to exit with 0 here:
	            err_code=9
				if [ "$A4GLVERBOSE" = "yes" ]
				then
					echo "Exiting with code $err_code"
				fi
				exit $err_code
            fi
		fi
   ;;

   -echo) DOIT="echo"
   ;;

   -i) IGNORE_ERRORS="1"
   ;;

   -jabber) USE_JABBER=1
   ;;


   -gtk) 	export GTKGUI="Yes"
			export ui="gui"
   ;;

   -nogtk) 	export GTKGUI="no"
			export ui=""
   ;;


   -pdf) 	export USE_PDF="yes"
   ;;

   -nopdf) 	export USE_PDF="no"
            #echo Set USE_PDF to $USE_PDF
   ;;


   -verbose) 	export A4GLVERBOSE="yes"
				SHOWERRCODE=1
   ;;

   -noerrcode)
        SHOWERRCODE=0
   ;;

   -map)
        echo "Setting map file on"
        MAP4GL="Y"
        export MAP4GL
   ;;

   -maponly) 		export MAP4GL="Y"
             		NOCFILE="Y"
   ;;

   -make-compile) 	export MAKE4GLPC="Yes"

   ;;

   -nomap) unset MAP4GL
   ;;

   -debug) export INCLINES=""
           export DEBUG=ALL
		   #DDEBUG="_g"
           COMPCC="$COMPCC -g"
   ;;

   -udbc) ODBC_LIB_NAME="udbc"
   ;;

   -odbc) if [ "$COMSPEC" = "" ]
		then
		   ODBC_LIB_NAME="iodbc"
        else
			ODBC_LIB_NAME="odbc32"
        fi
   ;;

   -noodbc)		ODBC_LIB_NAME=noodbc
                ODBCFLAG=-noodbc
				unset ODBC_LIB_DIR
		        unset ODBC_SHARED
	    	    unset ODBC_STATIC
                FGLCEXEC=4glc-noodbc
   ;;

   -as-dll) 	COMPCC="$COMPCC -shared"
   ;;

   -shared)  if [ "$COMSPEC" = "" ]
            then
			   USE_SHARED="Yes"
            else
				export FGLLIBS="$FGLLIBS_SHARED"
				if [ "$ODBC_LIB_NAME" != "noodbc" ]
				then
					export FGLLIBS="$FGLLIBS $ODBC_SHARED"
                fi
            fi
   ;;

   -static) if [ "$COMSPEC" = "" ]
            then
				USE_SHARED="No"
            else
				export FGLLIBS="$FGLLIBS_STATIC"
				if [ "$ODBC_LIB_NAME" != "noodbc" ]
				then
					export FGLLIBS="$FGLLIBS $ODBC_STATIC"
                fi
            fi

   ;;

   -o) COMPCC="$COMPCC -o "
       ISMAKE=-1
       LINKIT=1

       LAST="2> $fname.err"
       ERRFILE="$fname.err"
       DEFAULTCOMPCC="$COMPCC $fname"
       EXECNAME="-1"


   ;;

   *) if [ "$ISMAKE" = "-1" ]
      then
         EXECNAME="$a"
		 ISMAKE=1
         LAST="2> $a.err"
         ERRFILE="$a.err"
      fi
      COMPCC="$COMPCC $a"
  ;;

  ####
  esac
  ####
####
done
####

if ! [ "$COMSPEC" = "" ]
then
	#WARNING! on CyGwin ORDER OF LIBS IS IMPORTANT
	if [  "$GTKGUI" = "Yes" ]
    then

		if [ "$GLIBVER" = "old" -o "$GLIBVER" = "" ]
        then
			GTKLIBS="-lgdk -lgtk -lglib"
			#GTKLIBS="-lgdk-1.3 -lgtk-1.3 -lglib-1.3"
	    else
			#GLIB_LIBS=`pkg-config --libs $GLIBVER`
			#GLIB_CFLAGS=`pkg-config --cflags $GLIBVER`
			#GDKLIB_LIBS=`pkg-config --libs $GDKVER`
			#GDKLIB_CFLAGS=`pkg-config --cflags $GDKVER`
			GTKLIB_LIBS=`pkg-config --libs $GTKVER`
			GTKLIB_CFLAGS=`pkg-config --cflags $GTKVER`
			#GTKLIBS="$GLIB_LIBS $GLIB_CFLAGS $GDKLIB_LIBS $GDKLIB_CFLAGS $GTKLIB_LIBS $GTKLIB_CFLAGS"
            GTKLIBS="$GTKLIB_LIBS $GTKLIB_CFLAGS"
	    fi

		if  [ "$MAKE4GLPC" != "Yes" ]
		then
            GTKLIBS="-lgtk4gl -lgtk4gl_x $GTKLIBS"
        fi
    fi
else
	if [  "$GTKGUI" = "Yes" ]
    then
		GTKLIBS="-lgdk -lgtk -lglib"
		if  [ "$MAKE4GLPC" != "Yes" ]
		then
			GTKLIBS="$GTKLIBS -lgtk4gl -lgtk4gl_x"
    	fi
    fi
fi


if [ "$A4GLDEBUG" = "yes" ]
then
	echo "Finished processing switches. USE_PDF = $USE_PDF"
fi

if [ "$EXECNAME" = "-1" ]
then
    COMPCC=$DEFAULTCOMPCC
	$output "-o specified without object name, default name is $fname"
	if [ "$ISMAKE" = "-1" ]
    then
         ISMAKE=1
    fi
fi

if [ "$COMSPEC" = "" ]
then
    #echo COMSPEC not defined: $COMSPEC
    #-L$AUBITDIR/lib -L../../lib
	FGLLIBS_SHARED="-laclshared"$ui$ODBCFLAG" -lm -ldl"
	FGLLIBS_STATIC="-laclall"$ui$ODBCFLAG" -lm -ldl"
else
    #echo COMSPEC defined: $COMSPEC
    #-L$AUBITDIR/lib -L../../lib
	#FGLLIBS_SHARED="-laclallgui$ODBCFLAG -lm -lrpclib  -L/lib/w32api"
	#FGLLIBS_STATIC="-laclallgui$ODBCFLAG -lm -lrpclib -L/lib/w32api"

    RPCLIB=-lrpclib
	#RPCLIB=-lrpc
    #-L$AUBITDIR/lib  -L../../lib
	FGLLIBS_COMMON="-lm $RPCLIB -L/lib/w32api -L/usr/local/lib"
	FGLLIBS_STATIC="-laclall$ui$ODBCFLAG $FGLLIBS_COMMON"
	FGLLIBS_SHARED="-laclshared$ui$ODBCFLAG $FGLLIBS_COMMON"

	if [ "$ODBC_LIB_NAME" != "noodbc" ]
    then
		FGLLIBS_SHARED="$FGLLIBS_SHARED -lodbc32 -lodbccp32"
		FGLLIBS_STATIC="$FGLLIBS_STATIC -lodbc32 -lodbccp32"
    fi

fi

if [ "$A4GLDEBUG" = "yes" ]
then
	echo ------------------------------------------------------------------
	echo FGLLIBS_SHARED = $FGLLIBS_SHARED
	echo FGLLIBS_STATIC = $FGLLIBS_STATIC
	echo ------------------------------------------------------------------
fi


if [ "$USE_PDF" = "yes" ]
then
	#we don't want to link PDF libs in compiler, if USE_PDF is specified via
    #a4glrc - each makefile should pass explicit -lpdf as needed
	if [ "$MAKE4GLPC" != "Yes" ]
    then
		if test "$MAKINGAUBIT" = "1"
		then
			if [ "$A4GLVERBOSE" = "yes" ]
			then
	        echo "NOTE: invoked from Aubit compiler main makefile"
		    fi
        else
			FGLLIBS_SHARED="$FGLLIBS_SHARED -lpdf"
			FGLLIBS_STATIC="$FGLLIBS_STATIC -lpdf"
        fi
    fi
fi

if ! [ "$COMSPEC" = "" ]
then
	FGLLIBS_SHARED="$FGLLIBS_SHARED -lcurses"
	FGLLIBS_STATIC="$FGLLIBS_STATIC -lcurses"
fi

if [ "$A4GLDEBUG" = "yes" ]
then
	echo ------------------------------------------------------------------
	echo FGLLIBS_SHARED = $FGLLIBS_SHARED
	echo FGLLIBS_STATIC = $FGLLIBS_STATIC
	echo ------------------------------------------------------------------
fi


if [ "$USE_SHARED" = "Yes" ]
then
		if [ "$ODBC_LIB_NAME" != "noodbc" ]
		then
	        if [ "$ODBC" = "" ]
    	    then
        		ODBC=$ODBC_SHARED
	        fi
			FGLLIBS="$FGLLIBS_SHARED $ODBC"
        else
	        FGLLIBS="$FGLLIBS_SHARED"
		fi
else
		if [ "$ODBC_LIB_NAME" != "noodbc" ]
		then
			if [ "$ODBC" = "" ]
    	    then
                ODBC=$ODBC_STATIC
        	fi
	        FGLLIBS="$FGLLIBS_STATIC $ODBC_STATIC"
        else
	        FGLLIBS="$FGLLIBS_STATIC"
        fi
fi

#FIXME: Mike's private reference to /root/ncurses/ncurses-5.2/lib, had to remove to shorten
#execution strimg because of bug in 'eval" on CygWin!
MIKES_LIBS="-L/root/ncurses/ncurses-5.2/lib"
LIBS="-lform$DDEBUG -lpanel$DDEBUG -lncurses$DDEBUG"

if [ "$ODBC_LIB_NAME" != "" ] && [ "$ODBC_LIB_NAME" != "noodbc" ]
then
	LIBS="$LIBS -l$ODBC_LIB_NAME"

	if [ "$ODBC_LIB_DIR" != "" ]
    then
		LIBS="$LIBS -L$ODBC_LIB_DIR"
    fi

fi

if test "$USE_JABBER" = "1"
then
	LIBS="$LIBS -L$JABBER_LIB_DIR -l$JABBER_LIB_NAME -liksemel"
	#JabberX link line:
	#MANLINK2= -rdynamic -lnsl -ldl -lm -lposix -lcrypt -lcurses -liksemel
fi

if [ "$NOCFILE" = "Y" ]
then
   if [ "$A4GLVERBOSE" = "yes" ]
   then
	   $output No C files to compile.
   fi
	if [ "$A4GLVERBOSE" = "yes" ]
	then
		echo "Exiting with code 8"
	fi
	exit 8
fi

if [ "$COMPCC" = "" ]
then
   if [ "$A4GLVERBOSE" = "yes" ]
   then
	   $output No C files to compile.
   fi
	if [ "$A4GLVERBOSE" = "yes" ]
	then
		echo "Exiting with code 8"
    fi
	exit 8
fi

if [ "$A4GLDEBUG" = "yes" ]
then
	echo $GTKGUI
	echo $COMSPEC
	echo $MAKE4GLPC
fi

if [ "$ISMAKE" != "1" ]
then
#	EXEC="$DOIT $GCC $COMPCC -c $INCLDIR $LAST"
	if [ "$COMSPEC" = "" ]
	then
		EXEC="$DOIT $GCC $COMPCC $INCLDIR $LAST"
    else
        EXEC="$DOIT $GCC $COMPCC -c $INCLDIR $LAST"
    fi

   if [ "$A4GLVERBOSE" = "yes" ]
   then
        $output "executing (1) : $EXEC"
   fi

   	eval $EXEC
	err_code=$?

	if [ $err_code != 0 ]
	then
		if [ "$LAST" != "" ]
		then
			errfname=`expr "$LAST" : "..\(.*\)"`
			showerror
			$output "Error compiling... check $errfname"
      else
		  $output "Error compiling."
      fi
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code $err_code"
    fi
	exit $err_code
   fi

else
   $output "Generating Exec"

   if [ "$A4GLVERBOSE" = "yes" ]
   then
	   echo "executing (2) : $DOIT $GCC $COMPCC $INCLDIR $FGLLIBSDIR $FGLLIBS $LIBSDIR $LIBS $GTKLIBS $LAST"
   fi

    if [ "$COMSPEC" = "" ]
    then
		eval $DOIT $GCC $COMPCC $INCLDIR $FGLLIBSDIR $FGLLIBS $LIBSDIR $LIBS $GTKLIBS $LAST
       	err_code=$?
    else
		eval "$DOIT $GCC $COMPCC $INCLDIR $FGLLIBSDIR $FGLLIBS $LIBSDIR $LIBS $GTKLIBS $LAST"
		err_code=$?
    fi

	if [ $err_code != 0 ]
	then
		if [ "$LAST" != "" ]
		then
			errfname=`expr "$LAST" : "..\(.*\)"`
			showerror
			echo "Error compiling... check $errfname"

	  else
		  $output "Error compiling."
      fi
	if [ "$A4GLVERBOSE" = "yes" ]
	then
        echo "Exiting with code $err_code"
    fi
	exit $err_code
   fi
fi

if [ "$ERRFILE" != "" -a ! -s "$ERRFILE" ]
then
	if [ -f "$ERRFILE" ]
    then
		rm $ERRFILE
	fi
fi


if [ "$A4GLVERBOSE" = "yes" ]
then
	echo "Exiting with code 0"
fi

exit 0


#---------------------------- EOF ---------------------------------

