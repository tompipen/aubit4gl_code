
SH_DEBUG=1


if test "$SH_DEBUG" = "1"; then
	echo "In ecpg_wrap : $@"
fi

if [ "$POSTGRESDIR" = "" ]
then
	export POSTGRESDIR=/usr/local/pgsql
fi

if [ "$AUBITDIR" = "" ]
then
    AUBITDIR=`aubit-config AUBITDIR`
	if [ "$AUBITDIR" = "" ]
	then
        echo "ERROR: AUBITDIR unknown. Stop."
        exit 5
    fi
fi


PG_IFLAGS="-I$POSTGRESDIR/include -I/usr/include/pgsql"
if [ "$PGSQL_INCDIR" != "" ]; then
	PG_IFLAGS="$PG_IFLAGS -I$PGSQL_INCDIR/include"
fi

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$AUBITDIR/lib
export LD_RUN_PATH=$LD_RUN_PATH:$AUBITDIR/lib:$POSTGRESDIR/lib

ECPG_EXT=cpc
COMPILE_OBJ=0
output=""



ECPG_ONLY=0
# If we have a .ec on the command line -
# assume they have .ec as the extension instead



echo $* | grep "\.ec" >/dev/null 2>&1
[ $? -eq 0 ] &&	ECPG_EXT=ec

while [ "$1" != "" ]
do
	a=$1

	if [ "$a" = -t ]
	then
		ecpg_args="$ecpg_args $a"
		shift
		continue
	fi


	if [ "$a" = -e ]
	then
		ECPG_ONLY=1
		shift
		continue
	fi


	if [ "$a" = -c ]
	then
		COMPILE_OBJ=1
		shift
		continue
	fi



	if [ "$a" = "-C" -o "$a" = "-D" -o "$a" = "-I"  ]
	then
		ecpg_args="$ecpg_args $a"
		shift
		a=$1
		ecpg_args="$ecpg_args $a"
		shift
		continue
	fi

	d=`dirname $a`

	if [ "$d" != "" -a "$d" != "." ]
	then
		c=$d/`basename "$a" `
		b=$d/`basename "$c" ".$ECPG_EXT"`
		bc=$d/`basename "$c" ".c"`
		bo=$d/`basename "$c" ".o"`
		b4go=$d/`basename "$c" ".4go"`
	else
		c=`basename "$a" `
		b=`basename "$c" ".$ECPG_EXT"`
		b2=./`basename "$c" ".$ECPG_EXT"`

		bc=`basename "$c" ".c"`
		bc2=./`basename "$c" ".c"`
		bo=`basename "$c" ".o"`
		bo2=./`basename "$c" ".o"`
		b4go=`basename "$c" ".4go"`
		b4go2=./`basename "$c" ".4go"`
	fi

	if [ $b.$ECPG_EXT = $a -o $b2.$ECPG_EXT = $a ]
	then
		srcs="$srcs $a"
		shift
		continue
	fi


	if [ $bc.c = $a -o $bc2.c = $a ]
	then
		csrcs="$csrcs $a"
		shift
		continue
	fi

	if [ $bo.o = $a -o "$bo2.o" = $a -o $b4go = $a -o "$b4go2" = $a ]
	then
		ofiles="$ofiles $a"
		shift
		continue
	fi


	if [ $a = "-o" ]
	then
		shift
		output="-o $1"
		case $1 in
            *.ao)
                OUTPUT_IS_OBJECT="1"
                ;;
			*.o)
                OUTPUT_IS_OBJECT="1"
				;;
        esac
		shift
		continue
	fi

	other_args="$other_args $a"


	shift
done

if test "$SH_DEBUG" = "1"; then
	echo "SOURCES : " $srcs
fi

for a in $srcs
do
	ECPG_RUN="$POSTGRESDIR/bin/ecpg -C INFORMIX_SE -rno_indicator -t $ecpg_args $a"
    #-C INFORMIX_SE
    echo $ECPG_RUN
    eval $ECPG_RUN

    RET=$?
    if test "$RET" != "0"; then
        exit $RET
    fi
    out=`basename $a ".$ECPG_EXT"`
    cfiles="$cfiles $out.c"


    if [ "$ECPG_ONLY" = "0" ]
    then
    	GCC_COMPILE="gcc -c $out.c $PG_IFLAGS $other_args"

	if test "$OUTPUT_IS_OBJECT" = "1"; then
	    GCC_COMPILE="$GCC_COMPILE $output"
	    echo "Compiling $out.c to object $output"
	else
	    echo "Compiling $out.c to object"
	fi

	echo $GCC_COMPILE
    	eval $GCC_COMPILE
    	RET=$?
	if test "$RET" != "0"; then
        	exit $RET
   	fi
    	ofiles="$ofiles $out.o"
    fi
done

if [ $COMPILE_OBJ = 1 -o "$ofiles" = "" ]; then
	if [ "$csrcs" = "" ]; then
		if test "$SH_DEBUG" = "1"; then
		echo "COMPILE_OBJ or no ofiles other_args=$other_args"
		fi
		exit 0
	fi
fi

GCC_RUN="gcc $ofiles $csrcs $PG_IFLAGS $other_args  -L$POSTGRESDIR/lib -lecpg -lecpg_compat -lpgtypes -lpq -lm -L$AUBITDIR/lib -laubit4gl $output"
echo $GCC_RUN
eval $GCC_RUN
RET=$?
exit $RET


