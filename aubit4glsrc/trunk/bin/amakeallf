#!/bin/sh

#Aubit 4gl
#Compiles all per files in current directory to objects

###################
function doit {
###################

	ls *.per > /dev/null 2>&1
	RET=$?
	if test $RET != "0"
	then
	    echo "No .per files in current directory."
	else

		ls *.err > /dev/null 2>&1
		RET=$?
		if test $RET = "0"
		then
			echo Removing .err
			rm *.err
		fi

		ls *.c > /dev/null 2>&1
		RET=$?
		if test $RET = "0"
		then
			echo Removing .c
			rm *.c
		fi

		ls *.ec > /dev/null 2>&1
		RET=$?
		if test $RET = "0"
		then
			echo Removing .ec
			rm *.ec
		fi

		ls *.$COMPEXT > /dev/null 2>&1
		RET=$?
		if test $RET = "0"
		then
			echo Removing .$COMPEXT
			rm *.$COMPEXT
		fi

		#######
		compper
		#######
    fi

}

####################
function compper {
####################

	####################
	for i in *.per; do
	####################
	X=`basename $i .per`.$COMPEXT;
	ERR=`basename $i .per`.err;

	if [ "x$SKIP" = "xskip" ]
	then
	    #echo "skip is on"
		if [ -f $MAXDIR/$DESTDIR/$X ]
		then
			#echo "$MAXDIR/$DESTDIR/$X exists - skip is on"
	        continue
		else
			#echo "#------- Running $FORMCOMPILER $i in $PWD : -------------"  >> $ERRORLOG
			echo Running $FORMCOMPILER $i in $PWD:;
			$FORMCOMPILER $i >> $ERRORLOG 2>&1;
		fi
	else
	    #echo "Skip is OFF"
		#echo $FORMCOMPILER $i;
		#echo "#------- Running $FORMCOMPILER $i in $PWD : -------------"  >> $ERRORLOG
	    $FORMCOMPILER $i >> $ERRORLOG 2>&1;
	fi

	RET=$?
	if test $RET != "0"
	then
		echo "$PWD/$i failed, return code is $RET"
		echo "#$PWD/$i failed, return code is $RET"  >> $ERRORLOG
		cp $i $ALLERRDIR

	    echo "########################################################## $ERR :" >> $ERRORLOG
		if [ -f $ERR ]
		then
		    echo "$ERR was generated."
			cp $ERR $ALLERRDIR
	        cat $ERR | grep -B 3 $ERRCHAR >> $ERRORLOG
		else
	        echo "ERR file was __NOT__ generated."
	        echo "ERR file was __NOT__ generated." >> $ERRORLOG
		fi;
        echo "##########################################################" >> $ERRORLOG
	    if test $STOPONERROR = "1"
	    then
			echo "Stop."
			exit 1
	    else
	        continue
		fi
	#else
	#	echo "$FORMCOMPILER succeded, return code is $RET"
	fi;

	if [ -f $X ]
	then
	    mv $X $MAXDIR/$DESTDIR
		if [ -f $ERR ]
		then
			echo "#$PWD/$i failed, return code is $RET"  >> $ERRORLOG
			echo "$ERR _AND_ $X was generated, but $FORMCOMPILER did not return error code."
		    echo "#$ERR _AND_ $X was generated, but $FORMCOMPILER did not return error code."  >> $ERRORLOG
			ls *.err
			if test $STOPONERROR = "1"
		    then
				echo "Stop."
				exit 1
		    else
		        continue
			fi

		fi;

	else
		echo "#$PWD/$i failed, return code is $RET"  >> $ERRORLOG
		cp $i $ALLERRDIR
	    echo "########################################################## $ERR : " >> $ERRORLOG
		echo "$X not generated, but $FORMCOMPILER did not return error code."
		echo "#$X not generated, but $FORMCOMPILER did not return error code."  >> $ERRORLOG

		if [ -f $ERR ]
		then
		    echo "$ERR was generated."
			cp $ERR $ALLERRDIR
	        cat $ERR | grep -B 3 $ERRCHAR >> $ERRORLOG
		else
			echo "$ERR was __NOT__ generated."
			echo "#$ERR was __NOT__ generated."  >> $ERRORLOG
		fi;
        echo "##########################################################" >> $ERRORLOG

		if test $STOPONERROR = "1"
	    then
			echo "Stop."
			exit 1
	    else
	        continue
		fi

	fi;


	#####
	done
	#####


}

###############
#MAIN
###############

#############
#configuration:
SKIP=skip
ROOTDIR=$PWD
COMPILER=aubit
ALLERRDIR=/tmp/amakeallf
STOPONERROR=0
ERRORLOG=/tmp/amakeallf/amakeallf.log


if [ "$COMPILER" = "4js" ]
then
	#4Js/D4GL:
	FORMCOMPILER=fglform
	COMPEXT=42f
	DESTDIR=gform
	ERRCHAR=#
fi

if [ "$COMPILER" = "aubit" ]
then
	#Aubit 4gl:
	FORMCOMPILER=fcompile
	COMPEXT=frm
	DESTDIR=aform
	ERRCHAR=\|

	if [ -f $AUBITDIR/aubitenv ]
	then
		. $AUBITDIR/aubitenv
	fi

	if [ -f /etc/aubitenv ]
	then
		. /etc/aubitenv
	fi

fi


if [ -d $ALLERRDIR ]
then
    rm -rf $ALLERRDIR
fi

mkdir $ALLERRDIR

if [ -f $ERRORLOG ]
then
	rm $ERRORLOG
fi

if [ "$1" = "-r" ]
then
    #ALLDIR1=`ls -d *`
    #echo $ALLDIR1
    #exit 0

	########################################################
	for subsystem in ap ar eo fa gl in jm lc main qe re ss wo pu contr dvfund; do
	########################################################

		   if [ -d $ROOTDIR/$subsystem ]
           then
			   echo Making forms in $subsystem...
			   cd $ROOTDIR/$subsystem ;
	           doit
	           if [ -d $ROOTDIR/$subsystem/ENG ]
	           then
		           cd $ROOTDIR/$subsystem/ENG
				   echo Making forms in $subsystem/ENG...
	               doit
			   fi
           fi
	####
	done
    ####
else
	doit
	ls *.err > /dev/null 2>&1
	RET=$?
	if test $RET = "0"
	then
		echo All error files:
		ls *.err
	fi
fi

echo Finished.
echo "See $ERRORLOG for summary of all errors generated".
exit 0

