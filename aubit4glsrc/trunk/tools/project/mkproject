#!/bin/sh
#set -x

CURRDIR=$PWD

if [ "$AUBITDIR" = "" ]
then
	#FIXME: this should be set with autoconf
	OLD_DIR=`pwd`
	cd ../..
    AUBITDIR=`pwd`
    cd $OLD_DIR
fi

#cd $HOME

#Bug on CygWin - root makefile PWD allways returned :
#PROJECTC=$CURRDIR/../../lib/generated/project.c
PROJECTC=$AUBITDIR/lib/generated/project.c
#PROJECTC=$CURRDIR/../../lib/project.c

PROJECTC2=$PROJECTC
#PROJECTC2=$CURRDIR/../../lib/generated/crap.c


##########################
#get current build number:
##########################
#build=`cat project/build`
build=`cat build`

#############################
#Get current version number:
##############################
#version=`cat project/version`
version=`cat version`

if [ "$1" = "-increase" ]
then
	echo "Increasing build number..."
	#########################
	#Increase build counter:
	#########################
	#build=`expr $build + 1`
    let build=build+1
	echo $build > build
fi


######################
#Write project.c file:
######################

echo "

/******************************************************************************
* (c) 1997-1998 Aubit Computing Ltd.
*               project definition - automatically generated - do not modify
*
* \$Id\$
*
* Project : Part Of Aubit 4GL Library Functions
*
* Change History :
*	\$Log\$
*
*******************************************************************************/

int internal_build() {
	return $build;
}

char *internal_version() {
	return \"$version\";
}


" > $PROJECTC


#if [ "1" = "2" ]
#then


#######################################################
#grep all C files in lib to create rest of project.c:
#######################################################

cd $CURRDIR/../../lib


#grep "\$Id" *.c | nawk '
grep "\$Id" *.c | awk '
BEGIN {
print "struct s_ver_modules { char module[32]; char id[132];} internal_versions[]={"
}
{
mname=substr($0,1,index($0,":")-1)

id=substr($0,index($0,"Id"));
if (id!="Id$") printf("{\"%s\",\"%s\"},\n",mname,id);
}
END {
print "{\"\",0}"
print "};"

print "set_version(int a,char *m,char *id) {"
print "strcpy(m,internal_versions[a].module);"
print "strcpy(id,internal_versions[a].id);"
print "}"
}
' >> $PROJECTC2

#fi

#It should look like this:

#struct s_ver_modules { char module[32]; char id[132];} internal_versions[]={
#{"Module","ID Version Info"},
#{"",0}
#};
#
#set_version(int a,char *m,char *id) {
#strcpy(m,internal_versions[a].module);
#strcpy(id,internal_versions[a].id);
#}



