#
# $Id: Makefile.in,v 1.7 2002-01-06 11:24:46 afalout Exp $
#

## ==================================================================
##                              Options
## ==================================================================


#note: I plan to use Jleffler's makefile riles for this; this is just for now

RM =rm -f
4GLPCFLAGS=
FGLPCEXEC=sh 4glpc

ifdef COMSPEC
	FGLPCEXEC=bash 4glpc
	ifdef MONOLIT
		4GLPCFLAGS += -mno-cygwin
	endif
else
	FGLPCEXEC=sh 4glpc
endif

#ifdef NOGTK
ifeq "$(GTKBUILD)" "yes"
	#-gtk is now default, so we don't really need this...
	4GLPCFLAGS+= -gtk
else
	4GLPCFLAGS+= -nogtk
endif


ifeq "$(PDFBUILD)" "yes"
	4GLPCFLAGS		+=-lpdf
    4GLPCTESTFLAGS	=-lpdf
else
	4GLPCFLAGS		+=-nopdf
    4GLPCTESTFLAGS	=-nopdf
endif

ifeq "$(ODBC)" "no"
	ifeq "$(ODBC_LINK)" "static"
		4GLPCFLAGS+= -noodbc
		4GLPCTESTFLAGS+= -noodbc
    endif
endif


## ==================================================================
##                              Targets
## ==================================================================


#ALL=other 4gl regression.4gl regression.per
ALL=other 4gl


all: ${ALL}
	@echo default targets successfully compiled

4gl:
	${FGLPCEXEC} ${4GLPCFLAGS} hello.4gl -o hello
	${FGLPCEXEC} ${4GLPCFLAGS} hello2.4gl -o hello2
	${FGLPCEXEC} ${4GLPCFLAGS} hello_db.4gl -o hello_db
	@echo 4gl targets successfully compiled

#this will fail unless you compiled Aubit compiler to enable PDF functionality:
pdf:
	${FGLPCEXEC} ${4GLPCFLAGS} -lpdf pdf_report.4gl -o pdf_report
	@echo PDF targets successfully compiled


#This is used from root makefile, to test id compiler is working after building it:
test.build:
	${RM} test_build.c test_build.h test_build.o test_build test_build.exe
	${FGLPCEXEC} ${4GLPCTESTFLAGS} -nogtk test_build.4gl -o test_build #-verbose

test.perl:
	cd tools/test; 4glc_perl test_build.4gl
	cd tools/test; perl test_build.pl

filetest: file.4gl
	${FGLPCEXEC} ${4GLPCFLAGS} file.4gl -o filetest

other:
	fcompile form.per
	mkmess helpfile
#FIXME: we don't have any menu examples?
	@echo Other targets successfully compiled

## ==================================================================
##                          Help
## ==================================================================

help:
	@echo "use 'make NOGTK=1' to compile without GTK GUI"
	@echo "use 'make' to compile with GTK GUI"

## ==================================================================
##                    Regression testing targets
## ==================================================================

regression.all: regression.4gl.all regression.per.all fail.4gl.all fail.per.all tort.4gl.all

##################### Aubit ############ 4JS ############# Querix ########
regression.4gl.all: regression.4gl 	regression.4gl.4js 	regression.4gl.q
regression.per.all: regression.per  regression.per.4js  regression.per.q
fail.4gl.all:       fail.4gl 		fail.4gl.4js 		fail.4gl.q
fail.per.all:       fail.per 		fail.per.4js        fail.per.q
tort.4gl.all:		tort.4gl 		tort.4gl.4js 		tort.4gl.q

####### regression-test-4gl ##########

regression.4gl:
	${FGLPCEXEC} -nogtk regression-test-4gl.4gl -o regression-test-4gl

regression.4gl.4js:
	fglcomp regression-test-4gl.4gl

regression.4gl.q:
	fglc regression-test-4gl.4gl

####### regression-test-per ##########

regression.per:
	fcompile regression-test-per.per

regression.per.4js:
	fglform regression-test-per.per

regression.per.q:
	fmpc regression-test-per.per


####### regression-fails-4gl ##########

fail.4gl:
	${FGLPCEXEC} -nogtk regression-fails-4gl.4gl -o regression-fails-4gl
	${FGLPCEXEC} ${4GLPCFLAGS} torturetest4glcomp.4gl -o torturetest4glcomp

fail.4gl.4js:
	fglcomp regression-fails-4gl.4gl
	fglcomp torturetest4glcomp.4gl

fail.4gl.q:
	fglc regression-fails-4gl.4gl
	fglc torturetest4glcomp.4gl

fail.4gl.ifx:
	fglpc regression-fails-4gl.4gl
	fglpc torturetest4glcomp.4gl


####### regression-fails-per ##########

fail.per:
	fcompile regression-fails-per.per

fail.per.4js:
	fglform regression-fails-per.per

fail.per.q:
	fmpc regression-fails-per.per

## ==================================================================
##                            Torture test
## ==================================================================

tort.4gl:
	${FGLPCEXEC} ${4GLPCFLAGS} torturetest4glcomp.4gl -o torturetest4glcomp

tort.4gl.4js:
	fglcomp torturetest4glcomp.4gl

tort.4gl.q:
	fglc torturetest4glcomp.4gl


## ==================================================================
##                           Clean targets
## ==================================================================


clean:
	$(RM) *.BAK *.bak core *~ *.ln *.output *.out *.frm *.h *.o *.4ae
	${RM} hello hello2 hello_db test_build *.hlp *.exe
	$(RM) *.stackdump *.exe *.err *.c
	${RM} torturetest4glcomp *.tmp *.42m *.glb regression-test-4gl
	${RM} *.42r gui/*.err pdf_report rr1.pdf gui/*.glb
	${RM} *.ao *.log *.4ge *.pl *.pm test_build.c .\#*
