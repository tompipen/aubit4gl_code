###########################################################################
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
###########################################################################

#	 $Id: footer.mki,v 1.21 2003-02-11 03:43:13 afalout Exp $

#############################################################################
#   Aubit 4gl compiler - 'Amake' make system
#
# standard footer for all .mk files. Contains processing of variables defined
# in .mk files, header.mki and any optional additionlly included files, to
# prepare for execution of targets that are also defined here.
#
# do not put ANY hard coded names here!!!!!
#
#############################################################################

########################
#Set name for 4Js database definition file to be created/used
ifneq "$(DBASE)" ""
	DBASE.sch = ${DBASE}.sch
endif

#######################
#extract program file extension, to determine which kind of target to build
#(library or program)
PROGTYPE  = $(suffix ${PROG})

########################
#for ld to find C compiler libraries (and objects)
#NOTE: this applies only to LD, and NOT to GCC
LD_RUN_PATH	:=${LIBSTORE}:${LD_RUN_PATH}
export LD_RUN_PATH

########################
#If we did not include rules files for all compilers, we must at least specify
#extensions for the targets defined in this file, to avoid warning from make:
# warning: overriding commands for target `xyz'
ifeq "${I4GL_PRG_EXT}" ""
	I4GL_PRG_EXT=.I4GL_RULES_NOT_INCLUDED
	I4GL_CPRG_EXT=.I4GL_CPRG_EXT.${I4GL_PRG_EXT}
	I4GL_LIB_EXT=${I4GL_PRG_EXT}
endif
ifeq "${A4GL_PRG_EXT}" ""
	A4GL_PRG_EXT=.A4GL_RULES_NOT_INCLUDED
	A4GL_LIB_EXT=${A4GL_PRG_EXT}
endif
ifeq "${Q4GL_PRG_EXT}" ""
	Q4GL_PRG_EXT=.Q4GL_RULES_NOT_INCLUDED
	Q4GL_LIB_EXT=${Q4GL_PRG_EXT}
endif
ifeq "${D4GL_PRG_EXT}" ""
	D4GL_PRG_EXT=.D4GL_RULES_NOT_INCLUDED
	D4GL_CPRG_EXT=.D4GL_CPRG_EXT.${D4GL_PRG_EXT}
	D4GL_LIB_EXT=${D4GL_PRG_EXT}
endif

# =======================================================================
#       Set options/extensions for compiling a program or library
# =======================================================================

ifeq "$(PROGTYPE)" ".lib"
	#we are making a library
    ifeq "$(POINTTOSTORE)" "1"
		ADDLIBSTORE=$(LIBSTORE)
    endif
	PROG.42r  = $(ADDLIBSTORE)${PROG:.lib=${D4GL_LIB_EXT}}
	PROG.42e  = $(ADDLIBSTORE)${PROG:.lib=${D4GL_CLIB_EXT}
	PROG.4ge  = $(ADDLIBSTORE)${PROG:.lib=${I4GL_CLIB_EXT}}
	PROG.4gi  = $(ADDLIBSTORE)${PROG:.lib=${I4GL_LIB_EXT}}
	PROG.4qe  = $(ADDLIBSTORE)${PROG:.lib=${Q4GL_LIB_EXT}}
    ifeq "${LIBS_LINK}" "SHARED"
		#aubit shared library
		PROG.4ae  = $(ADDLIBSTORE)${PROG:.lib=${A4GL_SOL_EXT}}
	else
		#aubit static library
		PROG.4ae  = $(ADDLIBSTORE)${PROG:.lib=${A4GL_LIB_EXT}}
    endif
else
    #we are making a program
    ifeq "$(POINTTOSTORE)" "1"
		ADDEXECSTORE=${EXECSTORE}
    endif
	PROG.42r  = ${ADDEXECSTORE}${PROG}${D4GL_PRG_EXT}
	PROG.42e  = ${ADDEXECSTORE}${PROG}${D4GL_CPRG_EXT}
	PROG.4ge  = ${ADDEXECSTORE}${PROG}${I4GL_CPRG_EXT}
	PROG.4gi  = ${ADDEXECSTORE}${PROG}${I4GL_PRG_EXT}
	PROG.4qe  = ${ADDEXECSTORE}${PROG}${Q4GL_PRG_EXT}
	PROG.4ae  = ${ADDEXECSTORE}${PROG}${A4GL_PRG_EXT}
endif

# =======================================================================
#       Set extensions for compiling library/objects/forms/help files
# =======================================================================

#Libraries:
	ifeq "$(POINTTOSTORE)" "1"
		ADDLIBSTORE=$(LIBSTORE)
	endif
	FILES.42x = $(addprefix $(ADDLIBSTORE), ${FILES.lib:.lib=${D4GL_LIB_EXT}})
	FILES.42o = $(addprefix $(ADDLIBSTORE), ${FILES.lib:.lib=${D4GL_CLIB_EXT}})
	FILES.4gx = $(addprefix $(ADDLIBSTORE), ${FILES.lib:.lib=${I4GL_LIB_EXT}})
	FILES.4cx = $(addprefix $(ADDLIBSTORE), ${FILES.lib:.lib=${I4GL_CLIB_EXT}})
	FILES.qox = $(addprefix $(ADDLIBSTORE), ${FILES.lib:.lib=${Q4GL_LIB_EXT}})
    ifeq "${LIBS_LINK}" "SHARED"
		FILES.aox = $(addprefix $(ADDLIBSTORE), ${FILES.lib:.lib=${A4GL_SOL_EXT}})
    else
		FILES.aox = $(addprefix $(ADDLIBSTORE), ${FILES.lib:.lib=${A4GL_LIB_EXT}})
    endif
#OBJECTS
	ifeq "$(POINTTOSTORE)" "1"
		ADDOBJSTORE=${OBJSTORE}
	endif
	FILES.42m = $(addprefix ${ADDOBJSTORE}, ${FILES.4gl:.4gl=${D4GL_OBJ_EXT}})
	FILES.4go = $(addprefix ${ADDOBJSTORE}, ${FILES.4gl:.4gl=${I4GL_OBJ_EXT}})
	FILES.qo  = $(addprefix ${ADDOBJSTORE}, ${FILES.4gl:.4gl=${Q4GL_OBJ_EXT}})
	ifeq "${OBJS_LINK}" "SHARED"

        #FIXME: we neet to take out the 4gl file from FILES.4gl list, that
        #contatins MAIN block, as it will still need to be compiles to static 
		#object that will be made in executable, since shared libraries
        #created here will need bot be passes as -l[lib]name on linking line -
        #they will also need [lib] prefix added!

		FILES.ao  = $(addprefix ${ADDOBJSTORE}, ${FILES.4gl:.4gl=${A4GL_SOB_EXT}})
    else
		FILES.ao  = $(addprefix ${ADDOBJSTORE}, ${FILES.4gl:.4gl=${A4GL_OBJ_EXT}})
    endif
#FORMS
	ifeq "$(POINTTOSTORE)" "1"
		ADDFORMSTORE=${FORMSTORE}
	endif
	FILES.42f = $(addprefix ${ADDFORMSTORE}, ${FILES.per:.per=${D4GL_FRM_EXT}})
	FILES.frm = $(addprefix ${ADDFORMSTORE}, ${FILES.per:.per=${I4GL_FRM_EXT}})
	FILES.afr = $(addprefix ${ADDFORMSTORE}, ${FILES.per:.per=${A4GL_FRM_EXT}})
	FILES.pic = $(addprefix ${ADDFORMSTORE}, ${FILES.per:.per=${Q4GL_FRM_EXT}})

#HELP
	ifeq "$(POINTTOSTORE)" "1"
		ADDHELPSTORE=${HELPSTORE}
	endif
	FILES.42h = $(addprefix ${ADDHELPSTORE}, ${FILES.msg:.msg=${D4GL_HLP_EXT}})
	FILES.iem = $(addprefix ${ADDHELPSTORE}, ${FILES.msg:.msg=${I4GL_HLP_EXT}})
	FILES.hlp = $(addprefix ${ADDHELPSTORE}, ${FILES.msg:.msg=${A4GL_HLP_EXT}})
	FILES.qms = $(addprefix ${ADDHELPSTORE}, ${FILES.msg:.msg=${Q4GL_HLP_EXT}})

# =======================================================================
#                   Define Clean target settings
# =======================================================================

#Program targets:
DEBRIS.prog 		= ${PROG.42r} ${PROG.42e} ${PROG.4ge} ${PROG.4gi} ${PROG.4ae}

#objects and help files:
DEBRIS.d4gl 		= 	${FILES.42m} 	${FILES.42h}
DEBRIS.i4gl 		= 	${FILES.4go} 	${FILES.iem}
DEBRIS.aubit 		= 	${FILES.ao} 	${FILES.hlp}

#C compilers intermediate files
DEBRIS.aubit 		+= ${FILES.4gl:.4gl=.c} ${FILES.4gl:.4gl=.h} ${FILES.4gl:.4gl=.glb}

#Forms
DEBRIS.aubit.forms 	= ${FILES.afr} ${FILES.per:.per=.c}
DEBRIS.i4gl.forms 	= ${FILES.frm}


ifneq "$(FILES.lib)" ""
	DEBRIS.aubit.libs =	${LIBSTORE}${FILES.aox}
	DEBRIS.d4gl.libs =	${LIBSTORE}${FILES.42x}
endif

#Common rubbish:
DEBRIS.common 		= *.bak *.err

# =======================================================================
#                         Targets dependencies
# =======================================================================

# WARNING!!!! VPATH can dissapear for second variable in dependency list,
# if $^ is placed within ifeq or ifneq !!!!!!! (probably a make bug)
# This is the reason why we will put all dependencies in one variable before
# we need them:
#NOTE: I've seen the case where make finds .aox in another firectory (using VPATH)
#and does not try to remake it, and then DOES NOT find it any more, UNTILL YOU
#DELETE IT AND RE-MAKE IT, and THEN it finds is - no idea why, but if something
#like that happnes, do a full clean, and thern remake everything (or whatever
#fails to link...)
AUBIT_DEPS		=${FILES.ao} ${FILES.aox}
D4GL_PCODE_DEPS	=${FILES.42m} ${FILES.42x}
D4GL_CCODE_DEPS	=${FILES.42o} ${FILES.42o}
I4GL_PCODE_DEPS	=${FILES.4go} ${FILES.4gx}
I4GL_CCODE_DEPS	=${FILES.o} ${FILES.4cx}
QUERIX_DEPS		=${FILES.qo} ${FILES.qox}

# =======================================================================
#                              Targets
# =======================================================================


default:	${DEFAULT}

all:	aubit querix d4gl-pcode d4gl-ccode i4gl-pcode i4gl-ccode

touch.all: ${FILES.4gl} ${FILES.per} ${FILES.msg}
	@touch -c $^
	@echo "Touched all source files of this program/library"

# =======================================================================
#                      Compiler dependent Targets
# =======================================================================

#addind libraries in first place is an attempt to cause libs to exist in the moment
#make reaches prgram target, examine dependencies, applies VPATH and hopefully
#finds them. If this does not help, remove it, since it's redundant:
#aubit	  :	${FILES.aox} ${PROG.4ae} ${FILES.afr} ${FILES.hlp}
aubit	  :	${PROG.4ae} ${FILES.afr} ${FILES.hlp}
d4gl-pcode:	${FILES.42x} ${PROG.42r} ${FILES.42f} ${FILES.42h}
d4gl-ccode:	${FILES.42o} ${PROG.42e} ${FILES.42f} ${FILES.42h}
i4gl-pcode:	${FILES.4gx} ${PROG.4gi} ${FILES.frm} ${FILES.iem}
i4gl-ccode:	${FILES.4cx} ${PROG.4ge} ${FILES.frm} ${FILES.iem}
querix    : ${FILES.qox} ${PROG.4qe} ${FILES.pic} ${FILES.qms}
plexus:

# =======================================================================
#                            Aubit Targets
# =======================================================================


${PROG.4ae}:${AUBIT_DEPS}
ifeq "$(PROGTYPE)" ".lib"
#-fPIC will apparently not work on AIX - we should autoconf this file
#--rpath${LIBSTORE} # -L${LIBSTORE}
	${FAIL_LINK}ld -fPIC -shared $^ -o ${xxEXECSTORE}$@
else
	${FAIL_LINK}${A4GL_CC} $^ -o ${xxEXECSTORE}$@ ${A4GL_CC_LDFLAGS}
endif
#	@echo CHANGED: $?

# =======================================================================
#                            4Js Targets
# =======================================================================

#########################
#Build P-code program
${PROG.42r}: ${D4GL_PCODE_DEPS}
#	${D4GL_PL} -o $@ $^ ${D4GL_PL_LDFLAGS}
	${FAIL_LINK}fgllink -O -o $@ $^ ${FGLDIR}/lib/libfgl4js.42x ${D4GL_PL_LDFLAGS}

########################
#Build C-code program
#${PROG.42e}:	${DBASE.sch} ${FILES.42o}
${PROG.42e}: ${D4GL_CCODE_DEPS}
	${D4GL_CL} -o $@ ${FILES.42o} ${D4GL_CL_LDFLAGS}

# =======================================================================
#                            Informix Targets
# =======================================================================

#########################
#Build P-code program
#this will fail in cases we are making ${FILES.4gx} outsid ecurrent dir on the fly,
#because ${FILES.4gx} file names will not include path, since VPATH was
#already examined. On the second run, ti will work OK.
${PROG.4gi}: ${I4GL_PCODE_DEPS}
#	${I4GL_PL} -o $@ ${FILES.4go} ${I4GL_PL_LDFLAGS}
	${I4GL_PL} $^ > $@; if test "$$?" != "0"; then echo "CAT failed, removing $@"; rm $@; fi
#cat can fail because of missing files in link line, but it will still
#create a file

########################
#Build C-code program
${PROG.4ge}: ${I4GL_CCODE_DEPS}
	${I4GL_CC} -o $@ ${FILES.o}   ${I4GL_CC_LDFLAGS}


# =======================================================================
#                            Querix Targets
# =======================================================================

########################
#Build C-code program
${PROG.4qe}: ${QUERIX_DEPS}
ifeq "${VERBOSE}" "1"
	@echo "Linking Querix: $@"
endif
ifeq "$(PROGTYPE)" ".lib"
ifeq "${PROG}" "dummy.lib"
	@echo Name dummy.lib was used, final linking skipped.
else
#It looks like we should not use -shared for Querix?
#but id we do, we need to sully it as -lname on link line!
	ld -fPIC -shared $^ -o ${xxEXECSTORE}$@ ${Q4GL_CL_LDFLAGS} ${QXI_LIBS}
#...but this causes a lot of undefined crap
#	ld -fPIC -static $^ -o ${xxEXECSTORE}$@ #--rpath${LIBSTORE} # -L${LIBSTORE}
#and so does this:
#	qxcc ${CFLAGS} -o $@ $^ $(LDLIBS)
endif
else
#	${FAIL_LINK}${Q4GL_CL} -rdynamic -o $@ $^ ${Q4GL_CL_LDFLAGS} ${QXI_LIBS}
#regardless of this -rpath, GCC determined that he can't find libraries,
#probably without passing line to ld at all. We will need to use LD directly...
	${FAIL_LINK}${Q4GL_CL} -Wl,-rpath ${SCWORK}/common -rdynamic -o $@ $^ ${Q4GL_CL_LDFLAGS} ${QXI_LIBS}
#cannt do this:
#	${FAIL_LINK}ld -rpath ${SCWORK}/common $^ -o ${xxEXECSTORE}$@ ${Q4GL_CL_LDFLAGS} ${QXI_LIBS}
endif
ifeq "${VERBOSE}" "1"
	@echo "$@: OK"
endif

# =======================================================================
#                          Define dependencies
# =======================================================================

#is this causing everything to recompile when GLOBALS file is changed?
#No, something else...
# Object file dependencies
${FILES.42m}:	${GLOBALS.4gl} ${DBASE.sch}
${FILES.42o}:	${GLOBALS.4gl} ${DBASE.sch}
${FILES.4go}:	${GLOBALS.4gl}
${FILES.o}:		${GLOBALS.4gl}
${FILES.ao}:	${GLOBALS.4gl}

# =======================================================================
#                          Install Targets
# =======================================================================


install: ${FILES.42m} ${PROG.42r} ${FILES.42f} ${FILES.42h}
	mv ${FILES.42m} ${PROG.42r} ${MAXDIR}/gprog
	-mv ${FILES.42h} ${MAXDIR}/gprog
	-mv ${FILES.42f} ${MAXDIR}/gform

# =======================================================================
#                          Clean Targets
# =======================================================================

clean.target:
	${RM} ${DEBRIS.prog}
	@echo "All targets deleted"

clean: clean.target
	${RM} ${DEBRIS.i4gl} ${DEBRIS.d4gl} ${DEBRIS.aubit} ${DEBRIS.common}
	@echo "All intermediate files and target deleted"

clean.most: clean
	${RM} ${DEBRIS.aubit.forms} ${DEBRIS.i4gl.forms}
	@echo "All forms deleted"

clean.all: clean.most
	${RM} ${DEBRIS.aubit.libs}
	@echo "All libraries deleted"

# =======================================================================
#                          Help
# =======================================================================

help:
	@echo "Targets: (default=${DEFAULT})"
	@echo "CLEAN: clean.target clean clean.most clean.all"
	@echo "PROG: aubit d4gl-pcode d4gl-ccode i4gl-pcode i4gl-ccode querix all"
	@echo "FORMS: aubitforms"
	@echo "INSTALL: install"

# =======================================================================
#                  Debugging and misc. targets
# =======================================================================

debug:
	@echo ***DEBUG 1:*** ${FILES.ao}

enddebug:
	@echo ***DEBUG END***

show:
	@echo DEFAULT=${DEFAULT}
	@echo MKTARGET=${MKTARGET}
	@echo VPATH= ${VPATH}
	@echo USEVPATH=${USEVPATH}
	@echo USESTORE=${USESTORE}
	@echo MOVETOSTORE=${MOVETOSTORE}
	@echo FILES.per = ${FILES.per}
	@echo SET_VPATH_GLOB  =${SET_VPATH_GLOB}
	@echo SET_VPATH_4GL	  =${SET_VPATH_4GL}
	@echo SET_VPATH_MK    =${SET_VPATH_MK}
	@echo SET_VPATH_PER   =${SET_VPATH_PER}
	@echo SET_VPATH_FRM   =${SET_VPATH_FRM}
	@echo SET_VPATH_OBJ   =${SET_VPATH_OBJ}
	@echo SET_VPATH_PRG   =${SET_VPATH_PRG}
	@echo SET_VPATH_LIB   =${SET_VPATH_LIB}
	@echo SET_VPATH_HLP   =${SET_VPATH_HLP}
	@echo EXTENSIONS: ${FRM} ${OBJ} ${PRG} ${LIB} ${HLP}


# =============================== EOF ==================================