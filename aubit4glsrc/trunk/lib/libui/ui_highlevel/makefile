# +----------------------------------------------------------------------+
# | Aubit 4gl Language Compiler Version $.0                              |
# +----------------------------------------------------------------------+
# | Copyright (c) 2000-1 Aubit Development Team (See Credits file)       |
# +----------------------------------------------------------------------+
# | This program is free software; you can redistribute it and/or modify |
# | it under the terms of one of the following licenses:                 |
# |                                                                      |
# |  A) the GNU General Public License as published by the Free Software |
# |     Foundation; either version 2 of the License, or (at your option) |
# |     any later version.                                               |
# |                                                                      |
# |  B) the Aubit License as published by the Aubit Development Team and |
# |     included in the distribution in the file: LICENSE                |
# |                                                                      |
# | This program is distributed in the hope that it will be useful,      |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of       |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        |
# | GNU General Public License for more details.                         |
# |                                                                      |
# | You should have received a copy of both licenses referred to here.   |
# | If you did not, or have any questions about Aubit licensing, please  |
# | contact afalout@ihug.co.nz                                           |
# +----------------------------------------------------------------------+

#
# $Id: makefile,v 1.12 2004-02-09 08:07:52 mikeaubury Exp $
#

LIBROOT		=../..
ROOT		=../../..

#All stuff common to more then one Aubit compiler make file is there:
include ${ROOT}/incl/Makefile-common

## ==================================================================
##                              GTK+ Options
## ==================================================================


ifeq "${WIN_PATH}" "1"
	#under cygwin path /usr/lib/ is actailly a symling to /lib, but "real" Windows
    #app (like MingGW) don't know anythign about links! So for now we will add path to
    #there.   -ID:/cygwin/usr/lib/glib-2.0/include
    ADD_ME		=-I${WIN_CYGPATH}/lib/glib-2.0/include -I${WIN_CYGPATH}/lib/gtk-2.0/include

	GLIB_CFLAGS	:=$(subst -I,-I${WIN_CYGPATH},${GLIB_CFLAGS}) ${ADD_ME}
	GTK_INC_PATH:=$(subst -I,-I${WIN_CYGPATH},${GTK_INC_PATH}) ${ADD_ME}
	GTK_LIB_PATH:=$(subst -I,-I${WIN_CYGPATH},${GTK_LIB_PATH}) ${ADD_ME}
endif

GTKLIBS			:=$(subst -rdynamic,,${GTKLIBS})

#Need to find better sollution for this:
GTKLIBS			:=$(subst -lintl,-lintl-1,${GTKLIBS})

CFLAGS			+=-I.. -I. -I${ROOT}/incl ${GLIB_CFLAGS} ${GTK_INC_PATH} ${GTK_LIB_PATH}

CFLAGS			:=$(subst /target/build,/usr,${CFLAGS})
GTK_LIB_PATH    :=$(subst /target/build,/usr,${GTK_LIB_PATH})

CFLAGS		 	:=$(subst /target,/usr,${CFLAGS})
GTK_LIB_PATH 	:=$(subst /target,/usr,${GTK_LIB_PATH})

#-mms-bitfields or -fnative-struct

ifeq "${WIN_PATH}" "1"
	GTK_LIB_PATH 	:=$(subst -L,-L${WIN_CYGPATH},${GTK_LIB_PATH})  -L${WIN_CYGPATH}/lib
endif

#we don't want -Wall in CFLAGS when compiling form_x_xdr.c because it would
#give us bunch of warnings about unised varibles, that we cannot fix
#because this file is generated by rpcgen:
CFLAGS_FORM_X_XDR_C =$(CFLAGS:%-Wall=%)



# We don't want -Wmissing-declarations and -Wmissing-prototypes when
# compiling C code created by 4glc, since it is not creating prototypes,
# so we get lots of warnings:
CFLAGS_4GLC2 		=$(CFLAGS:%-Wmissing-declarations=%)
CFLAGS_4GLC1 		=$(CFLAGS_4GLC2:%-Wmissing-prototypes=%)
CFLAGS_4GLC 		=$(CFLAGS_4GLC1:%-Wstrict-prototypes=%)

#we cannot compile GTK code with  -Wstrict-prototypes because
#GTK+ supplied libraries have many functions declared without parameters
CFLAGS_GTK_C 		=$(CFLAGS:%-Wstrict-prototypes=%)

#Fails with error: initializer element is not computable at load time:
ifeq "${NON_PEDANTIC_OK}" "1"
	CFLAGS_4GLC 	:=$(CFLAGS_4GLC:%-pedantic=%)
endif

ifeq "${GTKBUILD}" "yes"
	ALL+=${LIBROOT}/libUI_HL_GTK${SO_EXT}
endif

## ==================================================================
##                              Curses Options
## ==================================================================

#must be BEFORE system paths:
CFLAGS			:=${CURSES_INC_PATH} -I/usr/include/ncurses ${CFLAGS} -I.. -I. -I${ROOT}/incl
#Note: On CygWin term.h is in -I/usr/include/ncurses


ifneq "${HAVE_CURSES}" "0"
	ALL			+= ${LIBROOT}/libUI_HL_TUI${SO_EXT} ${LIBROOT}/libUI_HL_TUIN${SO_EXT}
else
	ifneq "${HAVE_PDCURSES}" "0"
		ALL			+=${LIBROOT}/libUI_HL_TUIN${SO_EXT}
	endif
endif

ifeq "${NON_PEDANTIC_OK}" "1"
	CFLAGS_NO_PEDANTIC  =$(CFLAGS:%-pedantic=%)
else
	CFLAGS_NO_PEDANTIC  =${CFLAGS}
endif

## ==================================================================
##                              Common Options
## ==================================================================


ifeq "${TARGET_OS}" "cygwin"
	LINKLIBS	=-L${LIBROOT} -laubit4gl
endif

#ALL				+=${LIBROOT}/libUI_HLGENERIC${SO_EXT} 


#old stuff - replace/remove
#GTK_INC_PATH    =-I/usr/local/include/gtk-2.0 -I/usr/local/lib/gtk-2.0/include \
#				-I/usr/local/include/atk-1.0 -I/usr/local/include/pango-1.0 -I/usr/X11R6/include \
#				-I/usr/local/include/glib-2.0 -I/usr/local/lib/glib-2.0/include
#GTK_LIB_PATH    =-L/usr/local/lib
#GTKLIBS         =-lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0

#Now in Makefile-common.in :
#GLIB_CFLAGS		=@GLIB_CFLAGS@
#GTK_INC_PATH	=@GTK_INC_PATH@
#GTK_LIB_PATH	=@GTK_LIB_PATH@
#GTKLIBS			=@GTKLIBS@




CFLAGS			+=-g -I${ROOT}/incl -I.. -I${LIBROOT}/libaubit4gl


## ==================================================================
##                              Source files
## ==================================================================


OBJS= forms.o generic_ui.o menu.o display_array.o formcntrl.o input_array.o misc.o

## ==================================================================
##                              Targets
## ==================================================================

all: ${ALL}
	@echo "Default trgets (${ALL}) compiled sucessfuly."

#${LIBROOT}/libUI_HLGENERIC${SO_EXT}: $(OBJS) API_lowlevel.o
#	gcc -L${ROOT}/lib -rdynamic -shared $(OBJS) API_lowlevel.o -o libUI_HLGENERIC${SO_EXT} -laubit4gl
#	cp *${SO_EXT} ../..
#	${LD} ${SO_LDFLAGS} -o $@ $^ ${LINKLIBS}

${LIBROOT}/libUI_HL_TUI${SO_EXT}: $(OBJS) lowlevel_tui.o
#	gcc -L${ROOT}/lib -rdynamic -shared $(OBJS) lowlevel_tui.o -o libUI_HL_TUI${SO_EXT} -laubit4gl -lform -lpanel -lcurses
#	cp *${SO_EXT} ../..
	${LD} ${SO_LDFLAGS} -o $@ $^ ${LINKLIBS} ${CURSES_LIB_NAME} ${CURSES_LIB_PATH}


${LIBROOT}/libUI_HL_TUIN${SO_EXT}: $(OBJS) lowlevel_tui_noform.o form_tui.o
	${LD} ${SO_LDFLAGS} -o $@ $^ ${LINKLIBS} -lpanel -lcurses  ${CURSES_LIB_PATH}

${LIBROOT}/libUI_HL_GTK${SO_EXT}: $(OBJS) lowlevel_gtk.o widget_gtk.o
#	gcc -rdynamic -shared $(OBJS) lowlevel_gtk.o widget_gtk.o  -o libUI_HL_GTK${SO_EXT} -laubit4gl $(GTK_INC_PATH) $(GTK_LIB_PATH) $(GTKLIBS)
#	cp *${SO_EXT} ../..
	${LD} ${SO_LDFLAGS} -o $@ $^ ${LINKLIBS} ${GTK_LIB_PATH} ${GTKLIBS}

## ==================================================================
##                              Sub-Targets
## ==================================================================


API_lowlevel.c: ${LIBROOT}/libaubit4gl/API_lowlevel.spec API_lowlevel.h a4gl_API_lowlevel.h
	(cd ${LIBROOT}/libaubit4gl && ${SH} ../bin/dlmagic ./API_lowlevel.spec > ../libui/ui_highlevel/API_lowlevel.c)

#is this now obsolete?
API_lowlevel.h: ../../libaubit4gl/API_lowlevel.spec
	(cd ${LIBROOT}/libaubit4gl && ${SH} ../bin/dlmagic ./API_lowlevel.spec -h > ../libui/ui_highlevel/API_lowlevel.h)


#so is it now only this one, or...
a4gl_API_lowlevel.h: ../../libaubit4gl/API_lowlevel.spec
	(cd ${LIBROOT}/libaubit4gl && ${SH} ../bin/dlmagic ./API_lowlevel.spec -h > ../libui/ui_highlevel/a4gl_API_lowlevel.h)


lowlevel_tui.o: lowlevel/lowlevel_tui.c
	${CC} ${CFLAGS} -c -I$(ROOT)/incl -I. -Ilowlevel $^ -o $@

lowlevel_tui_noform.o: lowlevel/lowlevel_tui.c
	${CC} ${CFLAGS} -DNO_CURSES_FORM -c -I$(ROOT)/incl -I. -Ilowlevel $^ -o $@
form_tui.o: lowlevel/form_tui.c
	${CC} ${CFLAGS} -c -I$(ROOT)/incl -I. -Ilowlevel $^ -o $@

lowlevel_gtk.o: lowlevel/lowlevel_gtk.c API_lowlevel.h
	${CC} ${CFLAGS_GTK_C} -c -I$(ROOT)/incl -I. -Ilowlevel $< -o $@ $(GTK_INC_PATH)

widget_gtk.o: lowlevel/widget_gtk.c
	${CC} ${CFLAGS_GTK_C} -c -I$(ROOT)/incl -I. -Ilowlevel $^ -o $@ $(GTK_INC_PATH)

#All objects depend on API headers:
${OBJS}: ${ROOT}/incl/a4gl_API_lex.h ${ROOT}/incl/a4gl_API_form.h ${ROOT}/incl/a4gl_API_menu.h \
	${ROOT}/incl/a4gl_API_msg.h ${ROOT}/incl/a4gl_API_packer.h ${ROOT}/incl/a4gl_API_ui.h a4gl_API_lowlevel.h

#Rule to generate API's:
${ROOT}/incl/a4gl_API_%.h :
	${MAKE} -C ${LIBROOT}/libaubit4gl api


## ==================================================================
##                              Test
## ==================================================================

testit:  $(OBJS) testit.o API_lowlevel.o
	${CC} -L${ROOT}/lib $^  -o testit -laubit4gl ${CURSES_LIB_NAME} ${CURSES_LIB_PATH}

## ==================================================================
##                              Clean
## ==================================================================

clean:
	${RM} *${SO_EXT} *.o *.bak testit API_lowlevel.c API_lowlevel.h \
	lowlevel/*.bak a4gl_API_lowlevel.h


