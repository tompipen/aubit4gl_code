# +----------------------------------------------------------------------+
# | Aubit 4gl Language Compiler Version $.0   lib/libgui makefile		 |
# +----------------------------------------------------------------------+
# | Copyright (c) 2000-1 Aubit Development Team (See Credits file)       |
# +----------------------------------------------------------------------+
# | This program is free software; you can redistribute it and/or modify |
# | it under the terms of one of the following licenses:                 |
# |                                                                      |
# |  A) the GNU General Public License as published by the Free Software |
# |     Foundation; either version 2 of the License, or (at your option) |
# |     any later version.                                               |
# |                                                                      |
# |  B) the Aubit License as published by the Aubit Development Team and |
# |     included in the distribution in the file: LICENSE                |
# |                                                                      |
# | This program is distributed in the hope that it will be useful,      |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of       |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        |
# | GNU General Public License for more details.                         |
# |                                                                      |
# | You should have received a copy of both licenses referred to here.   |
# | If you did not, or have any questions about Aubit licensing, please  |
# | contact afalout@ihug.co.nz                                           |
# +----------------------------------------------------------------------+

#
# $Id: Makefile.in,v 1.14 2003-04-25 15:23:22 mikeaubury Exp $
#

LIBROOT		=../..
ROOT		=../../..

#All stuff common to more then one Aubit compiler make file is there:
include ${ROOT}/incl/Makefile-common

## ==================================================================
##                              Options
## ==================================================================

GLIB_CFLAGS		=@GLIB_CFLAGS@
GTK_INC_PATH	=@GTK_INC_PATH@
GTK_LIB_PATH	=@GTK_LIB_PATH@
GTKLIBS			=@GTKLIBS@

ifeq "${WIN_PATH}" "1"
	#under cygwin path /usr/lib/ is actailly a symling to /lib, but "real" Windows
    #app (like MingGW) don't know anythign about links! So for now we will add path to
    #there.   -ID:/cygwin/usr/lib/glib-2.0/include
    ADD_ME		=-I${WIN_CYGPATH}/lib/glib-2.0/include -I${WIN_CYGPATH}/lib/gtk-2.0/include

	GLIB_CFLAGS	:=$(subst -I,-I${WIN_CYGPATH},${GLIB_CFLAGS}) ${ADD_ME}
	GTK_INC_PATH:=$(subst -I,-I${WIN_CYGPATH},${GTK_INC_PATH}) ${ADD_ME}
	GTK_LIB_PATH:=$(subst -I,-I${WIN_CYGPATH},${GTK_LIB_PATH}) ${ADD_ME}
endif

GTKLIBS			:=$(subst -rdynamic,,${GTKLIBS})

#Need to find better sollution for this:
GTKLIBS			:=$(subst -lintl,-lintl-1,${GTKLIBS})

CFLAGS			+=-I.. -I. -I${ROOT}/incl ${GLIB_CFLAGS} ${GTK_INC_PATH} ${GTK_LIB_PATH}

CFLAGS			:=$(subst /target/build,/usr,${CFLAGS})
GTK_LIB_PATH    :=$(subst /target/build,/usr,${GTK_LIB_PATH})

CFLAGS		 	:=$(subst /target,/usr,${CFLAGS})
GTK_LIB_PATH 	:=$(subst /target,/usr,${GTK_LIB_PATH})



ifeq "${WIN_PATH}" "1"
	GTK_LIB_PATH 	:=$(subst -L,-L${WIN_CYGPATH},${GTK_LIB_PATH})  -L${WIN_CYGPATH}/lib
endif

ALL				+=${LIBROOT}/libUI_GTK${SO_EXT}

#we don't want -Wall in CFLAGS when compiling form_x_xdr.c because it would
#give us bunch of warnings about unised varibles, that we cannot fix
#because this file is generated by rpcgen:
CFLAGS_FORM_X_XDR_C =$(CFLAGS:%-Wall=%)

# We don't want -Wmissing-declarations and -Wmissing-prototypes when
# compiling C code created by 4glc, since it is not creating prototypes,
# so we get lots of warnings:
CFLAGS_4GLC2 		=$(CFLAGS:%-Wmissing-declarations=%)
CFLAGS_4GLC1 		=$(CFLAGS_4GLC2:%-Wmissing-prototypes=%)
CFLAGS_4GLC 		=$(CFLAGS_4GLC1:%-Wstrict-prototypes=%)

#we cannot compile GTK code with  -Wstrict-prototypes because
#GTK+ supplied libraries have many functions declared without parameters
CFLAGS_GTK_C 		=$(CFLAGS:%-Wstrict-prototypes=%)

#Fails with error: initializer element is not computable at load time:
ifeq "${NON_PEDANTIC_OK}" "1"
	CFLAGS_4GLC 	:=$(CFLAGS_4GLC:%-pedantic=%)
endif

ifeq "${TARGET_OS}" "cygwin"
	LINKLIBS		=-L${LIBROOT} -laubit4gl
endif



## ==================================================================
##                              Source files
## ==================================================================

#in alphabetycal order - please keep it this way:
ALLOBJ= \
	assist.o \
	cr_funcs.o color.o \
	display.o dialog.o d2.o disp_arr.o \
	error.o \
	fields.o frm.o \
	get_fld_val.o gtk_4gl.o \
	handler.o \
	input.o \
	menu.o \
	prompt.o params.o \
	signals.o \
	window.o widget.o

## ==================================================================
##                              Targets
## ==================================================================

all : ${ALL}
	@echo "Default targets (${ALL}) successfully compiled."

${LIBROOT}/libUI_GTK${SO_EXT}: ${ALLOBJ}
	${LD} ${SO_LDFLAGS} -o $@ $^ ${GTK_LIB_PATH} ${LINKLIBS} ${GTKLIBS}
#Need dll.a to link with libMENU_XDR - DO NOT REMOVE!
#ifeq "${SO_EXT}" ".dll"
#	${MV} TMP${SOEXP_EXT} $@.a
#endif

## ==================================================================
##                              Sub Targets
## ==================================================================

#both assist.c and assist.4gl are in CVS, to preven cyclical dependency
#between 4glc and some libraries.
#NOTE: do not add ${ROOT}/bin/4glc as dependency - it will cause assist.c to be
#re-created every time 4glc is recompiled, and since assis.c is in CVS, to be
#commited to CVS every time.
#BUT!!! if there is no ${ROOT}/bin/4glc dependency, if assist.4gl changed,
#make will fail, since this make file is invoked BEFORE 4glc is created!
#I decided to let user deal with missing 4glc when needed - just run 
#"make -C compilers/4glc" - better then to have 1000 versions of assist.c in CVS
assist.c: assist.4gl
	${ROOT}/bin/4glc -4 $^

assist.o: assist.c
	${CC} ${CFLAGS_4GLC} -c -o $@ $^

${ROOT}/bin/4glc:
	${MAKE} -C ${ROOT}/compilers/4glc

${ROOT}/compilers/fcompile/form_x.h:
	${MAKE} -C ${ROOT}/compilers/fcompile rpc

${ROOT}/compilers/fcompile/form_x_xdr.o: ${ROOT}/compilers/fcompile/form_x_xdr.c
	${CC} ${CFLAGS_FORM_X_XDR_C} -c -o $@ $^

%.o: %.c
	${CC} ${CFLAGS_GTK_C} -c -o $@ $^


##################
#debuging target - to show curent settings:
set:
	@echo CFLAGS: ${CFLAGS}
	@echo GTK_LIB_PATH: ${GTK_LIB_PATH}
	@echo LINKLIBS: ${LINKLIBS}
	@echo GTKLIBS: ${GTKLIBS}

## ==================================================================
##                              Dependencies
## ==================================================================

#widget.c: widget.h
#d2.c: ${ROOT}/compilers/fcompile/form_x.h

## ==================================================================
##                            Clean Targets
## ==================================================================

clean:
	${RM} *.o *${SO_EXT} menu_x_.h *.bak  *.ao *.err *.glb *.dll menu_x.h \
	menu_x_xdr.c *.a *.def *.glb *.ao debug.out *.err core form_x.h \
	gmon.out .\#*

#------------------------------- EOF --------------------------------

