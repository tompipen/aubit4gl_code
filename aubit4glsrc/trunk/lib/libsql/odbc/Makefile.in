# +----------------------------------------------------------------------+
# | Aubit 4gl Language Compiler Version $.0   lib makefile				 |
# +----------------------------------------------------------------------+
# | Copyright (c) 2000-1 Aubit Development Team (See Credits file)       |
# +----------------------------------------------------------------------+
# | This program is free software; you can redistribute it and/or modify |
# | it under the terms of one of the following licenses:                 |
# |                                                                      |
# |  A) the GNU General Public License as published by the Free Software |
# |     Foundation; either version 2 of the License, or (at your option) |
# |     any later version.                                               |
# |                                                                      |
# |  B) the Aubit License as published by the Aubit Development Team and |
# |     included in the distribution in the file: LICENSE                |
# |                                                                      |
# | This program is distributed in the hope that it will be useful,      |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of       |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        |
# | GNU General Public License for more details.                         |
# |                                                                      |
# | You should have received a copy of both licenses referred to here.   |
# | If you did not, or have any questions about Aubit licensing, please  |
# | contact afalout@ihug.co.nz                                           |
# +----------------------------------------------------------------------+

#
# $Id: Makefile.in,v 1.28 2003-02-14 12:49:31 mikeaubury Exp $
#

ROOT    =../../..
LIBROOT =../..

#All stuff common to more then one Aubit compiler make file is there:
include ${ROOT}/incl/Makefile-common

## ==================================================================
##                              Options
## ==================================================================

#FIXME: why do we need fcompile headers and RPC lib includes here?
C_LOCAL_IFLAGS  		=-I.. -I${LIBROOT}/compilers/fcompile
CFLAGS				+=${C_LOCAL_IFLAGS} 
#@RPCLIB_INCLUDE@
CFLAGS_NOREDUND			=$(CFLAGS:%-Wredundant-decls=%)
CFLAGS_NOSTRICTPROTO		=$(CFLAGS:%-Wstrict-prototypes=%)
LCLINT_CFLAGS   		=${C_IFLAGS} ${C_LOCAL_IFLAGS}
OBJECTS				=sql.o sqlex.o array.o


#`-rpath dir'
#           Add a directory to the runtime  library  search  path.
#           This  is  used  when  linking  an  ELF executable with
#           shared objects.  All `-rpath' arguments  are  concate­
#           nated  and  passed  to  the runtime linker, which uses
#           them  to  locate  shared  objects  at  runtime.    The
#           `-rpath'  option  is  also  used  when locating shared
#           objects which are needed by shared objects  explicitly
#           included  in  the  link;  see  the  description of the
#           `-rpath-link' option.  If `-rpath' is  not  used  when
#           linking  an  ELF executable, the contents of the envi­
#           ronment variable `LD_RUN_PATH' will be used if  it  is
#           defined.
LD_RUN_PATH =${INFORMIXDIR}/lib/esql
#IFX_RPATH	=-rpath ${INFORMIXDIR}/lib/esql

ifeq "${TARGET_OS}" "cygwin"
	LINKLIBS	=-L${LIBROOT} -laubit4gl
endif

## ==================================================================
##                              Targets
## ==================================================================

all :
	@echo "Must specify target (because clean is not working.)"
	@echo "Targets: iodbc unixodbc ifxodbc pgodbc odbc32 sapodbc allodbc"


allodbc: iodbc unixodbc ifxodbc pgodbc sapodbc

#we MUST always clean first, because we don't know for which libs where
#current object compiled, if they exists.
iodbc: 		clean ${LIBROOT}/libSQL_iodbc${SO_EXT}
	@echo "iODBC target compiled successfully"

unixodbc: 	clean ${LIBROOT}/libSQL_unixodbc${SO_EXT}
	@echo "unixODBC target compiled successfully"

ifxodbc: 	clean ${LIBROOT}/libSQL_ifxodbc${SO_EXT}
	@echo "Informix ODBC target compiled successfully"

pgodbc: 	clean ${LIBROOT}/libSQL_pgodbc${SO_EXT}
	@echo "PostgreSQL ODBC target compiled successfully"

sapodbc: 	clean ${LIBROOT}/libSQL_sapodbc${SO_EXT}
	@echo "SAP DB ODBC target compiled successfully"

odbc32: 	clean ${OBJECTS} ${LIBROOT}/libSQL_odbc32${SO_EXT}
#	${MAKE} libSQL_odbc32.dll DLLOBJS="${OBJECTS}" DLL_LDLIBS="${AUBIT_LIB} -lodbc32" DLL_LDFLAGS="-L${LIBROOT}"
#	${CP} libSQL_odbc32.dll ${LIBROOT}
#	${CP} libSQL_odbc32.dll.a ${LIBROOT}
${LIBROOT}/libSQL_odbc32${SO_EXT} : ${OBJECTS}
	${LD} ${SO_LDFLAGS} -o $@ $^ ${LINKLIBS} -lodbc32
ifeq "${SO_EXT}" ".dll"
	${MV} TMP${SOEXP_EXT} $@.a
endif
	@echo "Windows ODBC target compiled successfully"

${LIBROOT}/libSQL_iodbc${SO_EXT}: CFLAGS:=-DIODBC @IODBC_INCLUDE@ @IODBC_LFLAGS@ ${CFLAGS_NOREDUND}
${LIBROOT}/libSQL_iodbc${SO_EXT}: ${OBJECTS}
	${LD} ${SO_LDFLAGS} $^ -o $@ @IODBC_LIBS@ @IODBC_LFLAGS@

${LIBROOT}/libSQL_unixodbc${SO_EXT}: CFLAGS:=-DUNIXODBC @UNIXODBC_LFLAGS@ ${CFLAGS}
#@UNIXODBC_INCLUDE@
${LIBROOT}/libSQL_unixodbc${SO_EXT}: ${OBJECTS}
	${LD} ${SO_LDFLAGS} $^ -o $@ @UNIXODBC_LIBS@ @UNIXODBC_LFLAGS@

${LIBROOT}/libSQL_ifxodbc${SO_EXT}: CFLAGS:=-DIFXODBC -I${INFORMIXDIR} -I${INFORMIXDIR}/incl/cli -L${INFORMIXDIR}/lib/cli -L${INFORMIXDIR}/lib/esql ${CFLAGS_NOSTRICTPROTO}
${LIBROOT}/libSQL_ifxodbc${SO_EXT}: ${OBJECTS}
	${LD} ${SO_LDFLAGS} $^ -o $@ -lifcli -lifdmr ${IFX_RPATH} -L${INFORMIXDIR}/lib/cli -L${INFORMIXDIR}/lib/esql

${LIBROOT}/libSQL_pgodbc${SO_EXT}: CFLAGS:=-DPGODBC @PGODBC_INCLUDE@ @PGODBC_LFLAGS@ ${CFLAGS_NOREDUND}
${LIBROOT}/libSQL_pgodbc${SO_EXT}: ${OBJECTS}
	${LD} ${SO_LDFLAGS} $^ -o $@ -lpsqlodbc @PGODBC_LFLAGS@

${LIBROOT}/libSQL_sapodbc${SO_EXT}: CFLAGS:=-DSAPODBC @SAPODBC_INCLUDE@ @SAPODBC_LFLAGS@ ${CFLAGS_NOREDUND}
${LIBROOT}/libSQL_sapodbc${SO_EXT}: ${OBJECTS}
	${LD} ${SO_LDFLAGS} $^ -o $@ -lsqlod -lsqlrte -lpcr -lpthread -lm @SAPODBC_LFLAGS@

## ==================================================================
##                              Clean
## ==================================================================

.PHONY : clean
clean:
	${RM} *.o *.bak *${SO_EXT} *.base *.dll *.def *.exp *.a

## ----------------------------- EOF -------------------------------

