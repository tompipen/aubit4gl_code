# +----------------------------------------------------------------------+
# | Aubit 4gl Language Compiler Version $.0   lib makefile				 |
# +----------------------------------------------------------------------+
# | Copyright (c) 2000-1 Aubit Development Team (See Credits file)       |
# +----------------------------------------------------------------------+
# | This program is free software; you can redistribute it and/or modify |
# | it under the terms of one of the following licenses:                 |
# |                                                                      |
# |  A) the GNU General Public License as published by the Free Software |
# |     Foundation; either version 2 of the License, or (at your option) |
# |     any later version.                                               |
# |                                                                      |
# |  B) the Aubit License as published by the Aubit Development Team and |
# |     included in the distribution in the file: LICENSE                |
# |                                                                      |
# | This program is distributed in the hope that it will be useful,      |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of       |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        |
# | GNU General Public License for more details.                         |
# |                                                                      |
# | You should have received a copy of both licenses referred to here.   |
# | If you did not, or have any questions about Aubit licensing, please  |
# | contact afalout@ihug.co.nz                                           |
# +----------------------------------------------------------------------+

#
# $Id: Makefile.in,v 1.51 2003-06-18 10:30:23 mikeaubury Exp $
#

ROOT    	=../..
LIBROOT		=..

#All stuff common to more then one Aubit compiler make file is there:
include ${ROOT}/incl/Makefile-common

## ==================================================================
##                              Source files
## ==================================================================

CMODS_PROJECT	=project.c

#List of all Aubit API interfaces source files, part of libaubit4gl:
CMODS_API   = \
	API_ui.c API_exreport.c API_sql.c API_rpc.c \
	API_lex.c API_form.c API_menu.c API_msg.c API_packer.c API_help.c

#List of all non-API source files of libaubit4gl, -- IN ALPHABETIC ORDER -- :
COMMONSRC= \
	attributes.c \
	builtin.c builtin_d.c \
	calldll.c conv.c compat.c \
	data_if.c dates.c dmy.c  datatypes.c dataio.c \
	err.c error.c errfile.c extfile.c \
	fglwrap.c funcs_d.c function_call_stack.c \
	gtime.c gui_io.c gui.c \
	helper.c \
	io.c interval.c \
	keys.c \
	load.c \
	match.c maths.c memfile.c \
	others.c ops.c \
	pointers.c \
	read_dty.c readkeys.c report.c rexp2.c ${LIBROOT}/resource/resource.c \
	screen.c sqlconvert.c stack_ops.c stack.c string.c sqlca.c \
	translate.c

CMODS               =${COMMONSRC} ${LIBROOT}/generated/${CMODS_PROJECT} ${CMODS_API} debug.o
OBJS_API			=${CMODS_API:.c=.o}
OBJS				=${CMODS:.c=.o}

## ==================================================================
##                              Options
## ==================================================================

LIBINCL_PATH		=${LIBROOT}/libincl
INCL_PATH			=${ROOT}/incl
DLMAGIC				=${LIBROOT}/bin/dlmagic
ALL					=${LIBROOT}/libaubit4gl${SO_EXT_LINKABLE}
CFLAGS              +=-I.

#we don't want -Wall in CFLAGS when compiling form_x_xdr.c because it would
#give us bunch of warnings about unised varibles, that we cannot fix
#because this file is generated by rpcgen:
CFLAGS_FORM_X_XDR_C =$(CFLAGS:%-Wall=%)

#we cannot compile API code with  -Wstrict-prototypes because we use
#static int (*func)	(); which need variable number of parameters:
CFLAGS_API_C 		=$(CFLAGS:%-Wstrict-prototypes=%)

ifeq "${NON_PEDANTIC_OK}" "1"
	CFLAGS_NO_PEDANTIC  =$(CFLAGS:%-pedantic=%)
else
	CFLAGS_NO_PEDANTIC  =${CFLAGS}
endif

LCLINT_CFLAGS   	=${C_IFLAGS}

ifneq "${TARGET_OS}" "cygwin"
ifneq "${GCC_MINGW}" "yes"
	LINK_LIBS           =-ldl -lm
endif
endif

ifeq "${TARGET_OS}" "solaris"
	LINK_LIBS		+=-lsocket
endif

ifeq "${GCC_MINGW}" "yes"
	#LINK_LIBS		+=-lc
	#LINK_LIBS		+=-lgcc
	#strcasecmp():
	LINK_LIBS		+=-lmoldname
endif



ifeq "${TARGET_OS}" "darwin"
		#This is to make ONLY dlopen() loadable library, not a standard
        #shared one, ("bundle") so we will need separate setting for
		#libaubit4gl.dynlib
		#
		#cc -dynamiclib -install_name /usr/local/lib/libfoo.2.dylib \
		# -compatibility_version 2.4 -current_version 2.4.5 \
		# -o libfoo.2.4.5.dylib source.o code.o
		#rm -f libfoo.2.dylib libfoo.dylib
		#ln -s libfoo.2.4.5.dylib libfoo.2.dylib
		#ln -s libfoo.2.4.5.dylib libfoo.dylib
		#
		#Also note that the static linker will use the libfoo.dylib symlink,
		#while the dynamic linker will use the libfoo.2.dylib symlink. It is
		#possible to point these symlinks at different minor revisions of
		#the library.

        INST_PATH=$(INSTALL_DIR)/lib
		INST_NAME=${INST_PATH}/libaubit4gl${SO_EXT_LINKABLE}
        #INST_NAME=${AUBITDIR}/lib/libaubit4gl${SO_EXT_LINKABLE}

        SO_LDFLAGS1=$(SO_LDFLAGS:%-flat_namespace=%)
		SO_LDFLAGS2=$(SO_LDFLAGS1:%-bundle=%)
		SO_LDFLAGS3=$(SO_LDFLAGS2:%-undefined=%)
		#SO_LDFLAGS_NOBUNDLE=-r $(SO_LDFLAGS3:%suppress=%)
		SO_LDFLAGS_NOBUNDLE=-dynamiclib \
			-install_name ${INST_NAME} \
			$(SO_LDFLAGS3:%suppress=%)
        #FIXME: -install_name like this will not work after 'make install'!
        #since is in effect hard coded path to the lib file
		#we will have to link two libraries, one for use in source tree,
        #and one to install
else
		SO_LDFLAGS_NOBUNDLE=${SO_LDFLAGS}
endif


## ==================================================================
##                              Targets
## ==================================================================

all: ${ALL}
	@echo "Default targets (${ALL}) built successfully."

${LIBROOT}/libaubit4gl${SO_EXT_LINKABLE} : $(OBJS)
	${LD} ${SO_LDFLAGS_NOBUNDLE} -o $@ $^ ${LINK_LIBS}
ifeq "${TARGET_OS}" "darwin"
	${MKPATH} ${INST_PATH}
	${CP} $@ ${INST_PATH}
endif
ifeq "${SO_EXT_LINKABLE}" ".dll"
	${MV} TMP${SOEXP_EXT} $@.a
endif

## ==================================================================
##                             Sub Targets
## ==================================================================

ci: $(CMODS)
	ci -l  $^

project.o: ${LIBROOT}/generated/${CMODS_PROJECT}
	${CC} ${CFLAGS} -c -o $@ $^

${LIBROOT}/generated/project.c:
	(cd ${ROOT}/tools/project; ${SH} mkproject)

${LIBROOT}/generated/tmperrs.h :
	${SH} ${LIBROOT}/bin/mkerrors

${ROOT}/compilers/fcompile/form_x_xdr.c  ${ROOT}/compilers/fcompile/form_x.h:
	${MAKE} -C ${ROOT}/compilers/fcompile rpc

${ROOT}/compilers/fcompile/form_x_xdr.o: ${ROOT}/compilers/fcompile/form_x_xdr.c
	${CC} ${CFLAGS_FORM_X_XDR_C} -c -o $@ $^

#initializer element is not computable at load time:
builtin.o: builtin.c
	${CC} ${CFLAGS_NO_PEDANTIC} -c -o $@ $*.c
stack.o: stack.c
	${CC} ${CFLAGS_NO_PEDANTIC} -c -o $@ $*.c
stack_ops.o: stack_ops.c
	${CC} ${CFLAGS_NO_PEDANTIC} -c -o $@ $*.c
debug.o: debug.c
	${CC} ${CFLAGS_API_C} -c -o $@ $^

## ==================================================================
##                        Dependencies
## ==================================================================

error.c : ${LIBROOT}/generated/tmperrs.h
array.o: array.c ${ROOT}/compilers/fcompile/form_x_xdr.c
builtin.o API_ui.c: ${ROOT}/compilers/fcompile/form_x.h


## ==================================================================
##                         Other Targets
## ==================================================================

splint: lclint
lclint: $(CMODS)
	${LCLINTERR}${LCLINTEXE} ${LCLINTFLAGS} $(LCLINT_CFLAGS) $(CMODS) > ${LCLINTLOG} ${LCLINTLOGCMD}
	${CAT} ${LCLINTLOG} >> ${ROOT}/${LCLINT_GLOBAL_LOG}
	@echo "see ${LCLINTLOG} for results"

## ==================================================================
##                         API Targets
## ==================================================================

api: ${OBJS_API}

#API_ui.c API_exreport.c API_sql.c API_rpc.c where created manually and
#have no coresponding .spec file
#created headers are included via a4gl_libaubit4gl_int.h

API_msg.c: API_msg.spec
	${SH} ${DLMAGIC} $^ > $@
	${SH} ${DLMAGIC} $^ -h > ${INCL_PATH}/a4gl_$*.h

API_packer.c: API_packer.spec
	${SH} ${DLMAGIC} $^ > $@
	${SH} ${DLMAGIC} $^ -h > ${INCL_PATH}/a4gl_$*.h

API_menu.c: API_menu.spec
	${SH} ${DLMAGIC} $^ > $@
	${SH} ${DLMAGIC} $^ -h > ${INCL_PATH}/a4gl_$*.h

API_form.c: API_form.spec
	${SH} ${DLMAGIC} $^ > $@
	${SH} ${DLMAGIC} $^ -h > ${INCL_PATH}/a4gl_$*.h

API_lex.c: API_lex.spec
	${SH} ${DLMAGIC} $^ > $@
	${SH} ${DLMAGIC} $^ -h > ${INCL_PATH}/a4gl_$*.h

API_help.c: API_help.spec
	${SH} ${DLMAGIC} $^ > $@
	${SH} ${DLMAGIC} $^ -h > ${INCL_PATH}/a4gl_$*.h


API_%.o: API_%.c
	${CC} ${CFLAGS_API_C} -c -o $@ $^

## ==================================================================
##                        Clean Targets
## ==================================================================

clean : clean.generated
	${RM} $(OBJS) $(OBJS_DEBUG) menu_x.h menu_x_xdr.c \
		form_x_xdr.c form_x.h project.c core \
		*.out *.glb *${SO_EXT_LINKABLE} *.a  *.o  *.bak *.dll *.stackdump *.err \
		*.base *.exp *.def .\#*

clean.generated:
	${RM} ${LIBROOT}/generated/errdefs ${LIBROOT}/generated/tmperrs.h \
		${LIBROOT}/generated/project.c ${LIBROOT}/generated/project.o

#----------------------------------- EOF -------------------------------





