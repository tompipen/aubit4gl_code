class_definition:
	KW_CLASS identifier op_extends  { clr_variable(); clr_function_constants (); 
			this_module.module_variables.variables.variables.variables_len=0;
			this_module.module_variables.variables.variables.variables_val=0;
		}   op_private_define_section {
			if ($5) {
                                        set_uses_constants($5);
                                        merge_variable_list(&this_module.module_variables.variables, $5);
                                        sort_variables_v(&this_module.module_variables.variables);
			}
	} class_entries END_CLASS {
		$$=NULL;
	}
;



op_extends:
	| KW_EXTENDS identifier {
		/* Should probably read the parent definition here... */
		strcpy($<str>$,$<str>2);
	}
;

op_private_define_section: 
	/* All variables are private for a class atm.... */
	/* We may eventually allow public ones - so lets ensure they use the PRIVATE keyword for now */
	{$$=NULL;}
	 | KW_PRIVATE define_multiple { $$=$2;}
;




class_entries :
	class_entry  {
		$<module_entry_list>$=new_module_entry_list($1);
	}
	| class_entries class_entry {
		$<module_entry_list>$=append_module_entry_list($1,$2);
	}
;


class_entry: 
	func_def  {$$=$<module_entry>1;}
	| module_code  {$$=$<module_entry>1;}
	| whenever_cmd  {$$=$<module_entry>1;}
;

