/*
=====================================================================
                        Source: var2.rule
=====================================================================
*/


var_ident :  var2  
{
	if (scan_variable($<str>1)!=-1)
	{
		print_push_variable($<str>1);
		strcpy($<str>$,"?");
	}
}
;


var2 :
	DOLLAR  var3 {strcpy($<str>$,$<str>2);} | var3
;

var3:
        array_r_variable_or_ident // MJA 010503
	| identifier
	| var3  DOT aft_dot {sprintf($<str>$,"%s.%s",$<str>1,$<str>3);}
	| CHAR_VALUE DOT var3 DOT aft_dot {sprintf($<str>$,"\\\"%s\\\".%s.%s", A4GL_strip_quotes ($<str>1),$<str>3,$<str>5);}
;

aft_dot :
	MULTIPLY
	| array_r_varid
	| identifier
;



var_ident_ibind_ss :  var2  
{
	int sv_val;
	//printf("var_ident_ibind_ss : %s\n",$<str>1);
	sv_val=scan_variable($<str>1);

	if (strncmp($<str>1," a4gl_sub",9)==0) {
		// Its a substring of a variable
		sv_val=1;
	}

	if (sv_val!=-1&&(!system_var($<str>1)))
	{
		// Its a variable
		int z = 0,a = 0;
		//printf("add as bind\n");
		a=get_bind_cnt('i');
		z=add_bind('i',$<str>1);
		z-=a;
		$<sql_string>$=strdup(A4GL_set_var_sql(z));

	} else { 
		// Its a column
		$<sql_string>$=strdup(get_column_transform($<str>1));
	}
}
| var2 THRU var2 
{
char r1[256];
//char r2[256];
char buff[256];
char was_str[40000];
//char *ptr1;
//char *ptr2;
//int aa;
int z = 0,a = 0;
struct variable *v_r;
struct variable *v_1;
struct variable *v_2;
struct variable *v_loop;
        strcpy(was_str,"");


	split_record($<str>3,&v_r,&v_1,&v_2);

	v_loop=v_1;

	while (1) {
                //strcpy(kp,was_str);
                sprintf(buff,"%s.%s",r1,v_loop->names.name);

		if (scan_variable(buff)!=-1&&(!system_var(buff))) {
			a=get_bind_cnt('i');
			z=add_bind('i',buff);
			z-=a;
        	}

		for (a=0;a<z;a++)  {
			if (strlen(was_str)) {strcat(was_str,",");}
         		strcat(was_str,"?");
		}
		v_loop=get_next_variable(v_r,v_loop,v_2);
	}
	$<sql_string>$=strdup(was_str);
}
;



/* ================================ var2.rule ===================== */
