/*
=====================================================================
                        Source: general.rule
=====================================================================
*/

line_no		:
	LAST MINUS INT_VALUE {sprintf($<str>$,"%d",-1-(atoi($<str>3)));}
	| LAST {strcpy($<str>$,"-1");}
	| FIRST PLUS INT_VALUE {sprintf ($<str>$,"%d",atoi($<str>3)+1);}
	| FIRST {strcpy($<str>$,"1");}
	| INT_VALUE {strcpy($<str>$,$<str>1);}
	| variable {strcpy($<str>$,$<str>1);}
;

file_name	:	CHAR_VALUE | cvariable 
;

a_number	:	fgl_expr;

coords		:	a_number COMMA a_number {sprintf($<str>$,"%s,%s",$<str>1,$<str>3); }
;

display_coords	:	coords;

field_name	:	
		identifier {sprintf($<str>$,"\"%s\",1",$<str>1);}
		| INT_TO_ID OPEN_BRACKET identifier CLOSE_BRACKET { sprintf($<str>$,"int_to_id(%s)",$<str>3); }
		| identifier DOT INT_TO_ID OPEN_BRACKET identifier CLOSE_BRACKET { sprintf($<str>$,"int_to_id(%s.%s)",$<str>1,$<str>5); }
		| identifier OPEN_SQUARE arr_expr CLOSE_SQUARE
{sprintf($<str>$,"\"%s\",%s",$<str>1,$<str>3);}
			| identifier DOT MULTIPLY
{sprintf($<str>$,"\"%s.*\",1",$<str>1);}
			| identifier OPEN_SQUARE arr_expr CLOSE_SQUARE DOT MULTIPLY
{sprintf($<str>$,"\"%s.*\",%s",$<str>1,$<str>3);}
			| identifier DOT identifier 
{sprintf($<str>$,"\"%s.%s\",1",$<str>1,$<str>3);}
			| identifier OPEN_SQUARE arr_expr CLOSE_SQUARE DOT identifier
{sprintf($<str>$,"\"%s.%s\",%s",$<str>1,$<str>6,$<str>3);}
;

cursor_name	:	ident_or_var {
				print_pushchar($<str>1);
				addmap("Cursor",last_var,curr_func,yylineno,infilename);
			}
;


fetch_cursor_name	:	ident_or_var {sprintf($<str>$,"%s",$<str>1);};

win_name	:	ident_or_var {sprintf($<str>$,"%s",$<str>1);
addmap("Window",last_var,curr_func,yylineno,infilename);
}

;

open_win_name	:	ident_or_var {sprintf($<str>$,"%s",$<str>1);
addmap("Open Window",last_var,curr_func,yylineno,infilename);
}
;

form_name	: ident_or_var {sprintf($<str>$,"%s",$<str>1);
addmap("Form",last_var,curr_func,yylineno,infilename);
}
;

open_form_name	: ident_or_var {sprintf($<str>$,"%s",$<str>1);
addmap("Open Form",last_var,curr_func,yylineno,infilename);
}
;

opt_help_no		:	{strcpy($<str>$,"0");} | HELP INT_VALUE {strcpy($<str>$,$<str>2);};


identifier	: setident NAMED unsetident { 
			strcpy($<str>$,downshift($<str>2)) ;
}
/*
| reserved_word  { strcpy($<str>$,downshift($<str>1)) ; }
*/


;


ident_or_var	: setident ident_p2 unsetident {
			sprintf($<str>$,"%s",$<str>2) ;
			}  
;

ident_p2 : NAMED {
sprintf($<str>$,"\"%s_%s\"",clobber,downshift($<str>1)) ;
strcpy(last_var,downshift($<str>1));
} | VARIABLE OPEN_BRACKET var_or_string CLOSE_BRACKET
	{
		sprintf($<str>$,"aclfgli_str_to_id(%s)",$<str>3);
		sprintf(last_var,"->%s",$<str>3);
	}
;

var_or_string : var | CHAR_VALUE;

setident : {
		debug("Setident\n");
		/* chk4var=1; */
	strcpy($<str>$,"");
	   } ;

unsetident : 	{
		debug("Unsetident\n");
		chk4var=0;
		} ;
field_name2	:	identifier {sprintf($<str>$,"\"%s\",1",$<str>1);}
		| identifier OPEN_SQUARE arr_expr CLOSE_SQUARE
{sprintf($<str>$,"\"%s\",%s",$<str>1,$<str>3);}
			| identifier DOT MULTIPLY
{sprintf($<str>$,"\"%s.*\",1",$<str>1);}
			| identifier OPEN_SQUARE arr_expr CLOSE_SQUARE DOT MULTIPLY
{sprintf($<str>$,"\"%s.*\",%s",$<str>1,$<str>3);}
			| identifier DOT identifier 
{sprintf($<str>$,"\"%s.%s\",1",$<str>1,$<str>3);}
			| identifier OPEN_SQUARE arr_expr CLOSE_SQUARE DOT identifier
{sprintf($<str>$,"\"%s.%s\",%s",$<str>1,$<str>6,$<str>3);}
;

cvariable : variable {
debug("Scanvar=%d",scan_variable($<str>1)&15);
if ((scan_variable($<str>1)&15)!=0) {
yyerror("Only a character variable can be used for this");
YYERROR;
}
};


real_number : NUMBER_VALUE | DOT INT_VALUE {
		sprintf($<str>$,".%s",$<str>2);
};



reserved_word :
	PASSWORD
	|CHECK
	|CLEAR
	|CLIPPED
	|CLOSE
	|CONSTANT
	|CONSTRUCT
	|COUNT
	|OPTION
	|CYAN
	|HEADER
	|DBA
	|DBYNAME
	|AUDIT
	|KWLINE
	|MODE
	|DEFAULT
	|DEFAULTS
	|DEFER
	|DELIMITER
	|DESC
	|DESCENDING
	|DIM
	|DISABLE
	|DOWN
	|DOWNSHIFT
	|DROP
	|FOREIGN
	|EXISTS
	|YEAR
	|MONTH
	|DAY
	|SPACES
	|RESOURCE
	|COMMENT
	|DELETE
	|VALIDATE
	|ESCAPE
	|UPSHIFT
	|AVERAGE
	|UNDERLINE
	|MENU
	|DATE
;


/* ============================ general.rule ====================== */
