# +----------------------------------------------------------------------+
# | Aubit 4gl Language Compiler Version $.0   lib/libgui makefile		 |
# +----------------------------------------------------------------------+
# | Copyright (c) 2000-1 Aubit Development Team (See Credits file)       |
# +----------------------------------------------------------------------+
# | This program is free software; you can redistribute it and/or modify |
# | it under the terms of one of the following licenses:                 |
# |                                                                      |
# |  A) the GNU General Public License as published by the Free Software |
# |     Foundation; either version 2 of the License, or (at your option) |
# |     any later version.                                               |
# |                                                                      |
# |  B) the Aubit License as published by the Aubit Development Team and |
# |     included in the distribution in the file: LICENSE                |
# |                                                                      |
# | This program is distributed in the hope that it will be useful,      |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of       |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        |
# | GNU General Public License for more details.                         |
# |                                                                      |
# | You should have received a copy of both licenses referred to here.   |
# | If you did not, or have any questions about Aubit licensing, please  |
# | contact afalout@ihug.co.nz                                           |
# +----------------------------------------------------------------------+

#
# $Id: Makefile.in,v 1.24 2002-04-06 06:33:40 afalout Exp $
#

#All stuff common to more then one Aubit compiler make file is there:
include ../../incl/Makefile-common
override NOINCL=0

## ==================================================================
##                    Options
## ==================================================================

#FIXME: use 4glpc ONLY for 4gl code
4GLPC			=${SH} ../../bin/4glpc
4GLPCFLAGS		=-make-compile -Irules -L/lib -L../../lib -g -verbose -L. -I.

ifndef COMSPEC
	4GLPCFLAGS	+=${LINK_COMPILERS} #-ldl
#-rdynamic
#else
#	4GLPCFLAGS	+=${SO_GCCFLAGS}
endif

ALL				=rules.t 4glc

CFLAGS			+=-I../../lib -I../../lib/libincl -I../fcompile -Irules @RPCLIB_INCLUDE@ @CURSES_INC_PATH@

ifeq "@YACC@" "no"
	CFLAGS		+=-I../../tools/no_yacc/cygwin/compilers/4glc
	Y_TAB_C		=../../tools/no_yacc/cygwin/compilers/4glc/rules/generated/y.tab.c
else
	Y_TAB_C		=rules/generated/y.tab.c
endif

4GLCAOBJ		=mod.o 4glc.o map.o rules/generated/states.o \
				rules/generated/kw.o rules/generated/y.tab.o dim.o list.o

4GLCAOBJ_PERL   =${4GLCAOBJ} compile_perl.o compile_c_gtk.o
4GLCOBJ_PERL	=${4GLCAOBJ_PERL} lexer.o

ifeq "$(OUTPUTLANG)" "c"
	4GLCAOBJ	+=compile_c.o compile_c_gtk.o
endif

ifeq "$(OUTPUTLANG)" "perl"
	4GLCAOBJ	+=compile_perl.o compile_c_gtk.o
endif

4GLCOBJ			=${4GLCAOBJ} lexer.o

#this can be libaclshared too, so we wont use it for now:
#4GLC_DEPS       =../../lib/libaclall.a

## ==================================================================
##                              Targets
## ==================================================================

all: ${ALL}
	@echo "Default targets (${ALL}) successfully compield."

4glc: ${4GLCOBJ}
#	${4GLPC} ${4GLPCFLAGS} -o $@ ${4GLCOBJ}
#same as: why are we using 4glpc?
	${CC} ${CFLAGS} -L../../lib -o $@ ${4GLCOBJ} ${AUBIT_LIB}
#	 -lPDF_NOPDF -lRPC_NORPC
#-lm and -ldl are needed on Linux, but not on CygWin
	${CPEXE} $@${EXEEXT} ../../bin/$@${EXEEXT}

4glc_perl: ${4GLCOBJ_PERL}
#	${4GLPC} ${4GLPCFLAGS} 	${4GLCOBJ_PERL} ../../tools/test/libpdf-dummy.c -o 4glc_perl
	${4GLPC} ${4GLPCFLAGS} 	${4GLCOBJ_PERL} -o $@
	${CPEXE} $@${EXEEXT} ../../bin/$@${EXEEXT}

## ==================================================================
##                            Sub Targets
## ==================================================================


rules.t :
	make -C rules $(MKNAME)

rules/generated/y.tab.o: ${Y_TAB_C}
	$(CC) ${CFLAGS} -c -o $@ ${Y_TAB_C} @YYDEBUG@

${Y_TAB_C}:
#	make -C rules generated/y.tab.c $(MKNAME)
	make -C rules $(MKNAME)

## ==================================================================
##                            Dependencies
## ==================================================================

rules/generated/kw.c: rules.t
rules/generated/single_words.rule: rules.t
rules/generated/y.tab.c: rules.t
rules/generated/states.c: rules.t
mod.o: mod.c ${Y_TAB_C}


## ==================================================================
##                            Clean Targets
## ==================================================================

clean: clean.rules.generated
	${RM} *.o *.err 4glc 4glc-noodbc *.a *.exe *.bak .\#* 4glc_perl *.log

clean.rules.generated:
	(cd rules/generated; ${RM} *.yacc *.c *.h single_words *.o *.yh *.rule *.output)


#--------------------------------- EOF -----------------------------
