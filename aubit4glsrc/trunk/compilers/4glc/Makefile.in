# +----------------------------------------------------------------------+
# | Aubit 4gl Language Compiler Version $.0   lib/libgui makefile        |
# +----------------------------------------------------------------------+
# | Copyright (c) 2000-1 Aubit Development Team (See Credits file)       |
# +----------------------------------------------------------------------+
# | This program is free software; you can redistribute it and/or modify |
# | it under the terms of one of the following licenses:                 |
# |                                                                      |
# |  A) the GNU General Public License as published by the Free Software |
# |     Foundation; either version 2 of the License, or (at your option) |
# |     any later version.                                               |
# |                                                                      |
# |  B) the Aubit License as published by the Aubit Development Team and |
# |     included in the distribution in the file: LICENSE                |
# |                                                                      |
# | This program is distributed in the hope that it will be useful,      |
# | but WITHOUT ANY WARRANTY; without even the implied warranty of       |
# | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        |
# | GNU General Public License for more details.                         |
# |                                                                      |
# | You should have received a copy of both licenses referred to here.   |
# | If you did not, or have any questions about Aubit licensing, please  |
# | contact afalout@ihug.co.nz                                           |
# +----------------------------------------------------------------------+

#
# $Id: Makefile.in,v 1.71 2004-01-24 19:33:59 mikeaubury Exp $
#

ROOT		=../..
LIBROOT		=../../lib

#All stuff common to more then one Aubit compiler make file is there:
include ${ROOT}/incl/Makefile-common

## ==================================================================
##                   Source files
## ==================================================================

WANTKW_C		= mk_states.c
Y_OUTPUT		= rules/generated/y.output


ifeq "${YACC}" "no"
	GENRULES    =${ROOT}/tools/no_yacc/cygwin/compilers/4glc/rules/generated
	Y_TAB_C		=${GENRULES}/y.tab.c
	CFLAGS		+=-I${ROOT}/tools/no_yacc/cygwin/compilers/4glc
	Y_OUTPUT	=
else
	GENRULES    =rules/generated
	Y_TAB_C		=${GENRULES}/y.tab.c
endif

ifeq "${GCC_MINGW}" "yes"
	CFLAGS		+=-I${ROOT}/tools/getopt
endif



#temp. workarounds for older versions of bizon y.output format:
HOSTNAME_SPEC   =xxaptiva

ifeq "${HOSTNAME}" "${HOSTNAME_SPEC}"
	#WANTKW_C	=/tmp/4glc/wantkw.c
	Y_OUTPUT	=/xxtmp/4glc/rules/generated/y.output
endif

CMODS_EXE       =4glc.c
CMODS_LIB       =\
				compile.c \
				dim.c \
				list.c lexer.c memfile.c ../../lib/generated/std_funcs.c field_handling.c \
				mod.c map.c variables.c globals.c lex.c API_lex.c \
				rules/generated/states.c \
				rules/generated/kw.c \
                ${Y_TAB_C} \
                ${WANTKW_C}

CMODS           =${CMODS_EXE} ${CMODS_LIB}

GETOPT_LONG		=@GETOPT_LONG@

ifneq "${GETOPT_LONG}" "yes"
	ifeq "${GETOPT_LONG}" "iberty"
		AUBIT_LIB+=-L/opt/sfw/lib -liberty
    else
        CMODS   +=${ROOT}/tools/getopt/getopt.c ${ROOT}/tools/getopt/getopt1.c
    endif
endif

4GLCAOBJ		=${CMODS:.c=.o}
OBJS_LIB		=${CMODS_LIB:.c=.o}

#Use this to create dependency for the parser:
RULES_SRC		=$(wildcard rules/*.reqd) $(wildcard rules/*.rule)
#RULES_SRC			=$(addprefix rules/,$(RULES_SRC_tmp))

## ==================================================================
##                    Options
## ==================================================================

ifdef COMSPEC
	ALL			=${ROOT}/lib/lib4glc${SO_EXT}
    CMODS		=${CMODS_EXE}
	4GLCAOBJ	=${CMODS:.c=.o}
    4GL_LIB     =-l4glc
endif

ALL				+=${ROOT}/bin/4glc

C_LOCAL_IFLAGS  =-I${ROOT}/lib/liblex/lex_c -I. -I../fcompile -Irules -I${GENRULES}
#-I${ROOT}/lib -I${ROOT}/lib/libincl
CFLAGS			+=${C_LOCAL_IFLAGS} @RPCLIB_INCLUDE@ @CURSES_INC_PATH@
LCLINT_CFLAGS   =${C_IFLAGS} ${C_LOCAL_IFLAGS}

ifeq "${TARGET_OS}" "cygwin"
	LINKLIBS	=-L${LIBROOT} -laubit4gl
endif

ifeq "${GCC_MINGW}" "yes"
	LINKLIBS	+=-liberty
endif

ifeq "${TARGET_OS}" "linux" 
	LD_EXE_FLAGS=-rdynamic
endif




ifeq "something" "blah"
	LD_EXE_FLAGS=-export-dynamic
endif

## ==================================================================
##                              Targets
## ==================================================================

all: ${ALL}
	@echo "Default targets (${ALL}) successfully compiled."

${ROOT}/bin/4glc: ${4GLCAOBJ}
	${LD_EXE} ${LD_EXE_FLAGS} -L${ROOT}/lib -o $@ $^ ${AUBIT_LIB} ${4GL_LIB}
ifeq "${STRIP_EXECUTABLES}" "yes"
	${CP}  $@${EXEEXT} $@-strip${EXEEXT}
	${STRIP} $@-strip${EXEEXT}
endif

## ==================================================================
##                            Windows Targets
## ==================================================================

lib4glc${SO_EXT}: ${ROOT}/lib/lib4glc${SO_EXT}
${ROOT}/lib/lib4glc${SO_EXT}: ${OBJS_LIB}
	${LD} ${SO_LDFLAGS} -o $@ $^ ${LINKLIBS}
ifeq "${SO_EXT}" ".dll"
	${MV} TMP${SOEXP_EXT} $@.a
endif


## ==================================================================
##                            Sub Targets
## ==================================================================

#rules.t :
#	${MAKE} -C rules $(MKNAME)

rules/generated/y.tab.o: ${Y_TAB_C}
	$(CC) ${CFLAGS} -c -o $@ ${Y_TAB_C} @YYDEBUG@ -I${ROOT}/lib/liblex/lex_c -I.

${Y_TAB_C} rules/generated/y.output: ${RULES_SRC}
	${MAKE} -C rules

../fcompile/form_x.h:
	${MAKE} -C ../fcompile rpc


API_lex.c: API_lex.spec
	../../lib/bin/dlmagic API_lex.spec > API_lex.c
	../../lib/bin/dlmagic  API_lex.spec -h > API_lex.h


#${ROOT}/tools/no_yacc/cygwin/compilers/4glc/rules/generated/y.tab.c

mk_states.c: mk_states_c ${Y_OUTPUT}
ifeq "${HOSTNAME}" "${HOSTNAME_SPEC}"
	cp ${Y_OUTPUT} rules/generated/y.output
endif
	@echo "Y_OUTPUT=${Y_OUTPUT}"
ifneq "${YACC}" "no"
	@SH@ $<
#the "t" file is some kind of temporary file created by wantkw_gen.pl
	${RM} t
else
	${CP} ${ROOT}/tools/no_yacc/cygwin/compilers/4glc/mk_states* .
endif

## ==================================================================
##                            Dependencies
## ==================================================================

${GENRULES}/kw.c ${GENRULES}/single_words.rule \
${GENRULES}/states.c: ${Y_TAB_C}

rules/generated/states.c rules/generated/kw.h rules/generated/y.tab.h:
	${MAKE} -C rules $(MKNAME)

4glc.o: 				rules/generated/kw.h rules/generated/y.tab.h
dim.o: 					rules/generated/kw.h rules/generated/y.tab.h
compile.o: 				rules/generated/kw.h rules/generated/y.tab.h

mod.o: 					mod.c ${Y_TAB_C}
${GENRULES}/y.tab.o: 	../fcompile/form_x.h
lexer.o: 				${GENRULES}/kw.h
lexer.o: 				${GENRULES}/y.tab.h

## ==================================================================
##                            Other Targets
## ==================================================================

splint: lclint
lclint: $(CMODS)
	${LCLINTERR}${LCLINTEXE} ${LCLINTFLAGS} $(LCLINT_CFLAGS) $(CMODS) > ${LCLINTLOG} ${LCLINTLOGCMD}
	${CAT} ${LCLINTLOG} >> ${ROOT}/${LCLINT_GLOBAL_LOG}
	@echo "see ${LCLINTLOG} for results"

## ==================================================================
##                            Clean Targets
## ==================================================================

clean: clean.rules.generated clean.rules
	${RM} *${SO_EXT} *.o *.err *.a *.exe *.bak .*.bak .\#* \
	*.log *.dll *.dll.a *.def wantkw.c wantkw.h mk_states_1.h mk_states.h mk_states.c

clean.rules.generated:
	(cd rules/generated; ${RM} *.yacc *.c *.h single_words *.o *.yh *.rule \
	*.output *.bak .*.bak)

clean.rules:
	${MAKE} -C rules clean

# --------------------------------- EOF -----------------------------

