##########################################################################
# 			Aubit 4gl configuration file.
#
#   When this file have file name "aubitrc.in" - it's intendend for use
#   with "configure" script, as input file for creation of "aubitrc".
#   When this file have file name "aubitrc" - it's a configration file,
#   and you are free to edit it as you wish
#
#   Read by:
#			all Aubit compilers and compiler script (4glpc)
#           All Aubit compiler make files (via incl/Makefile-common include)
#           All Aubit compiled 4gl programs
#
#   Read from, in this order:
#			/etc/opt/aubit4glaubitrc
#			$AUBITDIR/etc/aubitrc
#			~/.aubit4gl/aubitrc
#			./.aubitrc
#			$A4GL_INIFILE environment variable
#
#   Note: Defaults are in (), dependencies in []
#
##########################################################################

#############
#this internal variable points to default location of Aubit config files
#Default: /etc/opt/aubit4gl You should not need to change this.
AUBITETC=/etc/opt/aubit4gl

############
#Defines location where you installed Aubit4gl:
#Default for source distribution:/opt/aubit/aubit4glsrc
#Default for binary distribution:/opt/aubit4gl
AUBITDIR=@aubitdir@

## ===================================================================
## 				Loadable modules/library configurations
## ===================================================================

############
#Name of default SQL library to use.
#When used: run-time and compile-time
#Options: static (nosql) iodbc unixodbc esql ifxodbc pgodbc odbc32 sapodbc
A4GL_SQLTYPE=@A4GL_SQLTYPE@

############
#Determine default driver for Extended Reporting
#When used: run-time only
#Options: PDF, (NOPDF)
A4GL_PDFTYPE=@A4GL_PDFTYPE@

############
#Determine default RPC driver to load
#When used: run-time only
#Options: SUNRPC, (NORPC)
A4GL_RPCTYPE=@A4GL_RPCTYPE@

#############
#Defines default UI (user intertface) driver to load
#When used: run-time only
#Options: (CONSOLE) [no deps.], TUI [curses], GTK [GTK+].
A4GL_UI=@A4GL_UI@

############
#Default output language driver for 4gl compiler:
#When used: compie-time only
#Options: PERL, (C)
A4GL_LEXTYPE=@A4GL_LEXTYPE@

############
#Default forms driver to be loaded
#When used: run-time only
#Options: (GENERIC), NOFORM, XDR
#Generic implies that format specified with A4GL_PACKER will be used (?)
#FIXME: tried using GENERIC - no go with XML
A4GL_FORMTYPE=@A4GL_FORMTYPE@

############
#Default menu driver to be loaded:
#When used: run-time only
#Options: (NOMENU), XDR
A4GL_MENUTYPE=@A4GL_MENUTYPE@

############
#Default help message driver to be loaded:
#When used: run-time only
#Options: (NATIVE), XML
A4GL_MSGTYPE=@A4GL_MSGTYPE@

############
#External data types support to be loaded
#Currently only MPZ (large integers) are supported here
#FIME: not sure if this is needed - looks like this is loaded on request:
#see example testmpz.4gl into the tools/test directory.
EXDTYPE=@EXDTYPE@


############
#You can select which packer to use by setting the variable "A4GL_PACKER"
# 1) PACKED
#  This is very similar to XDR in that data is written in a hopefully portable
# way (optionally non-portable if the required functions aren't available).
# This will probably give the smalled output files
# 2) XDR
#  This is the same as doing it the old way
# 3) (XML) - default
#  This stores and reads the data in an XML file. The reading is very limited
# and can basically only read the XML files that it generates - IT IS NOT A
# FULL BLOWN XML PARSER. It uses some odd constructs and isn't ideal - but
# you'll get the idea when you see the output
# 4) PERL
# This generates a data structure which can be used inside a perl program - its
# pretty complicated stuff though using hashes for the data representation.
# What you do with it after you've generated it is up to you, because this is
# an output only library (ie it can't read back what its written).
#A4GL_PACKER=XML
A4GL_PACKER=PACKED

############
#Procesing of reserved word is experimental. Set this to YES, if you want to
#disable this functionality. When set to NO, compiler will try to process
#most reserved words, instead of reporting the error.
A4GL_RESERVEWORDS=NO

############
#Conversion of SQL statements in 4GL code, to the SQL dialect of target RDBMS
#Conversion is only done if you set A4GL_SQLCONVERT=YES and only if
#the dialect used by the program differs from that used by the DBMS
#interface.
A4GL_SQLCONVERT=YES

############
#Declares the SQL dialect of SQL code in 4GL source code.
#an 4GL directive to change the default SQL dialect at runtime is:
#       SET SQL DIALECT TO ORACLE
#by default the system assumes the 4GL application is using Informix SQL
#syntax, but this can be changed by setting, for example:
#A4GL_SQLDIALECT=ORACLE


############
#auto initializing module and function local variables. This setting is used at
#compile-time only. Numeric variables are initializet to 0, everything else to NULL
#To turn on, set to "Y"
A4GL_AUTONULL=Y


############
# ansi SQL warning mode.
#For ANSI_WARN - it will display a warning if it sees anything amiss...
#For ANSI_ERROR - it will bomb the compile (.err file etc)
#If neither of these is set - then nothing happens
A4GL_ANSI_WARN=Yes
#A4GL_ANSI_ERROR=Yes

############
#Full path to CINT C-code interpreter, if installed, othewise "no"
A4GL_CINT=@CINT@

## ===================================================================
##     Run-time settings for Aubit compiled programs
## ===================================================================

############
#When you encouter programs that chrash, use this for debugging - it will
#create file 'debug.out' that can be very usefull when you don't get core
#dump, so you don't have file 'core' to run 'gdb' on. WARNING: do not set
#this under normal circumstanced - all programs will create debug.out file
#when they run, files can be VERY large, and they will slow down progrms
#execution considerably. This setting applies to all Aubit compiler
#executables (includign all compilers) and to all 4gl programs compiled
#with Aubit compiler.
#Default=<not set>
#DEBUG=ALL

############
#Adds originating line number of each created target language statemtn
#coresponding to 4gl source code, to created target language source code,
#which is usefull for debugging. Like:
#	#line 2 "../tools/test/test_build.4gl"
#INCLINES=yes

############
#FIXME: is not odbc.ini supposed to have default login name and password?
#Defines username and password for accessing database server via ODBC:
#needed for DATABASE and DEFINE LIKE statements at compile time, and
#procedural DATABASE statement ar run-time. You can use OPEN SESSION and
#supply login information at run-time, but NOT at compile time:
#Default=<no default value>
#WARNING!! BE CAREFULL NOT TO HAVE A TAB OR OTHER SPECIAL CHARACTRS
#IN THE VALUE OF THIS VARIABLES !!!!!!!!!!
#SQLUID=mydbusername
#SQLPWD=mydbpassword

## ===================================================================
##     Settings used only by 4glpc and/or other scripts
## ===================================================================

##################
#defines command executed as C compiler for your system, when used by 4glpc:
#Affects: 4glpc
#Default: CC="gcc -O"
CC="@CC@"

AWK=@AWK@

GTK_INC_PATH="@GTK_INC_PATH@"

#################
#Depending on installed 4gl compilers, amake can compile same definition
#of the 4gl programs with differnt 4gl compilers. Here you can specify
#which make rules will be included by default:
#Affects: amake only
#Default: <not set>
#MAKERULES=@aubitdir@/incl/a4gl.mk

####################
#names of libraries paths 'configure' detected outside of standard
#library search paths; note that they will be added to ld.so.conf
#automatically (but this applies only to run-time loader, and not linker)
#and on non-Linux platforms to .bashrc of the user, but this applies only to
#that user that installed compiler. In other cases, you must make sure
#this is set in your LD_LIBRARY_PATH or equivalent manually.
#Default=<no default value>
ADD_LD_LIBRARY_PATH=@ADD_LD_LIBRARY_PATH@

#-------------------------------- EOF -----------------------------
