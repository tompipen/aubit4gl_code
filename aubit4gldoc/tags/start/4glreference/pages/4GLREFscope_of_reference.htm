<HTML>
<HEAD>
<TITLE>scope of reference</TITLE>
</HEAD><BODY>
<B>scope of reference
<P></P>
</B><OL><LI> The portion of the 4GL source code in which the compiler can recognize an
identifier name. The scope of reference (often referred to simply as scope) refers
to the program blocks in which an identifier can be referenced. Outside its
scope, an identifier may not be defined or may even be defined differently. In
4GL, there are three levels of scope: local (a single program block), module (all
program blocks in a single source module), and global (all program blocks
within a program). 
<P></P>
</OL>See also <A HREF="4GLREFdefine00000083.htm">define</A>, <A HREF="4GLREFglobal_variable.htm">global variable</A>, <A HREF="4GLREFidentifier.htm">identifier</A>, <A HREF="4GLREFlocal_variable.htm">local variable</A>, <A HREF="4GLREFmodule_variable.htm">module variable</A>, <A HREF="4GLREFname_space.htm">name space</A>, <A HREF="4GLREFprogram_block.htm">program block</A>, <A HREF="4GLREFsource_module.htm">source module</A>, <A HREF="4GLREFvariable.htm">variable</A>. 
<P></P>
<OL START="2"><LI> The portion of the source code in which the INFORMIX-4GL Interactive Debugger
can recognize a variable name. The scope determines those variables which can
be accessed by debugger commands. The default scope for variables of the 4GL
application is determined based on the inspected function. You can, however, use
scope qualification expressions in debugging commands to access active
variables that are not in the default scope. 
<P></P>
</OL>See also <A HREF="4GLREFactive_variable.htm">active variable</A>, <A HREF="4GLREFdebug.htm">debug</A>, <A HREF="4GLREFinspected_function.htm">inspected function</A>.
<P></P>
</BODY>
</HTML>