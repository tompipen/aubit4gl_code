<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>4glWorks reference: string functions</TITLE>
   <META NAME="author" CONTENT="Marco Greco">
   <META NAME="generator" CONTENT="Hand assembled in Catania by expert WebMakers from automatically generated parts">
</HEAD>
<BODY BGCOLOR=#FFFFFF>
<H1><HR><CENTER><B>4glWorks reference: string functions</CENTER></B><HR></H1>

<UL>
<LI><A HREF="#get_token">get_token</A></LI>
<LI><A HREF="#pos">pos</A></LI>
<LI><A HREF="#posbrk">posbrk</A></LI>
<LI><A HREF="#poschr">poschr</A></LI>
<LI><A HREF="#posnbrk">posnbrk</A></LI>
<LI><A HREF="#postoken">postoken</A></LI>
<LI><A HREF="#str2int">str2int</A></LI>
<LI><A HREF="#str_compare">str_compare</A></LI>
<LI><A HREF="#str_rightmargin">str_rightmargin</A></LI>
</UL>

<P><A NAME="get_token"><H3>get_token</A><HR></H3>
<TABLE CELLSPACING=5>
<TR><TD VALIGN="TOP"><B>file</B></TD>
<TD WIDTH=100%>cstrc.c</TD></TR>
<TR><TD VALIGN="TOP"><B>declaration</B></TD>
<TD WIDTH=100%><PRE>
function get_token(s)
    define s	char(32000)
</PRE></TD></TR>
<TR><TD VALIGN="TOP"><B>returns</B></TD>
<TD WIDTH=100%>
<VAR>tok</VAR>, char(512), the extracted token<BR>
<VAR>tail</VAR>, char(512), the rest of the string
</TD></TR>
<TR><TD VALIGN="TOP"><B>purpose</B></TD>
<TD WIDTH=100%>
extracts the first token out of string <VAR>s</VAR>
</TD></TR>
<TR><TD VALIGN="TOP"><B>example</B></TD>
<TD WIDTH=100%>none</TD></TR>
<TR><TD VALIGN="TOP"><B>notes</B></TD>
<TD WIDTH=100%>none</TD></TR>
</TABLE></P>

<P><A NAME="pos"><H3>pos</A><HR></H3>
<TABLE CELLSPACING=5>
<TR><TD VALIGN="TOP"><B>file</B></TD>
<TD WIDTH=100%>cstrc.c</TD></TR>
<TR><TD VALIGN="TOP"><B>declaration</B></TD>
<TD WIDTH=100%><PRE>
function pos(h, n)
    define h	char(32000),
	   n	char(32000)
</PRE></TD></TR>
<TR><TD VALIGN="TOP"><B>returns</B></TD>
<TD WIDTH=100%>
<VAR>p</VAR>, integer, the index of the character in <VAR>h</VAR> where
the match has been found
</TD></TR>
<TR><TD VALIGN="TOP"><B>purpose</B></TD>
<TD WIDTH=100%>
returns the position of string <VAR>n</VAR> within <VAR>h</VAR>
</TD></TR>
<TR><TD VALIGN="TOP"><B>example</B></TD>
<TD WIDTH=100%>none</TD></TR>
<TR><TD VALIGN="TOP"><B>notes</B></TD>
<TD WIDTH=100%>none</TD></TR>
</TABLE></P>

<P><A NAME="posbrk"><H3>posbrk</A><HR></H3>
<TABLE CELLSPACING=5>
<TR><TD VALIGN="TOP"><B>file</B></TD>
<TD WIDTH=100%>cstrc.c</TD></TR>
<TR><TD VALIGN="TOP"><B>declaration</B></TD>
<TD WIDTH=100%><PRE>
function posbrk(h, c)
    define h	char(32000),
	   c	char(32000)
</PRE></TD></TR>
<TR><TD VALIGN="TOP"><B>returns</B></TD>
<TD WIDTH=100%>
<VAR>p</VAR>, integer, index of the character in <VAR>h</VAR> where the match has
been found
</TD></TR>
<TR><TD VALIGN="TOP"><B>purpose</B></TD>
<TD WIDTH=100%>
returns the position of the first occurrence in <VAR>h</VAR> of any char
in <VAR>n<VAR>
</TD></TR>
<TR><TD VALIGN="TOP"><B>example</B></TD>
<TD WIDTH=100%>none</TD></TR>
<TR><TD VALIGN="TOP"><B>notes</B></TD>
<TD WIDTH=100%>none</TD></TR>
</TABLE></P>

<P><A NAME="poschr"><H3>poschr</A><HR></H3>
<TABLE CELLSPACING=5>
<TR><TD VALIGN="TOP"><B>file</B></TD>
<TD WIDTH=100%>cstrc.c</TD></TR>
<TR><TD VALIGN="TOP"><B>declaration</B></TD>
<TD WIDTH=100%><PRE>
function poschr(h, c)
    define h	char(32000),
	   c	char(1)
</PRE></TD></TR>
<TR><TD VALIGN="TOP"><B>returns</B></TD>
<TD WIDTH=100%>
<VAR>p</VAR>, integer, index of the character in <VAR>h</VAR> where the match has
been found
</TD></TR>
<TR><TD VALIGN="TOP"><B>purpose</B></TD>
<TD WIDTH=100%>
returns the position of the first occurrence in <VAR>h</VAR> of character <VAR>c</VAR>
</TD></TR>
<TR><TD VALIGN="TOP"><B>example</B></TD>
<TD WIDTH=100%>none</TD></TR>
<TR><TD VALIGN="TOP"><B>notes</B></TD>
<TD WIDTH=100%>none</TD></TR>
</TABLE></P>

<P><A NAME="posnbrk"><H3>posnbrk</A><HR></H3>
<TABLE CELLSPACING=5>
<TR><TD VALIGN="TOP"><B>file</B></TD>
<TD WIDTH=100%>cstrc.c</TD></TR>
<TR><TD VALIGN="TOP"><B>declaration</B></TD>
<TD WIDTH=100%><PRE>
function posnbrk(h, c)
    define h	char(32000),
	   c	char(32000)
</PRE></TD></TR>
<TR><TD VALIGN="TOP"><B>returns</B></TD>
<TD WIDTH=100%>
<VAR>p</VAR>, integer, index of the character in <VAR>h</VAR> where the match has
<EM>not</EM> been found
</TD></TR>
<TR><TD VALIGN="TOP"><B>purpose</B></TD>
<TD WIDTH=100%>
returns the position of the first character in <VAR>h</VAR>
that does not match any character in <VAR>n</VAR>
</TD></TR>
<TR><TD VALIGN="TOP"><B>example</B></TD>
<TD WIDTH=100%>none</TD></TR>
<TR><TD VALIGN="TOP"><B>notes</B></TD>
<TD WIDTH=100%>none</TD></TR>
</TABLE></P>

<P><A NAME="postoken"><H3>postoken</A><HR></H3>
<TABLE CELLSPACING=5>
<TR><TD VALIGN="TOP"><B>file</B></TD>
<TD WIDTH=100%>cstrc.c</TD></TR>
<TR><TD VALIGN="TOP"><B>declaration</B></TD>
<TD WIDTH=100%><PRE>
function postoken(h, c)
    define h	char(32000),
	   s	char(32000)
</PRE></TD></TR>
<TR><TD VALIGN="TOP"><B>returns</B></TD>
<TD WIDTH=100%>
<VAR>tok</VAR>, char(512), the extracted token<BR>
<VAR>p</VAR>, integer, position of the beginning of the rest of the string
</TD></TR>
<TR><TD VALIGN="TOP"><B>purpose</B></TD>
<TD WIDTH=100%>
returns the first token in <VAR>h</VAR>, and the position in <VAR>h</VAR> following the token.
<VAR>s</VAR> defines the possible token separators.
</TD></TR>
<TR><TD VALIGN="TOP"><B>example</B></TD>
<TD WIDTH=100%>none</TD></TR>
<TR><TD VALIGN="TOP"><B>notes</B></TD>
<TD WIDTH=100%>none</TD></TR>
</TABLE></P>

<P><A NAME="str2int"><H3>str2int</A><HR></H3>
<TABLE CELLSPACING=5>
<TR><TD VALIGN="TOP"><B>file</B></TD>
<TD WIDTH=100%>ccnvc.c</TD></TR>
<TR><TD VALIGN="TOP"><B>declaration</B></TD>
<TD WIDTH=100%><PRE>
function str2int(s)
    define s	char(10)
</PRE></TD></TR>
<TR><TD VALIGN="TOP"><B>returns</B></TD>
<TD WIDTH=100%>
<VAR>c</VAR>, integer, converted character
</TD></TR>
<TR><TD VALIGN="TOP"><B>purpose</B></TD>
<TD WIDTH=100%>
converts the given string into an integer
</TD></TR>
<TR><TD VALIGN="TOP"><B>example</B></TD>
<TD WIDTH=100%>none</TD></TR>
<TR><TD VALIGN="TOP"><B>notes</B></TD>
<TD WIDTH=100%><UL>
<LI>this routine was written before <CODE>ord()</CODE> was implemented and is
provided for backwards compatibility</LI>
<LI>returns NULL if the string contains non numerical chars</LI>
</UL></TD></TR>
</TABLE></P>

<P><A NAME="str_compare"><H3>str_compare</A><HR></H3>
<TABLE CELLSPACING=5>
<TR><TD VALIGN="TOP"><B>file</B></TD>
<TD WIDTH=100%>cstrc.c</TD></TR>
<TR><TD VALIGN="TOP"><B>declaration</B></TD>
<TD WIDTH=100%><PRE>
function str_compare(s1, s2)
    define 1, s2	char(32000)
</PRE></TD></TR>
<TR><TD VALIGN="TOP"><B>returns</B></TD>
<TD WIDTH=100%>
<VAR>r</VAR>, integer, length of the initial matching segment
</TD></TR>
<TR><TD VALIGN="TOP"><B>purpose</B></TD>
<TD WIDTH=100%>
returns the length of the initial matching segment of 2 strings
</TD></TR>
<TR><TD VALIGN="TOP"><B>example</B></TD>
<TD WIDTH=100%>none</TD></TR>
<TR><TD VALIGN="TOP"><B>notes</B></TD>
<TD WIDTH=100%>none</TD></TR>
</TABLE></P>

<P><A NAME="str_rightmargin"><H3>str_rightmargin</A><HR></H3>
<TABLE CELLSPACING=5>
<TR><TD VALIGN="TOP"><B>file</B></TD>
<TD WIDTH=100%>cstrc.c</TD></TR>
<TR><TD VALIGN="TOP"><B>declaration</B></TD>
<TD WIDTH=100%><PRE>
function str_rightmargin(s, l)
    define s	char(132),
	   l	smallint
</PRE></TD></TR>
<TR><TD VALIGN="TOP"><B>returns</B></TD>
<TD WIDTH=100%>
<VAR>ol</VAR>, integer, lenght of formatted string<BR>
<VAR>i</VAR>, integer, starting point of unformmated text<BR>
<VAR>s</VAR>, char(132), formatted string
</TD></TR>
<TR><TD VALIGN="TOP"><B>purpose</B></TD>
<TD WIDTH=100%>
right margins the string <VAR>s</VAR> to the lenght specified in <VAR>l</VAR>.
returns the length of the output string, the index of the first character
in the original string not included in the output string, and the margined
string.
</TD></TR>
<TR><TD VALIGN="TOP"><B>example</B></TD>
<TD WIDTH=100%>none</TD></TR>
<TR><TD VALIGN="TOP"><B>notes</B></TD>
<TD WIDTH=100%>none</TD></TR>
</TABLE></P>

</BODY>
</HTML>
