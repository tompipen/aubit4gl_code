%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 2054 1374
%%Title: ebnf--init_cmd.eps
%%CreationDate: 09:12:40 Sep 16 2008
%%Creator:  (using ebnf2ps v4.3)
%%DocumentNeededResources: font Helvetica-Bold
%%+ font Courier
%%+ font Helvetica
%%+ font Courier-BoldOblique
%%Pages: 0
%%EndComments

%%BeginProlog

/#ebnf2ps#dict 230 dict def
#ebnf2ps#dict begin

% Initiliaze variables to avoid name-conflicting with document variables.
% This is the case when using `bind' operator.
/-fillp-		0 def		/h		0 def
/-ox-			0 def		/half		0 def
/-oy-			0 def		/height		0 def
/-save-			0 def		/ow		0 def
/Ascent			0 def		/quarter	0 def
/Descent		0 def		/rXX		0 def
/Effect			0 def		/rYY		0 def
/FontHeight		0 def		/rwidth		0 def
/LineThickness		0 def		/rxx		0 def
/OverlinePosition	0 def		/ryy		0 def
/SpaceBackground	0 def		/shadow		0 def
/StrikeoutPosition	0 def		/shape		0 def
/UnderlinePosition	0 def		/shapecolor	0 def
/XBox			0 def		/space		0 def
/XX			0 def		/st		1 string def
/Xshadow		0 def		/w		0 def
/YBox			0 def		/width		0 def
/YY			0 def		/xi		0 def
/Yshadow		0 def		/xo		0 def
/arrow			0 def		/xp		0 def
/bg			false def	/xt		0 def
/bgcolor		0 def		/xw		0 def
/bordercolor		0 def		/xx		0 def
/borderwidth		0 def		/yi		0 def
/dd			0 def		/yo		0 def
/entry			0 def		/yp		0 def
/foreground		0 def		/yt		0 def
					/yy		0 def


% ISOLatin1Encoding stolen from ps_init.ps in GhostScript 2.6.1.4:
/ISOLatin1Encoding where
{pop}
{% -- The ISO Latin-1 encoding vector isn't known, so define it.
 % -- The first half is the same as the standard encoding,
 % -- except for minus instead of hyphen at code 055.
 /ISOLatin1Encoding
  StandardEncoding 0  45 getinterval aload pop
  /minus
  StandardEncoding 46 82 getinterval aload pop
 %*** NOTE: the following are missing in the Adobe documentation,
 %*** but appear in the displayed table:
 %*** macron at 0225, dieresis at 0230, cedilla at 0233, space at 0240.
 % 0200 (128)
  /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
  /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
  /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
  /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
 % 0240 (160)
  /space /exclamdown /cent /sterling
	/currency /yen /brokenbar /section
  /dieresis /copyright /ordfeminine /guillemotleft
	/logicalnot /hyphen /registered /macron
  /degree /plusminus /twosuperior /threesuperior
	/acute /mu /paragraph /periodcentered
  /cedilla /onesuperior /ordmasculine /guillemotright
	/onequarter /onehalf /threequarters /questiondown
 % 0300 (192)
  /Agrave /Aacute /Acircumflex /Atilde
	/Adieresis /Aring /AE /Ccedilla
  /Egrave /Eacute /Ecircumflex /Edieresis
	/Igrave /Iacute /Icircumflex /Idieresis
  /Eth /Ntilde /Ograve /Oacute
	/Ocircumflex /Otilde /Odieresis /multiply
  /Oslash /Ugrave /Uacute /Ucircumflex
	/Udieresis /Yacute /Thorn /germandbls
 % 0340 (224)
  /agrave /aacute /acircumflex /atilde
	/adieresis /aring /ae /ccedilla
  /egrave /eacute /ecircumflex /edieresis
	/igrave /iacute /icircumflex /idieresis
  /eth /ntilde /ograve /oacute
	/ocircumflex /otilde /odieresis /divide
  /oslash /ugrave /uacute /ucircumflex
	/udieresis /yacute /thorn /ydieresis
 256 packedarray def
}ifelse

/reencodeFontISO	%def
{dup
 length 12 add dict	% Make a new font (a new dict the same size
			% as the old one) with room for our new symbols.

 begin			% Make the new font the current dictionary.
  {1 index /FID ne
   {def}{pop pop}ifelse
  }forall		% Copy each of the symbols from the old dictionary
			% to the new one except for the font ID.

  currentdict /FontType get 0 ne
  {/Encoding ISOLatin1Encoding def}if	% Override the encoding with
					% the ISOLatin1 encoding.

  % Use the font's bounding box to determine the ascent, descent,
  % and overall height; don't forget that these values have to be
  % transformed using the font's matrix.

  %          ^    (x2 y2)
  %          |       |
  %          |       v
  %          |  +----+ - -
  %          |  |    |   ^
  %          |  |    |   | Ascent (usually > 0)
  %          |  |    |   |
  % (0 0) -> +--+----+-------->
  %             |    |   |
  %             |    |   v Descent (usually < 0)
  % (x1 y1) --> +----+ - -

  currentdict /FontType get 0 ne
  {/FontBBox load aload pop		% -- x1 y1 x2 y2
   FontMatrix transform /Ascent  exch def pop
   FontMatrix transform /Descent exch def pop}
  {/PrimaryFont FDepVector 0 get def
   PrimaryFont /FontBBox get aload pop
   PrimaryFont /FontMatrix get transform /Ascent exch def pop
   PrimaryFont /FontMatrix get transform /Descent exch def pop
  }ifelse

  /FontHeight Ascent Descent sub def	% use `sub' because descent < 0

  % Define these in case they're not in the FontInfo
  % (also, here they're easier to get to).
  /UnderlinePosition  Descent 0.70 mul def
  /OverlinePosition   Descent UnderlinePosition sub Ascent add def
  /StrikeoutPosition  Ascent 0.30 mul def
  /LineThickness      FontHeight 0.05 mul def
  /Xshadow            FontHeight  0.08 mul def
  /Yshadow            FontHeight -0.09 mul def
  /SpaceBackground    Descent neg UnderlinePosition add def
  /XBox               Descent neg def
  /YBox               LineThickness 0.7 mul def

  currentdict	% Leave the new font on the stack
 end		% Stop using the font as the current dictionary
 definefont	% Put the font into the font dictionary
 pop		% Discard the returned font
}bind def

% Font definition
/DefFont{findfont exch scalefont reencodeFontISO}def

% Font selection
/F
{findfont
 dup /Ascent            get /Ascent            exch def
 dup /Descent           get /Descent           exch def
 dup /FontHeight        get /FontHeight        exch def
 dup /UnderlinePosition get /UnderlinePosition exch def
 dup /OverlinePosition  get /OverlinePosition  exch def
 dup /StrikeoutPosition get /StrikeoutPosition exch def
 dup /LineThickness     get /LineThickness     exch def
 dup /Xshadow           get /Xshadow           exch def
 dup /Yshadow           get /Yshadow           exch def
 dup /SpaceBackground   get /SpaceBackground   exch def
 dup /XBox              get /XBox              exch def
 dup /YBox              get /YBox              exch def
 setfont
}def

/BG
{dup /bg exch def
 {mark 4 1 roll ]}
 {[ 1.0 1.0 1.0 ]}
 ifelse
 /bgcolor exch def
}def

% stack:  --
/FillBgColor{bgcolor aload pop setrgbcolor fill}bind def

% stack:  fill-or-not lower-x lower-y upper-x upper-y  |-  --
/doRect
{/rYY exch def
 /rXX exch def
 /ryy exch def
 /rxx exch def
 gsave
 newpath
 rXX rYY moveto
 rxx rYY lineto
 rxx ryy lineto
 rXX ryy lineto
 closepath
 % top of stack: fill-or-not
 {FillBgColor}
 {LineThickness setlinewidth stroke}
 ifelse
 grestore
}bind def

% stack:  string fill-or-not  |-  --
/doOutline
{/-fillp- exch def
 /-ox- currentpoint /-oy- exch def def
 gsave
 LineThickness setlinewidth
 {st 0 3 -1 roll put
  st dup true charpath
  -fillp- {gsave FillBgColor grestore}if
  stroke stringwidth
  -oy- add /-oy- exch def
  -ox- add /-ox- exch def
  -ox- -oy- moveto
 }forall
 grestore
 -ox- -oy- moveto
}bind def

% stack:  fill-or-not delta  |-  --
/doBox
{/dd exch def
 xx XBox sub dd sub yy YBox sub dd sub
 XX XBox add dd add YY YBox add dd add
 doRect
}bind def

% stack:  string  |-  --
/doShadow
{gsave
 Xshadow Yshadow rmoveto
 false doOutline
 grestore
}bind def

% stack:  position  |-  --
/Hline
{currentpoint exch pop add dup
 gsave
 newpath
 xx exch moveto
 XX exch lineto
 closepath
 LineThickness setlinewidth stroke
 grestore
}bind def

% stack:  string  |-  --
% effect: 1  - underline  2   - strikeout  4  - overline
%         8  - shadow     16  - box        32 - outline
/S
{/xx currentpoint dup Descent add /yy exch def
 Ascent add /YY exch def def
 dup stringwidth pop xx add /XX exch def
 Effect 8 and 0 ne
 {/yy yy Yshadow add def
  /XX XX Xshadow add def
 }if
 bg
 {true
  Effect 16 and 0 ne
  {SpaceBackground doBox}
  {xx yy XX YY doRect}
  ifelse
 }if						% background
 Effect 16 and 0 ne{false 0 doBox}if		% box
 Effect 8  and 0 ne{dup doShadow}if		% shadow
 Effect 32 and 0 ne
 {true doOutline}				% outline
 {show}						% normal text
 ifelse
 Effect 1  and 0 ne{UnderlinePosition Hline}if	% underline
 Effect 2  and 0 ne{StrikeoutPosition Hline}if	% strikeout
 Effect 4  and 0 ne{OverlinePosition  Hline}if	% overline
}bind def



% === begin EBNF settings

/fP            10.000 /Helvetica-Bold DefFont
/ForegroundP   [0.000 0.000 0.000] def % Black
/BackgroundP   [1.000 1.000 1.000] def % White
/EffectP       0 def
/fT            7.000 /Courier DefFont
/ForegroundT   [0.000 0.000 0.000] def % Black
/BackgroundT   [1.000 1.000 1.000] def % White
/EffectT       0 def
/BorderWidthT  1.000 def
/BorderColorT  [0.000 0.000 0.000] def % Black
/ShapeT        2 def
/ShadowT       false def
/fNT           7.000 /Helvetica DefFont
/ForegroundNT  [0.000 0.000 0.000] def % Black
/BackgroundNT  [1.000 1.000 1.000] def % White
/EffectNT      0 def
/BorderWidthNT 1.000 def
/BorderColorNT [0.000 0.000 1.000] def % Blue
/ShapeNT       0 def
/ShadowNT      false def
/fS            7.000 /Courier-BoldOblique DefFont
/ForegroundS   [0.000 0.000 0.000] def % Black
/BackgroundS   [1.000 1.000 1.000] def % Gray95
/EffectS       0 def
/BorderWidthS  0.500 def
/BorderColorS  [0.000 0.000 0.000] def % Black
/ShapeS        2 def
/ShadowS       false def
/fE            7.000 /Courier-BoldOblique DefFont
/ForegroundE   [0.000 0.000 0.000] def % Black
/BackgroundE   [1.000 1.000 1.000] def % Gray90
/EffectE       0 def
/BorderWidthE  0.250 def
/BorderColorE  [0.000 0.000 0.000] def % Black
/ShapeE        2 def
/ShadowE       false def
/fR            7.000 /Courier-BoldOblique DefFont
/ForegroundR   [0.000 0.000 0.000] def % Black
/BackgroundR   [1.000 1.000 1.000] def % Gray85
/EffectR       0 def
/BorderWidthR  0.000 def
/BorderColorR  [0.000 0.000 0.000] def % Black
/ShapeR        2 def
/ShadowR       false def
/ExtraWidth    1.453 def
/ArrowScale    1.000 def
/DefaultWidth  0.600 def
/LineWidth     1.000 def
/LineColor     [0.000 0.000 0.000] def % Black
/ArrowShape    5 def
/ChartShape    1 def
/UserArrow{}def

% === end   EBNF settings


% === begin EBNF engine

% --- Basic Definitions

/fS F
/SpaceS FontHeight 0.5 mul def
/HeightS FontHeight FontHeight add def

/fE F
/SpaceE FontHeight 0.5 mul def
/HeightE FontHeight FontHeight add def

/fR F
/SpaceR FontHeight 0.5 mul def
/HeightR FontHeight FontHeight add def

/fT F
/SpaceT FontHeight 0.5 mul def
/HeightT FontHeight FontHeight add def

/fNT F
/SpaceNT FontHeight 0.5 mul def
/HeightNT FontHeight FontHeight add def

/T HeightT HeightNT add 0.5 mul def
/hT   T 0.5  mul def
/hT2 hT 0.5  mul ArrowScale mul def
/hT4 hT 0.25 mul ArrowScale mul def

/Er 0.1 def	% Error factor


/c{currentpoint}bind def
/xyi{/xi c /yi exch def def}bind def
/xyo{/xo c /yo exch def def}bind def
/xyp{/xp c /yp exch def def}bind def
/xyt{/xt c /yt exch def def}bind def

% vertical movement: x y height vm
/vm{add moveto}bind def

% horizontal movement: x y width hm
/hm{3 -1 roll exch add exch moveto}bind def

% set color: [R G B] SetRGB
/SetRGB{aload pop setrgbcolor}bind def

% filling gray area: gray-scale FillGray
/FillGray{gsave setgray fill grestore}bind def

% filling color area: [R G B] FillRGB
/FillRGB{gsave SetRGB fill grestore}bind def

/Stroke{LineWidth setlinewidth LineColor SetRGB stroke}bind def
/StrokeShape{borderwidth setlinewidth bordercolor SetRGB stroke}bind def
/Gstroke{gsave Stroke grestore}bind def

% Empty Line: width EL
/EL{0 rlineto Gstroke}bind def

% --- Arrows

/Down{hT2 neg hT4 neg rlineto}bind def

/Arrow
{hT2 neg hT4 rmoveto
 hT2 hT4 neg rlineto
 Down
}bind def

/ArrowPath{c newpath moveto Arrow closepath}bind def

/UpPath
{c newpath moveto
 hT2 neg 0   rmoveto
 0       hT4 rlineto
 hT2 hT4 neg rlineto
 closepath
}bind def

/DownPath
{c newpath moveto
 hT2 neg 0   rmoveto
 0   hT4 neg rlineto
 hT2     hT4 rlineto
 closepath
}bind def

%>Right Arrow: RA
%    \
% *---+
%    /
/RA-vector
[{}					% 0  - none
 {hT2 neg hT4 rlineto}			% 1  - semi-up
 {Down}					% 2  - semi-down
 {Arrow}				% 3  - simple
 {Gstroke ArrowPath}			% 4  - transparent
 {Gstroke ArrowPath 1 FillGray}		% 5  - hollow
 {Gstroke ArrowPath LineColor FillRGB}	% 6  - full
 {Gstroke UpPath 1 FillGray}		% 7  - semi-up-hollow
 {Gstroke UpPath LineColor FillRGB}	% 8  - semi-up-full
 {Gstroke DownPath 1 FillGray}		% 9  - semi-down-hollow
 {Gstroke DownPath LineColor FillRGB}	% 10 - semi-down-full
 {Gstroke gsave UserArrow grestore}	% 11 - user
]def

/RA
{hT 0 rlineto
 c
 RA-vector ArrowShape get exec
 Gstroke
 moveto
 ExtraWidth 0 rmoveto
}def

% rotation DrawArrow
/DrawArrow
{gsave
 0 0 translate
 rotate
 RA
 c
 grestore
 rmoveto
}def

%>Left Arrow: LA
%  /
% +---*
%  \
/LA{180 DrawArrow}def

%>Up Arrow: UA
%  +
% /|\
%  |
%  *
/UA{90 DrawArrow}def

%>Down Arrow: DA
%  *
%  |
% \|/
%  +
/DA{270 DrawArrow}def

% --- Corners

%>corner Right Descendent: height arrow corner_RD
%   _             | arrow
%  /   height > 0 |  0 - none
% |               |  1 - right
% *    ---------- |  2 - left
% |               |  3 - vertical
%  \   height < 0 |
%   -             |
/cRD0-vector
[% 0 - none
 {0 h rlineto
  hT 0 rlineto}
 % 1 - right
 {0 h rlineto
  RA}
 % 2 - left
 {hT 0 rmoveto xyi
  LA
  0 h neg rlineto
  xi yi moveto}
 % 3 - vertical
 {hT h rmoveto xyi
  hT neg 0 rlineto
  h 0 gt{DA}{UA}ifelse
  xi yi moveto}
]def

/cRD-vector
[{cRD0-vector arrow get exec}	% 0 - miter
 {0 0 0 h hT h rcurveto}	% 1 - rounded
 {hT h rlineto}			% 2 - bevel
]def

/corner_RD
{/arrow exch def /h exch def
 cRD-vector ChartShape get exec
 Gstroke
}def

%>corner Right Ascendent: height arrow corner_RA
%                 | arrow
%    | height > 0 |  0 - none
%   /             |  1 - right
% *-   ---------- |  2 - left
%   \             |  3 - vertical
%    | height < 0 |
%                 |
/cRA0-vector
[% 0 - none
 {hT 0 rlineto
  0 h rlineto}
 % 1 - right
 {RA
  0 h rlineto}
 % 2 - left
 {hT h rmoveto xyi
  0 h neg rlineto
  LA
  xi yi moveto}
 % 3 - vertical
 {hT h rmoveto xyi
  h 0 gt{DA}{UA}ifelse
  hT neg 0 rlineto
  xi yi moveto}
]def

/cRA-vector
[{cRA0-vector arrow get exec}	% 0 - miter
 {0 0 hT 0 hT h rcurveto}	% 1 - rounded
 {hT h rlineto}			% 2 - bevel
]def

/corner_RA
{/arrow exch def /h exch def
 cRA-vector ChartShape get exec
 Gstroke
}def

%>corner Left Descendent: height arrow corner_LD
%  _              | arrow
%   \  height > 0 |  0 - none
%    |            |  1 - right
%    * ---------- |  2 - left
%    |            |  3 - vertical
%   /  height < 0 |
%  -              |
/cLD0-vector
[% 0 - none
 {0 h rlineto
  hT neg 0 rlineto}
 % 1 - right
 {hT neg h rmoveto xyi
  RA
  0 h neg rlineto
  xi yi moveto}
 % 2 - left
 {0 h rlineto
  LA}
 % 3 - vertical
 {hT neg h rmoveto xyi
  hT 0 rlineto
  h 0 gt{DA}{UA}ifelse
  xi yi moveto}
]def

/cLD-vector
[{cLD0-vector arrow get exec}	% 0 - miter
 {0 0 0 h hT neg h rcurveto}	% 1 - rounded
 {hT neg h rlineto}		% 2 - bevel
]def

/corner_LD
{/arrow exch def /h exch def
 cLD-vector ChartShape get exec
 Gstroke
}def

%>corner Left Ascendent: height arrow corner_LA
%                 | arrow
% |    height > 0 |  0 - none
%  \              |  1 - right
%   -* ---------- |  2 - left
%  /              |  3 - vertical
% |    height < 0 |
%                 |
/cLA0-vector
[% 0 - none
 {hT neg 0 rlineto
  0 h rlineto}
 % 1 - right
 {hT neg h rmoveto xyi
  0 h neg rlineto
  RA
  xi yi moveto}
 % 2 - left
 {LA
  0 h rlineto}
 % 3 - vertical
 {hT neg h rmoveto xyi
  h 0 gt{DA}{UA}ifelse
  hT 0 rlineto
  xi yi moveto}
]def

/cLA-vector
[{cLA0-vector arrow get exec}		% 0 - miter
 {0 0 hT neg 0 hT neg h rcurveto}	% 1 - rounded
 {hT neg h rlineto}			% 2 - bevel
]def

/corner_LA
{/arrow exch def /h exch def
 cLA-vector ChartShape get exec
 Gstroke
}def

% --- Flow Stuff

% height prepare_height |- line_height corner_height corner_height
/prepare_height
{dup 0 gt
 {T sub hT}
 {T add hT neg}ifelse
 dup
}def

%>Left Alternative: height LAlt
%      _
%     /
%    |   height > 0
%    |
%   /
% *-     ----------
%   \
%    |
%    |   height < 0
%     \
%      -
/LAlt
{dup 0 eq
 {T exch rlineto}
 {dup abs T lt
  {0.5 mul dup
   1 corner_RA
   0 corner_RD}
  {prepare_height
   1 corner_RA
   exch 0 exch rlineto
   0 corner_RD
  }ifelse
 }ifelse
}def

%>Left Loop: height LLoop
%   _
%  /
% |      height > 0
% |
%  \
%   -*   ----------
%  /
% |
% |      height < 0
%  \
%   -
/LLoop
{prepare_height
 3 corner_LA
 exch 0 exch rlineto
 0 corner_RD
}def

%>Right Alternative: height RAlt
% _
%  \
%   |    height > 0
%   |
%    \
%     -* ----------
%    /
%   |
%   |    height < 0
%  /
% -
/RAlt
{dup 0 eq
 {T neg exch rlineto}
 {dup abs T lt
  {0.5 mul dup
   1 corner_LA
   0 corner_LD}
  {prepare_height
   1 corner_LA
   exch 0 exch rlineto
   0 corner_LD
  }ifelse
 }ifelse
}def

%>Right Loop: height RLoop
%  _
%   \
%    |   height > 0
%    |
%   /
% *-     ----------
%   \
%    |
%    |   height < 0
%   /
%  -
/RLoop
{prepare_height
 1 corner_RA
 exch 0 exch rlineto
 0 corner_LD
}def

% --- Terminal, Non-terminal and Special Basics

% string width prepare-width |- string
/prepare-width
{/width exch def
 dup stringwidth pop space add space add width exch sub ExtraWidth sub 0.5 mul
 /w exch def
}def

% string width begin-right
/begin-right
{xyo
 prepare-width
 w hT sub EL
 RA
}def

% end-right
/end-right
{xo width add Er add yo moveto
 w Er add neg EL
 xo yo moveto
}def

% string width begin-left
/begin-left
{xyo
 prepare-width
 w EL
}def

% end-left
/end-left
{xo width add Er add yo moveto
 hT w sub Er add EL
 LA
 xo yo moveto
}def

/ShapePath-vector
[% 0 - miter
 {xx yy moveto
  xx YY lineto
  XX YY lineto
  XX yy lineto}
 % 1 - rounded
 {/half YY yy sub 0.5 mul abs def
  xx half add YY moveto
  0 0 half neg 0 half neg half neg rcurveto
  0 0 0 half neg half half neg rcurveto
  XX xx sub abs half sub half sub 0 rlineto
  0 0 half 0 half half rcurveto
  0 0 0 half half neg half rcurveto}
 % 2 - bevel
 {/quarter YY yy sub 0.25 mul abs def
  xx quarter add YY moveto
  quarter neg quarter neg rlineto
  0 quarter quarter add neg rlineto
  quarter quarter neg rlineto
  XX xx sub abs quarter sub quarter sub 0 rlineto
  quarter quarter rlineto
  0 quarter quarter add rlineto
  quarter neg quarter rlineto}
]def

/doShapePath
{newpath
 ShapePath-vector shape get exec
 closepath
}def

/doShapeShadow
{gsave
 Xshadow Xshadow add Xshadow add
 Yshadow Yshadow add Yshadow add translate
 doShapePath
 0.9 FillGray
 grestore
}def

/doShape
{gsave
 doShapePath
 shapecolor FillRGB
 StrokeShape
 grestore
}def

% string SBound |- string
/SBound
{/xx c dup /yy exch def
 FontHeight add /YY exch def def
 dup stringwidth pop xx add /XX exch def
 Effect 8 and 0 ne
 {/yy yy YShadow add def
  /XX XX XShadow add def
 }if
}def

% string SBox
/SBox
{gsave
 c space sub moveto
 SBound
 /XX XX space add space add def
 /YY YY space add def
 /yy yy space sub def
 shadow{doShapeShadow}if
 doShape
 space Descent abs rmoveto
 foreground SetRGB S
 grestore
}def

% --- Terminal

% TeRminal: string TR
/TR
{/Effect EffectT def
 /shape ShapeT def
 /shapecolor BackgroundT def
 /borderwidth BorderWidthT def
 /bordercolor BorderColorT def
 /foreground ForegroundT def
 /shadow ShadowT def
 SBox
}def

%>Right Terminal: string width RT |- x y
/RT
{xyt
 /fT F
 /space SpaceT def
 begin-right
 TR
 end-right
 xt yt
}def

%>Left Terminal: string width LT |- x y
/LT
{xyt
 /fT F
 /space SpaceT def
 begin-left
 TR
 end-left
 xt yt
}def

%>Right Terminal Default: string width RTD |- x y
/RTD
{/-save- BorderWidthT def
 /BorderWidthT BorderWidthT DefaultWidth add def
 RT
 /BorderWidthT -save- def
}def

%>Left Terminal Default: string width LTD |- x y
/LTD
{/-save- BorderWidthT def
 /BorderWidthT BorderWidthT DefaultWidth add def
 LT
 /BorderWidthT -save- def
}def

% --- Non-Terminal

% Non-Terminal: string NT
/NT
{/Effect EffectNT def
 /shape ShapeNT def
 /shapecolor BackgroundNT def
 /borderwidth BorderWidthNT def
 /bordercolor BorderColorNT def
 /foreground ForegroundNT def
 /shadow ShadowNT def
 SBox
}def

%>Right Non-Terminal: string width RNT |- x y
/RNT
{xyt
 /fNT F
 /space SpaceNT def
 begin-right
 NT
 end-right
 xt yt
}def

%>Left Non-Terminal: string width LNT |- x y
/LNT
{xyt
 /fNT F
 /space SpaceNT def
 begin-left
 NT
 end-left
 xt yt
}def

%>Right Non-Terminal Default: string width RNTD |- x y
/RNTD
{/-save- BorderWidthNT def
 /BorderWidthNT BorderWidthNT DefaultWidth add def
 RNT
 /BorderWidthNT -save- def
}def

%>Left Non-Terminal Default: string width LNTD |- x y
/LNTD
{/-save- BorderWidthNT def
 /BorderWidthNT BorderWidthNT DefaultWidth add def
 LNT
 /BorderWidthNT -save- def
}def

% --- Special

% SPecial: string SP
/SP
{/Effect EffectS def
 /shape ShapeS def
 /shapecolor BackgroundS def
 /borderwidth BorderWidthS def
 /bordercolor BorderColorS def
 /foreground ForegroundS def
 /shadow ShadowS def
 SBox
}def

%>Right SPecial: string width RSP |- x y
/RSP
{xyt
 /fS F
 /space SpaceS def
 begin-right
 SP
 end-right
 xt yt
}def

%>Left SPecial: string width LSP |- x y
/LSP
{xyt
 /fS F
 /space SpaceS def
 begin-left
 SP
 end-left
 xt yt
}def

%>Right SPecial Default: string width RSPD |- x y
/RSPD
{/-save- BorderWidthS def
 /BorderWidthS BorderWidthS DefaultWidth add def
 RSP
 /BorderWidthS -save- def
}def

%>Left SPecial Default: string width LSPD |- x y
/LSPD
{/-save- BorderWidthS def
 /BorderWidthS BorderWidthS DefaultWidth add def
 LSP
 /BorderWidthS -save- def
}def

% --- Repeat and Except basics

/begin-direction
{/w width rwidth sub 0.5 mul def
 width 0 rmoveto}def

/end-direction
{gsave
 /xx c entry add /YY exch def def
 /yy YY height sub def
 /XX xx rwidth add def
 shadow{doShapeShadow}if
 doShape
 grestore
}def

/right-direction
{begin-direction
 w neg EL
 xt yt moveto
 w hT sub EL RA
 end-direction
}def

/left-direction
{begin-direction
 hT w sub EL LA
 xt yt moveto
 w EL
 end-direction
}def

% --- Repeat

% entry height width rwidth begin-repeat
/begin-repeat
{/rwidth exch def
 /width exch def
 /height exch def
 /entry exch def
 /fR F
 /space SpaceR def
 /Effect EffectR def
 /shape ShapeR def
 /shapecolor BackgroundR def
 /borderwidth BorderWidthR def
 /bordercolor BorderColorR def
 /foreground ForegroundR def
 /shadow ShadowR def
 xyt
}def

% string end-repeat |- x y
/end-repeat
{gsave
 space Descent rmoveto
 foreground SetRGB S
 c Descent sub
 grestore
 exch space add exch moveto
 xt yt
}def

%>Right RePeat: string entry height width rwidth RRP |- x y
/RRP{begin-repeat right-direction end-repeat}def

%>Left RePeat: string entry height width rwidth LRP |- x y
/LRP{begin-repeat left-direction end-repeat}def

% --- Except

% entry height width rwidth begin-except
/begin-except
{/rwidth exch def
 /width exch def
 /height exch def
 /entry exch def
 /fE F
 /space SpaceE def
 /Effect EffectE def
 /shape ShapeE def
 /shapecolor BackgroundE def
 /borderwidth BorderWidthE def
 /bordercolor BorderColorE def
 /foreground ForegroundE def
 /shadow ShadowE def
 xyt
}def

% x-width end-except |- x y
/end-except
{gsave
 space space add add Descent rmoveto
 (-) foreground SetRGB S
 grestore
 space 0 rmoveto
 xt yt
}def

%>Right EXcept: x-width entry height width rwidth REX |- x y
/REX{begin-except right-direction end-except}def

%>Left EXcept: x-width entry height width rwidth LEX |- x y
/LEX{begin-except left-direction end-except}def

% --- Sequence

%>Beginning Of Sequence: BOS |- x y
/BOS{currentpoint}bind def

%>End Of Sequence: x y x1 y1 EOS |- x y
/EOS{pop pop}bind def

% --- Production

%>Beginning Of Production: string width height BOP |- y x
/BOP
{xyp
 neg yp add /yw exch def
 xp add T sub /xw exch def
 dup length 0 gt	% empty string ==> no production name
 {/Effect EffectP def
  /fP F ForegroundP SetRGB BackgroundP aload pop true BG S
  /Effect 0 def
  ( :) S false BG}if
 xw yw moveto
 hT EL RA
 xp yw moveto
 T EL
 yp xp
}def

%>End Of Production: y x delta EOP
/EOPH{add exch moveto}bind def			% horizontal
/EOPV{exch pop sub 0 exch moveto}bind def	% vertical

% --- Empty Alternative

%>Empty Alternative: width EA |- x y
/EA
{gsave
 Er add 0 rlineto
 Stroke
 grestore
 c
}def

% --- Alternative

%>AlTernative: h1 h2 ... hn n width AT |- x y
/AT
{xyo xo add /xw exch def
 xw yo moveto
 Er EL
 {xw yo moveto
  dup RAlt
  xo yo moveto
  LAlt}repeat
 xo yo
}def

% --- Optional

%>OPtional: height width OP |- x y
/OP
{xyo
 T sub /ow exch def
 ow Er sub 0 rmoveto
 T Er add EL
 neg dup RAlt
 ow T sub neg EL
 xo yo moveto
 LAlt
 xo yo moveto
 T EL
 xo yo
}def

% --- List Flow

%>One or More: height width OM |- x y
/OM
{xyo
 /ow exch def
 ow Er add 0 rmoveto
 T Er add neg EL
 dup RLoop
 xo T add yo moveto
 LLoop
 xo yo moveto
 T EL
 xo yo
}def

%>Zero or More: h2 h1 width ZM |- x y
/ZM
{xyo
 Er add EL
 Er neg 0 rmoveto
 dup RAlt
 exch dup RLoop
 xo yo moveto
 exch dup LAlt
 exch LLoop
 yo add xo T add exch moveto
 xo yo
}def

% === end EBNF engine


end

% x y #ebnf2ps#begin
/#ebnf2ps#begin
{#ebnf2ps#dict begin /#ebnf2ps#save save def
 moveto false BG 0.0 0.0 0.0 setrgbcolor}def

/#ebnf2ps#end{showpage #ebnf2ps#save restore end}def

%%EndProlog

0 1365.130 #ebnf2ps#begin
(init_cmd) 2053.550 785.165 BOP
567.112 -567.112 2 2021.596 AT
BOS
(INITIALIZE) 439.020 RT
439.020 hm
99.530 110.785 723.982 ZM
67.526 0.000 -67.526 3 693.028 AT
16.881 -16.881 2 662.074 AT
([variable]) 631.120 RT
-33.763 vm
BOS
([variable]) 204.255 RT
204.255 hm
11.254 -11.254 2 222.609 AT
(THROUGH) 191.655 RT
-22.509 vm
(THRU) 191.655 RT
EOS
222.609 hm
([variable]) 204.255 RT
EOS
EOS
-67.526 vm
BOS
( $  ) 227.468 RT
227.468 hm
16.881 -16.881 2 434.607 AT
([variable]) 403.653 RT
-33.763 vm
BOS
([variable]) 128.433 RT
128.433 hm
11.254 -11.254 2 146.787 AT
(THROUGH) 115.833 RT
-22.509 vm
(THRU) 115.833 RT
EOS
146.787 hm
([variable]) 128.433 RT
EOS
EOS
EOS
-67.526 vm
BOS
( :  ) 227.468 RT
227.468 hm
16.881 -16.881 2 434.607 AT
([variable]) 403.653 RT
-33.763 vm
BOS
([variable]) 128.433 RT
128.433 hm
11.254 -11.254 2 146.787 AT
(THROUGH) 115.833 RT
-22.509 vm
(THRU) 115.833 RT
EOS
146.787 hm
([variable]) 128.433 RT
EOS
EOS
EOS
EOS
99.530 vm
693.028 EA
EOS
723.982 hm
( TO ) 413.820 RT
413.820 hm
(NULL) 413.820 RT
EOS
-1134.224 vm
BOS
(INITIALIZE) 66.315 RT
66.315 hm
99.530 110.785 351.278 ZM
67.526 0.000 -67.526 3 320.324 AT
16.881 -16.881 2 289.370 AT
([variable]) 258.416 RT
-33.763 vm
BOS
([variable]) 80.021 RT
80.021 hm
11.254 -11.254 2 98.375 AT
(THROUGH) 67.421 RT
-22.509 vm
(THRU) 67.421 RT
EOS
98.375 hm
([variable]) 80.021 RT
EOS
EOS
-67.526 vm
BOS
( $  ) 41.115 RT
41.115 hm
16.881 -16.881 2 248.254 AT
([variable]) 217.300 RT
-33.763 vm
BOS
([variable]) 66.315 RT
66.315 hm
11.254 -11.254 2 84.669 AT
(THROUGH) 53.715 RT
-22.509 vm
(THRU) 53.715 RT
EOS
84.669 hm
([variable]) 66.315 RT
EOS
EOS
EOS
-67.526 vm
BOS
( :  ) 41.115 RT
41.115 hm
16.881 -16.881 2 248.254 AT
([variable]) 217.300 RT
-33.763 vm
BOS
([variable]) 66.315 RT
66.315 hm
11.254 -11.254 2 84.669 AT
(THROUGH) 53.715 RT
-22.509 vm
(THRU) 53.715 RT
EOS
84.669 hm
([variable]) 66.315 RT
EOS
EOS
EOS
EOS
99.530 vm
320.324 EA
EOS
351.278 hm
(LIKE) 41.115 RT
41.115 hm
732.366 386.735 1531.933 ZM
292.831 -292.831 2 1500.979 AT
BOS
78.780 56.271 33.763 11.254 -11.254 -33.763 -56.271 -78.780 8 444.762 AT
(character-string) 413.808 RT
-22.509 vm
BOS
(character-string) 163.136 RT
163.136 hm
( .  ) 112.736 RT
112.736 hm
(identifier) 137.936 RT
EOS
-22.509 vm
(identifier) 413.808 RT
-22.509 vm
BOS
(identifier) 146.336 RT
146.336 hm
( :  ) 121.136 RT
121.136 hm
(identifier) 146.336 RT
EOS
-22.509 vm
BOS
(identifier) 87.802 RT
87.802 hm
( :  ) 62.602 RT
62.602 hm
(character-string) 113.002 RT
113.002 hm
( .  ) 62.602 RT
62.602 hm
(identifier) 87.802 RT
EOS
-22.509 vm
BOS
(identifier) 146.336 RT
146.336 hm
( @  ) 121.136 RT
121.136 hm
(identifier) 146.336 RT
EOS
-22.509 vm
BOS
(identifier) 92.842 RT
92.842 hm
( @  ) 67.642 RT
67.642 hm
(identifier) 92.842 RT
92.842 hm
( :  ) 67.642 RT
67.642 hm
(identifier) 92.842 RT
EOS
-22.509 vm
BOS
(identifier) 66.315 RT
66.315 hm
( @  ) 41.115 RT
41.115 hm
(identifier) 66.315 RT
66.315 hm
( :  ) 41.115 RT
41.115 hm
(character-string) 91.515 RT
91.515 hm
( .  ) 41.115 RT
41.115 hm
(identifier) 66.315 RT
EOS
EOS
444.762 hm
( .  ) 41.115 RT
41.115 hm
232.824 -232.823 2 984.148 AT
172.771 60.052 -60.052 -172.771 4 953.194 AT
BOS
(identifier) 329.812 RT
329.812 hm
18.816 -3.692 -18.816 3 592.428 AT
BOS
( [  ) 171.758 RT
171.758 hm
(<integer value>) 217.958 RT
217.958 hm
( ]  ) 171.758 RT
EOS
-22.509 vm
BOS
( [  ) 93.815 RT
93.815 hm
(<integer value>) 140.015 RT
140.015 hm
( ,  ) 93.815 RT
93.815 hm
(<integer value>) 140.015 RT
140.015 hm
( ]  ) 93.815 RT
EOS
-15.123 vm
561.474 EA
EOS
EOS
-112.719 vm
BOS
78.780 56.271 33.763 11.254 -11.254 -33.763 -56.271 -78.780 8 455.041 AT
(character-string) 424.087 RT
-22.509 vm
BOS
(character-string) 166.562 RT
166.562 hm
( .  ) 116.162 RT
116.162 hm
(identifier) 141.362 RT
EOS
-22.509 vm
(identifier) 424.087 RT
-22.509 vm
BOS
(identifier) 149.762 RT
149.762 hm
( :  ) 124.562 RT
124.562 hm
(identifier) 149.762 RT
EOS
-22.509 vm
BOS
(identifier) 89.857 RT
89.857 hm
( :  ) 64.657 RT
64.657 hm
(character-string) 115.057 RT
115.057 hm
( .  ) 64.657 RT
64.657 hm
(identifier) 89.857 RT
EOS
-22.509 vm
BOS
(identifier) 149.762 RT
149.762 hm
( @  ) 124.562 RT
124.562 hm
(identifier) 149.762 RT
EOS
-22.509 vm
BOS
(identifier) 94.897 RT
94.897 hm
( @  ) 69.697 RT
69.697 hm
(identifier) 94.897 RT
94.897 hm
( :  ) 69.697 RT
69.697 hm
(identifier) 94.897 RT
EOS
-22.509 vm
BOS
(identifier) 67.784 RT
67.784 hm
( @  ) 42.584 RT
42.584 hm
(identifier) 67.784 RT
67.784 hm
( :  ) 42.584 RT
42.584 hm
(character-string) 92.984 RT
92.984 hm
( .  ) 42.584 RT
42.584 hm
(identifier) 67.784 RT
EOS
EOS
455.041 hm
( .  ) 51.394 RT
51.394 hm
(identifier) 76.594 RT
76.594 hm
18.816 -3.692 -18.816 3 339.210 AT
BOS
( [  ) 87.352 RT
87.352 hm
(<integer value>) 133.552 RT
133.552 hm
( ]  ) 87.352 RT
EOS
-22.509 vm
BOS
( [  ) 43.171 RT
43.171 hm
(<integer value>) 89.371 RT
89.371 hm
( ,  ) 43.171 RT
43.171 hm
(<integer value>) 89.371 RT
89.371 hm
( ]  ) 43.171 RT
EOS
-15.123 vm
308.256 EA
EOS
EOS
-120.104 vm
BOS
(identifier) 118.337 RT
118.337 hm
( .  ) 93.137 RT
93.137 hm
(identifier) 118.337 RT
118.337 hm
( .  ) 93.137 RT
93.137 hm
(identifier) 118.337 RT
118.337 hm
18.816 -3.692 -18.816 3 380.953 AT
BOS
( [  ) 101.266 RT
101.266 hm
(<integer value>) 147.466 RT
147.466 hm
( ]  ) 101.266 RT
EOS
-22.509 vm
BOS
( [  ) 51.520 RT
51.520 hm
(<integer value>) 97.720 RT
97.720 hm
( ,  ) 51.520 RT
51.520 hm
(<integer value>) 97.720 RT
97.720 hm
( ]  ) 51.520 RT
EOS
-15.123 vm
349.999 EA
EOS
EOS
-112.719 vm
BOS
78.780 56.271 33.763 11.254 -11.254 -33.763 -56.271 -78.780 8 576.511 AT
(character-string) 545.557 RT
-22.509 vm
BOS
(character-string) 207.052 RT
207.052 hm
( .  ) 156.652 RT
156.652 hm
(identifier) 181.852 RT
EOS
-22.509 vm
(identifier) 545.557 RT
-22.509 vm
BOS
(identifier) 190.252 RT
190.252 hm
( :  ) 165.052 RT
165.052 hm
(identifier) 190.252 RT
EOS
-22.509 vm
BOS
(identifier) 114.151 RT
114.151 hm
( :  ) 88.951 RT
88.951 hm
(character-string) 139.351 RT
139.351 hm
( .  ) 88.951 RT
88.951 hm
(identifier) 114.151 RT
EOS
-22.509 vm
BOS
(identifier) 190.252 RT
190.252 hm
( @  ) 165.052 RT
165.052 hm
(identifier) 190.252 RT
EOS
-22.509 vm
BOS
(identifier) 119.191 RT
119.191 hm
( @  ) 93.991 RT
93.991 hm
(identifier) 119.191 RT
119.191 hm
( :  ) 93.991 RT
93.991 hm
(identifier) 119.191 RT
EOS
-22.509 vm
BOS
(identifier) 85.137 RT
85.137 hm
( @  ) 59.937 RT
59.937 hm
(identifier) 85.137 RT
85.137 hm
( :  ) 59.937 RT
59.937 hm
(character-string) 110.337 RT
110.337 hm
( .  ) 59.937 RT
59.937 hm
(identifier) 85.137 RT
EOS
EOS
576.511 hm
( .  ) 172.864 RT
172.864 hm
( *  ) 172.864 RT
EOS
EOS
-465.647 vm
BOS
( @  ) 41.115 RT
41.115 hm
172.771 60.052 -60.052 -172.771 4 912.078 AT
BOS
(identifier) 309.254 RT
309.254 hm
18.816 -3.692 -18.816 3 571.870 AT
BOS
( [  ) 164.905 RT
164.905 hm
(<integer value>) 211.105 RT
211.105 hm
( ]  ) 164.905 RT
EOS
-22.509 vm
BOS
( [  ) 89.703 RT
89.703 hm
(<integer value>) 135.903 RT
135.903 hm
( ,  ) 89.703 RT
89.703 hm
(<integer value>) 135.903 RT
135.903 hm
( ]  ) 89.703 RT
EOS
-15.123 vm
540.916 EA
EOS
EOS
-112.719 vm
BOS
78.780 56.271 33.763 11.254 -11.254 -33.763 -56.271 -78.780 8 444.762 AT
(character-string) 413.808 RT
-22.509 vm
BOS
(character-string) 163.136 RT
163.136 hm
( .  ) 112.736 RT
112.736 hm
(identifier) 137.936 RT
EOS
-22.509 vm
(identifier) 413.808 RT
-22.509 vm
BOS
(identifier) 146.336 RT
146.336 hm
( :  ) 121.136 RT
121.136 hm
(identifier) 146.336 RT
EOS
-22.509 vm
BOS
(identifier) 87.802 RT
87.802 hm
( :  ) 62.602 RT
62.602 hm
(character-string) 113.002 RT
113.002 hm
( .  ) 62.602 RT
62.602 hm
(identifier) 87.802 RT
EOS
-22.509 vm
BOS
(identifier) 146.336 RT
146.336 hm
( @  ) 121.136 RT
121.136 hm
(identifier) 146.336 RT
EOS
-22.509 vm
BOS
(identifier) 92.842 RT
92.842 hm
( @  ) 67.642 RT
67.642 hm
(identifier) 92.842 RT
92.842 hm
( :  ) 67.642 RT
67.642 hm
(identifier) 92.842 RT
EOS
-22.509 vm
BOS
(identifier) 66.315 RT
66.315 hm
( @  ) 41.115 RT
41.115 hm
(identifier) 66.315 RT
66.315 hm
( :  ) 41.115 RT
41.115 hm
(character-string) 91.515 RT
91.515 hm
( .  ) 41.115 RT
41.115 hm
(identifier) 66.315 RT
EOS
EOS
444.762 hm
( .  ) 41.115 RT
41.115 hm
(identifier) 66.315 RT
66.315 hm
18.816 -3.692 -18.816 3 328.931 AT
BOS
( [  ) 83.926 RT
83.926 hm
(<integer value>) 130.126 RT
130.126 hm
( ]  ) 83.926 RT
EOS
-22.509 vm
BOS
( [  ) 41.115 RT
41.115 hm
(<integer value>) 87.315 RT
87.315 hm
( ,  ) 41.115 RT
41.115 hm
(<integer value>) 87.315 RT
87.315 hm
( ]  ) 41.115 RT
EOS
-15.123 vm
297.977 EA
EOS
EOS
-120.104 vm
BOS
(identifier) 111.485 RT
111.485 hm
( .  ) 86.285 RT
86.285 hm
(identifier) 111.485 RT
111.485 hm
( .  ) 86.285 RT
86.285 hm
(identifier) 111.485 RT
111.485 hm
18.816 -3.692 -18.816 3 374.101 AT
BOS
( [  ) 98.982 RT
98.982 hm
(<integer value>) 145.182 RT
145.182 hm
( ]  ) 98.982 RT
EOS
-22.509 vm
BOS
( [  ) 50.149 RT
50.149 hm
(<integer value>) 96.349 RT
96.349 hm
( ,  ) 50.149 RT
50.149 hm
(<integer value>) 96.349 RT
96.349 hm
( ]  ) 50.149 RT
EOS
-15.123 vm
343.147 EA
EOS
EOS
-112.719 vm
BOS
78.780 56.271 33.763 11.254 -11.254 -33.763 -56.271 -78.780 8 562.806 AT
(character-string) 531.852 RT
-22.509 vm
BOS
(character-string) 202.484 RT
202.484 hm
( .  ) 152.084 RT
152.084 hm
(identifier) 177.284 RT
EOS
-22.509 vm
(identifier) 531.852 RT
-22.509 vm
BOS
(identifier) 185.684 RT
185.684 hm
( :  ) 160.484 RT
160.484 hm
(identifier) 185.684 RT
EOS
-22.509 vm
BOS
(identifier) 111.410 RT
111.410 hm
( :  ) 86.210 RT
86.210 hm
(character-string) 136.610 RT
136.610 hm
( .  ) 86.210 RT
86.210 hm
(identifier) 111.410 RT
EOS
-22.509 vm
BOS
(identifier) 185.684 RT
185.684 hm
( @  ) 160.484 RT
160.484 hm
(identifier) 185.684 RT
EOS
-22.509 vm
BOS
(identifier) 116.450 RT
116.450 hm
( @  ) 91.250 RT
91.250 hm
(identifier) 116.450 RT
116.450 hm
( :  ) 91.250 RT
91.250 hm
(identifier) 116.450 RT
EOS
-22.509 vm
BOS
(identifier) 83.179 RT
83.179 hm
( @  ) 57.979 RT
57.979 hm
(identifier) 83.179 RT
83.179 hm
( :  ) 57.979 RT
57.979 hm
(character-string) 108.379 RT
108.379 hm
( .  ) 57.979 RT
57.979 hm
(identifier) 83.179 RT
EOS
EOS
562.806 hm
( .  ) 159.159 RT
159.159 hm
( *  ) 159.159 RT
EOS
EOS
EOS
EOS
EOS
-585.663 vm
BOS
78.780 56.271 33.763 11.254 -11.254 -33.763 -56.271 -78.780 8 759.106 AT
(character-string) 728.152 RT
-22.509 vm
BOS
(character-string) 267.917 RT
267.917 hm
( .  ) 217.517 RT
217.517 hm
(identifier) 242.717 RT
EOS
-22.509 vm
(identifier) 728.152 RT
-22.509 vm
BOS
(identifier) 251.117 RT
251.117 hm
( :  ) 225.917 RT
225.917 hm
(identifier) 251.117 RT
EOS
-22.509 vm
BOS
(identifier) 150.670 RT
150.670 hm
( :  ) 125.470 RT
125.470 hm
(character-string) 175.870 RT
175.870 hm
( .  ) 125.470 RT
125.470 hm
(identifier) 150.670 RT
EOS
-22.509 vm
BOS
(identifier) 251.117 RT
251.117 hm
( @  ) 225.917 RT
225.917 hm
(identifier) 251.117 RT
EOS
-22.509 vm
BOS
(identifier) 155.710 RT
155.710 hm
( @  ) 130.510 RT
130.510 hm
(identifier) 155.710 RT
155.710 hm
( :  ) 130.510 RT
130.510 hm
(identifier) 155.710 RT
EOS
-22.509 vm
BOS
(identifier) 111.222 RT
111.222 hm
( @  ) 86.022 RT
86.022 hm
(identifier) 111.222 RT
111.222 hm
( :  ) 86.022 RT
86.022 hm
(character-string) 136.422 RT
136.422 hm
( .  ) 86.022 RT
86.022 hm
(identifier) 111.222 RT
EOS
EOS
759.106 hm
( .  ) 355.460 RT
355.460 hm
( *  ) 355.460 RT
EOS
EOS
732.366 vm
1500.979 EA
EOS
EOS
EOS
EOS
#ebnf2ps#end
%%EOF
