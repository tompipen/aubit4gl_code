
#  ==========================================================================
#  Main makefile for compile and install of fgldoc tools
#
#  Developed by Sergio Ferreira, Lisbon, Portugal
#
#  $Id: Makefile.in,v 1.10 2003-02-04 05:21:57 afalout Exp $
#
#  ==========================================================================

include FgldocDefs.mk

# =========================================================================
#                           Settings
# =========================================================================

ALL				=parser manager
ALL.INSTALL		=install.parser install.manager

ifneq "@TOMCAT_DIR@" "no"
ifneq "${ANT}" "no"
ifneq "${JAVAC}" "no"
	ALL			+=browser
	ALL.INSTALL	+=install.browser
endif
endif
endif

#list of all targets taht would install _ALL_ Perl modules Doc4GL needs:
ALL.PERLMODS	= install.cpan install.dbi install.tk install.unit \
				install.dbd-informix install.dumper

.PHONY:all parser manager browser install clean install.parser \
		install.manager install.browser deinstall install.cpan install.dbi \
		install.tk install.unit install.dbd-informix missing.perlmods \
        all.perlmods


# =========================================================================
#                        	   Targets
# =========================================================================

all: ${ALL}
	@echo ""
	@echo "+--------------------------------------------------------------------+"
	@echo "| Doc4gl default targets :                                           |"
	@echo "| ${ALL} "
	@echo "| successfully compiled. Execute 'make install' to install it.       |"
	@echo "+--------------------------------------------------------------------+"
	@echo ""

parser:
	$(MAKE) -C parser all

browser:
	$(MAKE) -C browser all

manager:
#This will invoke makefile created by Perl MakeMaker from Makefile.PL:
	$(MAKE) -C manager
	@echo ""
	@echo "+--------------------------------------------------------------------+"
	@echo "|             Doc4gl manager successfully compiled.                  |"
	@echo "+--------------------------------------------------------------------+"
	@echo ""


# =========================================================================
#                           	Install
# =========================================================================

install: ${ALL.INSTALL}
	@echo ""
	@echo "+--------------------------------------------------------------------+"
	@echo "| Doc4gl default install targets :                                   |"
	@echo "| ${ALL.INSTALL} "
	@echo "| installed. See User's manual for usage instructions                |"
	@echo "+--------------------------------------------------------------------+"
	@echo ""

install.parser:
	$(MAKE) -C parser install

install.browser:
	$(MAKE) -C browser install

install.manager:
#This will invoke makefile created by Perl MakeMaker from Makefile.PL, so we
#need to do some preparation work here:
	mkdir -p $(PERL_MODULE_DIR)/img
	mkdir -p $(PERL_MODULE_DIR)/L10N
	${INSTALL} manager/fgldoc ${BINDIR}
	chmod a+x ${BINDIR}/fgldoc
#Note that Perl generated make file will install to:
#Installing /usr/local/lib/perl5/site_perl/5.8.0/FglDocumenter/img/ftv2lastnode.gif
#Installing /usr/local/bin/fgldoc
#Maybe I should use PREFIX=xyz to controll install location?
	$(MAKE) -C manager install
#This will be installed by Perl generated makefile, now obsolete (check!)
#	${INSTALL} manager/FglDocumenter/*.pm $(PERL_MODULE_DIR)
#	${INSTALL} manager/FglDocumenter/img/*.gif $(PERL_MODULE_DIR)/img
#	${INSTALL} manager/FglDocumenter/L10N/*.pm $(PERL_MODULE_DIR)/L10N
	@echo ""
	@echo "+--------------------------------------------------------------------+"
	@echo "|             Doc4gl manager successfully instaled to:               |"
	@echo "| fgldoc executable in : ${BINDIR}"
	@echo "| Perl modules in      : $(PERL_MODULE_DIR)"
	@echo "+--------------------------------------------------------------------+"
	@echo ""

# =========================================================================
#                           Deinstall
# =========================================================================
deinstall: deinstall.manager
	$(MAKE) -C parser deinstall
#Perl generated make file has no deinstall target:
#	$(MAKE) -C manager deinstall
	$(MAKE) -C browser deinstall

deinstall.manager:
	cd ${PERL_MODULE_DIR}; rm -f ${MGR_PM_FILES} ${MGR_PRG} *.bak
	cd ${PERL_MODULE_DIR}/img; rm -f ${MGR_IMG_FILES}
	cd ${PERL_MODULE_DIR}/L10N; rm -f ${MGR_PM_L10N_FILES} *.bak
	cd ${PERL_MODULE_DIR}/test; rm -f ${MGR_PM_TEST_FILES} *.bak
	rm -f ${BINDIR}/${MGR_PRG}
	rmdir ${PERL_MODULE_DIR}/img
	rmdir ${PERL_MODULE_DIR}/L10N
	rmdir ${PERL_MODULE_DIR}/test
	rmdir ${PERL_MODULE_DIR}
	@echo ""
	@echo "+--------------------------------------------------------------------+"
	@echo "|             Doc4gl manager successfully de-installed.              |"
	@echo "+--------------------------------------------------------------------+"
	@echo ""

# =========================================================================
#                                Clean
# =========================================================================
clean: clean.etc clean.sql clean.manager
	$(MAKE) -C parser clean
	$(MAKE) -C browser clean
	${RM} *.bak

clean.etc:
	cd etc; ${RM} *.bak stamp-h

clean.sql:
	cd sql; ${RM} *.bak

clean.manager:
	$(MAKE) -C manager clean
#Perl created makefile - from Makefile.PL - will rename Makefle to Makefile.old
#so we have to restore that:
	cd manager; mv Makefile.old Makefile
	cd manager; ${RM} *.bak pm_to_blib
	cd manager/FglDocumenter; ${RM} *.bak
	cd manager/FglDocumenter/test; ${RM} *.bak
	rm -rf blib

#delete everything not in the distribution (CVS)
distclean: clean
	${RM} libtool config.log config.status Makefile

#Files created by configure script
clean.config: clean.makefile
	${RM} etc/fgldocrc FgldocDefs.mk pm_to_blib
	rm -rf manager/blib etc/doc4gl_config.h

#Make files created by configure script:
clean.makefile:
	${RM} parser/Makefile browser/Makefile manager/Makefile manager/Makefile.old

# =========================================================================
#                           Install Perl modules
# =========================================================================

#Fixme: is there a way to accept all defaults when installing using CPAN
#and avoid all this prompting?

#This will install _ALL_ Perl modules Doc4GL needs:
all.perlmods: ${ALL.PERLMODS}

#This will install only Perl modules that are detected as missing by Autoconf:
missing.perlmods: @MISSING_PERLMODS@
	@echo ""
	@echo "+--------------------------------------------------------------------+"
	@echo "|                          *** NOTE ***                              |"
	@echo "|         Doc4gl missing Perl modules installation finished          |"
	@echo "|       Please re-run 'configure' to update changed configureation   |"
	@echo "+--------------------------------------------------------------------+"
	@echo ""

#if you're using ActivePerl on Windows, the PPM (Perl Package Manager) has
#much of the same functionality as CPAN.pm.
#manual: http://search.cpan.org/author/JHI/perl-5.8.0/lib/CPAN.pm
install.tk:
	${PERL} -MCPAN -e 'install Bundle::Tk'

install.unit:
	${PERL} -MCPAN -e 'install Test::Unit'

install.dbd-informix:
ifneq "@DBD_INFORMIX_USERNAME@" ""
ifneq "@DBD_INFORMIX_PASSWORD@" ""
	(export DBI_DBNAME=@DOC4GL_DB@; \
	export DBD_INFORMIX_DATABASE=@DOC4GL_DB@; \
	export DBD_INFORMIX_USERNAME=@DBD_INFORMIX_USERNAME@; \
	export DBD_INFORMIX_PASSWORD=@DBD_INFORMIX_PASSWORD@; \
	${PERL} -MCPAN -e 'install DBD::Informix')
else
	@echo "ERROR: Informix DB password not specified. Cannot install DBD::Informix"
	@echo "re-run configure like this, to specify them:"
	@echo "./configure --with-ifx-uname=MyUserName --with-ifx-pwd=MyPassword"
endif
else
	@echo "ERROR: Informix DB user name not specified. Cannot install DBD::Informix"
	@echo "re-run configure like this, to specify them:"
	@echo "./configure --with-ifx-uname=MyUserName --with-ifx-pwd=MyPassword"
endif

install.cpan:
	${PERL} -MCPAN -e 'install Bundle::CPAN'

install.dbi:
	${PERL} -MCPAN -e 'install Bundle::DBI'

install.dumper:
	${PERL} -MCPAN -e 'install XML::Dumper'

install.maketxt:
	${PERL} -MCPAN -e 'install Locale::Maketext'

# =========================================================================
#                           Install Tomcat and it's dependencies
# =========================================================================

install.jdk: ${BASE}/${BLACKDOWN_JSDK}
	@echo ""
	@echo "Answer the questions and the JDK will uncompress to ${BASE}:"
	@echo ""
	cd ${BASE}; ./${BLACKDOWN_JSDK}
	@echo ""
	@echo "Plese set in your configuration scripts ('profile' or equivalent):"
	@echo "  export JAVA_HOME=${BASE}/j2sdk1.3.1 ---VERIFY---!"
	@echo '  export PATH=$PATH:$JAVA_HOME/bin'
	@echo ""

${BASE}/${BLACKDOWN_JSDK}:
	cd ${BASE}; ${WGET} ${BLACKDOWN_JSDK_PATH}/${BLACKDOWN_JSDK}
	chmod +x ${BASE}/${BLACKDOWN_JSDK}
${TOMCAT4_RPM}:
	${WGET} ${JAKARTA_RPM_PATH}/${TOMCAT4_RPM}
${SERVLETAPI_RPM}:
	${WGET} ${JAKARTA_RPM_PATH}/${SERVLETAPI_RPM}
${REGEX_RPM}:
	${WGET} ${JAKARTA_RPM_PATH}/${REGEX_RPM}
${XERCES_RPM}:
	${WGET} ${JAKARTA_RPM_PATH}/${XERCES_RPM}
${ADMINWEBAPPS_RPM}:
	${WGET} ${JAKARTA_RPM_PATH}/${ADMINWEBAPPS_RPM}
${WEBAPPS}:
	${WGET} ${JAKARTA_RPM_PATH}/${WEBAPPS}

get.tomcat: ${TOMCAT_RPMS}
install.tomcat:  ${TOMCAT_RPMS}
	${RPM} -i $^
	@echo "Tomcat Notes:"
	@echo "If you wanted TomCat started at boot, run:"
	@echo "  /sbin/chkconfig --add tomcat4"
	@echo "  or"
	@echo "  ntsysv"
	@echo ""
	@echo "To manually control TomCat start-up:"
	@echo "  /etc/rc.d/init.d/tomcat4 start"
	@echo "  /etc/rc.d/init.d/tomcat4 stop"
	@echo "  /etc/rc.d/init.d/tomcat4 restart"
	@echo ""
	@echo "To Confirm Basic Service is Running:"
	@echo "Start Tomcat Point browser at :"
	@echo "  http://localhost:8080 and try to view available services."
	@echo ""
	@echo "If TomCat fail to start, examine:"
	@echo "  /var/log/tomcat4/catalina.out"
	@echo ""
	@echo "Now edit /etc/tomcat4/tomcat4.conf to reflect your system's configuration."
	@echo "Also edit/create /etc/java/java.conf to define your default JDK"
	@echo "Then re-run Doc4GL configure script, to detect changes in the configuration."
	@echo ""


#NOT TESTED!!!
install.ant:
	wget http://jakarta.apache.org/builds/jakarta-ant/release/v1.4.1/bin/jakarta-ant-1.4.1-bin.tar.gz
	wget http://jakarta.apache.org/builds/jakarta-ant/release/v1.4.1/bin/jakarta-ant-1.4.1-optional.jar
	tar --gunzip -xf jakarta-ant-1.4.1-bin.tar.gz
	export ANT_HOME=$BASE/jakarta-ant-1.4.1
	export PATH=$PATH:$ANT_HOME/bin
	export CLASSPATH=$CLASSPATH:$ANT_HOME/lib/ant.jar:$ANT_HOME/lib/crimson.jar:$ANT_HOME/lib/jaxp.jar
	mv jakarta-ant-1.4.1-optional.jar $ANT_HOME/lib/.
	cp /usr/share/java/xerces-j1-1.4.4.jar $ANT_HOME/lib/xerces.jar
#cp /var/tomcat4/common/lib/xerces.jar $ANT_HOME/lib/.
	cp $BASE/jakarta-ant-1.4.1/lib/jakarta-ant-1.4.1-optional.jar $BASE/jakarta-ant-1.4.1/lib/optional.jar

#NOT TESTED!!!
install.junit:
	wget http://download.sourceforge.net/junit/junit3.7.zip
	unzip $BASE/junit3.7.zip
	export JUNIT_HOME=$BASE/junit3.7
	export CLASSPATH=$CLASSPATH:$JUNIT_HOME/junit.jar


${IFX_JDBC_PKG}:
	${WGET} ${IFX_JDBC_PKG_PATH}/${IFX_JDBC_PKG}

install.informix_jdbc: ${IFX_JDBC_PKG}
	mkdir -p /tmp/ifxjdbc
	unzip ${IFX_JDBC_PKG} -d /tmp/ifxjdbc
	${JAVA} -cp /tmp/ifxjdbc/setup.jar run -silent -P product.installLocation=${INFORMIXDIR}/jdbc
	cp ${INFORMIXDIR}/jdbc/lib/ifxjdbc.jar ${JAVA_SHARED}
	cp ${INFORMIXDIR}/jdbc/lib/ifxjdbc.jar ${TOMCAT_DIR}/shared/lib
#FIXME: any TomCat config files to edit? (server.xml?) to make this JDBC jar work?
	@@echo "add the following line to your profile:"
	@echo 'export CLASSPATH=$INFORMIXDIR/jdbc/lib/ifxjdbc.jar:$CLASSPATH'
#ALTERNATIVE:
#if we unpack this jar like this:
#	cd ${INFORMIXDIR}/jdbc/lib; jar xvf ifxjdbc.jar
#we can copy all filed to ${JAVA_SHARED}, and set CLASSPATH to ${JAVA_SHARED}

# =============================== EOF ======================================
