/*
 * DbDocGui.java
 *
 */

package org.aubit4gl.dbdocumenter.gui;

import org.aubit4gl.dbdocumenter.repository.CreateRepository;
import org.aubit4gl.dbdocumenter.actions.ErrorHandler;
import org.aubit4gl.dbdocumenter.actions.Controler;

/**
 * The GUI version of db documenter, where the all the adminitrative 
 * actions could be executed.
 *
 * @author  Sergio Ferreira
 */
public class DbDocGui extends javax.swing.JFrame {
    
    /** Creates new form DbDocGui */
    public DbDocGui() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        createMI = new javax.swing.JMenuItem();
        connectMI = new javax.swing.JMenuItem();
        connectOpDbMI = new javax.swing.JMenuItem();
        genScriptMI = new javax.swing.JMenuItem();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jMenu1.setText("File");
        jMenuItem1.setText("Exit");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Repository");
        createMI.setText("Create");
        createMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createMIActionPerformed(evt);
            }
        });

        jMenu2.add(createMI);

        connectMI.setText("Connect");
        jMenu2.add(connectMI);

        connectOpDbMI.setText("Connect operation DB");
        jMenu2.add(connectOpDbMI);

        genScriptMI.setText("Generate SQL Script");
        jMenu2.add(genScriptMI);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }//GEN-END:initComponents

    private void createMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createMIActionPerformed
        // If the database connection is not setted open a dialog
        // Open a form where the user should define the DB name id not setted
        CreateRepository repository = new CreateRepository();
        repository.setConnection(controler.getRepositoryConnection());
        repository.setErrorHandler(errorHandler);
        repository.create();
    }//GEN-LAST:event_createMIActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new DbDocGui().show();
    }
    
    /** Getter for property controler.
     * @return Value of property controler.
     *
     */
    public Controler getControler() {
        return this.controler;
    }    
    
    /** Setter for property controler.
     * @param controler New value of property controler.
     *
     */
    public void setControler(Controler controler) {
        this.controler = controler;
    }
    
    /** Getter for property errorHandler.
     * @return Value of property errorHandler.
     *
     */
    public ErrorHandler getErrorHandler() {
        return this.errorHandler;
    }
    
    /** Setter for property errorHandler.
     * @param errorHandler New value of property errorHandler.
     *
     */
    public void setErrorHandler(ErrorHandler errorHandler) {
        this.errorHandler = errorHandler;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem connectMI;
    private javax.swing.JMenuItem connectOpDbMI;
    private javax.swing.JMenuItem createMI;
    private javax.swing.JMenuItem genScriptMI;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    // End of variables declaration//GEN-END:variables

    /** Holds value of property controler. */
    private Controler controler;    
    
    /** Holds value of property errorHandler. */
    private ErrorHandler errorHandler;
    
}
