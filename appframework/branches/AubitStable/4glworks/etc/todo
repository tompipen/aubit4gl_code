syntax extensions:

INPUT|PIPE FROM <string expr>
    PATTERN <string expr>|DELIMITED
    [REJECT WHEN <bool expr> [[TO <string expr>|STOP]]...]
    [TRANSFORM <expr and assign list>]
    [[INTO <varlist>] [FORMAT <format clause>]| INSERT INTO TABLE]
($0....$n, $R, $F, support for $. assignment? - eg reevaluation a la awk;
consider commit interval)

SPLIT <expr> [PATTERN <expr>|DELIMITED] INTO <var list>

FOREACH [<cursor> FOR] [SELECT|EXECUTE PROCEDURE]
FOREACH [INPUT|PIPE]

CONNECT TO <expr>...
SET CONNECTION...
DISCONNECT...

FORMAT DELIMITED

hashes

PREPARE, EXECUTE, FREE? (performance reasons only, PREPARE will have USING & INTO
clauses, so that multiple executes can be done without rebinding)

stdio like ops (fopen, popen, pipe), network ops (listen, accept, connect) +
close,  READ FROM <int expr> and WRITE TO <int expr>: would allow to quickly
implement daemons/gateways

quick redirects? (OUTPUT|APPEND|PIPE|WRITE TO expr SELECT|EXECUTE PROCEDURE|
INPUT|PIPE)

construct to switch HTML output on & off (could be used to switch to other
formats too)

construct to change wrap width

functions, signals? (might be worth considering after having implemented the
REJECT and TRANSFORM clauses of INPUT/READ/PIPE FROM)

Various:
- WHENEVER ERROR applies to the INPUT and PIPE commands too, except that
  dbinfo("errno") needs to be used. the return code of the child process
  is returned by dbinfo("$?")
- decide how to change the stack structure: read format delimited can be nicely
  taken from rds dynamic sql driver (sic) with minor modifications (use cfio
  rather than stdio, pass delimiter & escape), however that returns sqlvars,
  and we need a stack structure to filter and transform, but need an
  sqlvar to assign and display
- HTML output needs context to change not only with FOREACH's, but with OUTPUT
  (etc) too, and with HTML switch (see above) as well
- children do not output to default, or the child default is null, or...
  document this
- variable wrapping limits require hrz scrollbars in iunis! available keys?
- will need to implement byte delimited format, could it by an idea to have a
  %t & %b PATTERN? - might as well display <BYTE value>
- 4gl v4 hack:
  fix 4gl4/csqdc.c on sco,
  fix indivinv on 4.x
  fix placeholders & fork in 4.x
- unify heap, tss & conversion routines
- hashes handle blob vars, and/or allow for nested hashes

- pick lists could use captions
- complete or rewrite editor! text based, rather than array of char?
- remove viewers & scrollers calls from iafil
- ipanl & scrollers handle pane (dis)abilitation
- print blobs for rds

- mkfgwgo & cbuild need infinite loop checks in nested variable substitution
- mkfgwgo & cbuild: swap brace expandion and variable evaluation
- fglpp, mkfgwgo, cbuild have if(n)defs, elif(n)defs, else, endif
- fglpp, mkfgwgo, cbuild have a mechanism to pass defines (-D) and/or
  evaluate environmental variables
- fglpp to avoid changing definitions inside strings (performance hit?) -
  forget about comments...
